cscope 15 $HOME/MySpace/gearkit               0000133114
	@Application.cpp

1 
	~"Aµliˇti⁄.h
"

2 
	~"RefPoﬁ.h
"

3 
	~"Loggî.h
"

5 
	#DEFAULT_FRAME_RATE
 60

	)

6 
«me•a˚
 
	gkô
 {

8 
	gAµliˇti⁄
::
Aµliˇti⁄
()

9 : 
‰ame_
(0)

10 , 
‰ame_øã_
(
DEFAULT_FRAME_RATE
)

11 , 
‰ame_m£c_
(1000 / 
DEFAULT_FRAME_RATE
)

12 , 
begöe_time_
(0)

13 , 
waô_time_
(0)

14 , 
vÆid_
(
Ál£
)

18 
	gAµliˇti⁄
::~
Aµliˇti⁄
()

22 
Aµliˇti⁄
::
run
()

25 
g_RefPoﬁ
->
push
(
√w
 
RefPoﬁ
());

27 
	gbegöe_time_
 = 
kô
::
time
(Ë- 
‰ame_m£c_
;

28 
DBG
("[Aµliˇti⁄]‘unËbegö_time:%d føme_m£c_:%d", 
begöe_time_
, 
‰ame_m£c_
);

30 
	gvÆid_
 = 
åue
;

33 
	gAµliˇti⁄
::
maöLo›
()

35 
begöe_time_
 +
‰ame_m£c_
;

37 ++
	g‰ame_
;

39 
logic
();

41 
uöt32_t
 
	gíd_time
 = 
kô
::
time
();

43 
uöt32_t
 
	g•¨e
 = 0;

44 i‡(
	gíd_time
 > 
	gbegöe_time_
)

47 
uöt32_t
 
	g∑s£d
 = 
íd_time
 - 
begöe_time_
;

48 i‡(
	g∑s£d
 <
‰ame_m£c_
)

50 
•¨e
 = 
‰ame_m£c_
 - 
∑s£d
;

54 
	gwaô_time_
 = 
∑s£d
 - 
‰ame_m£c_
;

60 
	g•¨e
 = 
begöe_time_
 - 
íd_time
;

63 i‡(
	gwaô_time_
 > 0)

65 i‡(
	gwaô_time_
 >
•¨e
)

67 
waô_time_
 -
•¨e
;

68 
	g•¨e
 = 0;

72 
	gwaô_time_
 = 0;

73 
	g•¨e
 -
waô_time_
;

76 i‡(
	gwaô_time_
 > 0)

77 
DBG
("[Aµliˇti⁄](maöLo›ËWAIT TIME:%d, %d\n", 
waô_time_
, 
‰ame_
);

80 i‡(
	g•¨e
 > 0)

83 
	gg_RefPoﬁ
->
gëCuºítPoﬁ
()->
˛ór
();

84 
	g•¨e
 = 
•¨eLogic
(
•¨e
);

86 i‡(
	g•¨e
 > 0)

87 
	gkô
::
¶ìp
(
•¨e
);

91 
	gAµliˇti⁄
::
°›
()

93 
vÆid_
 = 
Ál£
;

95 
	gg_RefPoﬁ
->
p›
();

98 
	gAµliˇti⁄
::
£tFømeR©e
(
øã
)

100 
‰ame_øã_
 = 
øã
;

101 
	g‰ame_m£c_
 = (1000 / 
‰ame_øã_
);

	@Application.h

1 #i‚de‡
__KIT_APPLICATION_H__


2 
	#__KIT_APPLICATION_H__


	)

4 
	~"kôsys.h
"

6 
«me•a˚
 
	gkô
 {

8 ˛as†
	cAµliˇti⁄


10 
	gpublic
:

11 
Aµliˇti⁄
();

12 
	gvútuÆ
 ~
Aµliˇti⁄
();

14 
vútuÆ
 
run
();

15 
vútuÆ
 
°›
();

16 
vútuÆ
 
logic
() = 0;

18 
vútuÆ
 
uöt32_t
 
•¨eLogic
(uöt32_à
•¨e_time
Ë{  
	g•¨e_time
; };

21 
maöLo›
();

24 
uöt32_t
 
gëFøme
(Ëc⁄° {  
	g‰ame_
; }

26 
uöt32_t
 
gëFømeR©e
(Ëc⁄° {  
	g‰ame_øã_
; }

27 
£tFømeR©e
(
uöt32_t
 
øã
);

29 
uöt32_t
 
gëFømeDñè
(Ëc⁄° {  
	g‰ame_dñè_
; }

30 
£tNextDñèZîo
(
boﬁ
 
zîo
Ë{ 
	g√xt_dñè_zîo_
 = zero; }

31 
	g¥Ÿe˘ed
:

33 
uöt32_t
 
‰ame_
;

35 
uöt32_t
 
	g‰ame_øã_
;

37 
uöt32_t
 
	g‰ame_m£c_
;

39 
uöt32_t
 
	g‰ame_dñè_
;

43 
boﬁ
 
	g√xt_dñè_zîo_
;

44 
boﬁ
 
	gvÆid_
;

45 
	g¥iv©e
:

46 
uöt32_t
 
begöe_time_
;

47 
uöt32_t
 
	gwaô_time_
;

	@base/Array.h

1 #i‚de‡
__KIT_ARRAY_H__


2 
	#__KIT_ARRAY_H__


	)

6 
«me•a˚
 
	gkô
 {

11 
	gãm∂©e
<
ty≥«me
 
	gTy≥
, c⁄° 
	gLígth
>

12 ˛as†
	cAºay


14 
	sIãm


16 
Iãm
(): 
√xt
(-2) {}

17 
√xt
;

18 
	g¥ev
;

19 
Ty≥
 
	gvÆue
;

21 
	gpublic
:

22 
Aºay
(Ë: 
cou¡_
(0), 
hód_
(-1), 
èû_
(-1), 
pos_
(-1)

26 
boﬁ
 
gë
(
ödex
, 
Ty≥
& 
vÆ
)

28 
	gIãm
& 
	gôem
 = 
¨øy_
[
ödex
];

29 i‡(
	gôem
.
	g√xt
 == -2)

30  
Ál£
;

31 
	gvÆ
 = 
ôem
.
vÆue
;

34 
add
(
ödex
, c⁄° 
Ty≥
& 
vÆ
)

36 
	gIãm
& 
	gôem
 = 
¨øy_
[
ödex
];

37 i‡(
	gôem
.
	g√xt
 == -2)

39 
ôem
.
¥ev
 = 
èû_
;

40 
	gôem
.
	gvÆue
 = 
vÆ
;

41 
	gôem
.
	g√xt
 = -1;

42 i‡(
	ghód_
 == -1)

43 
hód_
 = 
ödex
;

45 i‡(
	gèû_
 != -1)

46 
¨øy_
[
èû_
].
√xt
 = 
ödex
;

47 
	gèû_
 = 
ödex
;

48 ++
	gcou¡_
;

52 
	gôem
.
	gvÆue
 = 
vÆ
;

56 
dñ
(
ödex
)

58 
	gIãm
& 
	gôem
 = 
¨øy_
[
ödex
];

59 
	g√xt
 = 
ôem
.
√xt
;

60 
	g¥ev
 = 
ôem
.
¥ev
;

61 i‡(
	g√xt
 == -2)

63 i‡(
	g¥ev
 != -1)

64 
¨øy_
[
¥ev
].
√xt
 =Çext;

65 i‡(
	g√xt
 != -1)

66 
¨øy_
[
√xt
].
¥ev
 =Örev;

67 i‡(
	ghód_
 =
ödex
)

68 
hód_
 = 
√xt
;

69 i‡(
	gèû_
 =
ödex
)

70 
èû_
 = 
¥ev
;

71 
	gôem
.
	g√xt
 = -2;

72 
	gôem
.
	g¥ev
 = -1;

73 --
	gcou¡_
;

75 
cou¡
(Ëc⁄° {  
	gcou¡_
; }

77 
ª£tNext
(Ë{ 
	gpos_
 = 
hód_
; }

79 
boﬁ
 
√xt
(
Ty≥
& 
vÆ
)

81 i‡(
	gpos_
 < 0)

82  
	gÁl£
;

83 
	gcur
 = 
pos_
;

84 
	gpos_
 = 
¨øy_
[
cur
].
√xt
;

85 
gë
(
cur
, 
vÆ
);

86  
gë
(
cur
, 
vÆ
);

88 
˛ór
()

90 
	gpos
 = 
hód_
;

91 
	gpos
 >= 0)

93 
Iãm
& 
ôem
 = 
¨øy_
[
pos
];

94 
	gpos
 = 
ôem
.
√xt
;

95 
	gôem
.
	g√xt
 = -2;

96 
	gôem
.
	g¥ev
 = -1;

98 
	ghód_
 = 
èû_
 = -1;

99 
	gcou¡_
 = 0;

102 
	g¥iv©e
:

103 
cou¡_
;

104 
	ghód_
;

105 
	gèû_
;

106 
	gpos_
;

107 
Iãm
 
	g¨øy_
[
Lígth
];

	@base/Buffer.cpp

1 
	~"Buf„r.h
"

2 
	~<°dlib.h
>

4 
«me•a˚
 
	gkô
 {

6 
	gBuf„r
::
Buf„r
()

7 : 
hód_
(
NULL
)

8 , 
èû_
(
NULL
)

9 , 
wrôe_cur_
(
NULL
)

10 , 
ªad_cur_
(
NULL
)

14 
	gBuf„r
::~
Buf„r
()

16 i‡(
hód_
)

18 
‰ì
(
hód_
);

22 
	gBuf„r
::
öô
(
uöt32_t
 
size
)

24 
hód_
 = (*)
mÆloc
((Ë* 
size
);

25 
	gèû_
 = 
hód_
 + 
size
;

26 
	gwrôe_cur_
 = 
hód_
;

27 
	gªad_cur_
 = 
hód_
;

30 
boﬁ
 
	gBuf„r
::
wrôeBuf„r
(c⁄° * 
buf
, 
uöt32_t
 
size
)

32 if(
	gwrôe_cur_
 + 
	gsize
 <
èû_
)

34 
mem˝y
(
wrôe_cur_
, 
buf
, 
size
);

35 
	gwrôe_cur_
 +
size
;

36  
	gåue
;

38 
uöt32_t
 
	gªu£_size
 = 
ªad_cur_
 - 
hód_
 + 
èû_
 - 
wrôe_cur_
;

39 if(
	gªu£_size
 >
size
)

41 
uöt32_t
 
rsz
 = 
gëRódabÀSize
();

42 
memmove
(
hód_
, 
ªad_cur_
, 
rsz
 );

43 
	gªad_cur_
 = 
hód_
;

44 
	gwrôe_cur_
 = 
ªad_cur_
 + 
rsz
;

45 
mem˝y
(
wrôe_cur_
, 
buf
, 
size
);

46 
	gwrôe_cur_
 +
size
;

48  
	gÁl£
;

51 
boﬁ
 
	gBuf„r
::
ªadBuf„r
(* 
buf
, 
uöt32_t
 
size
)

53 if(
	gªad_cur_
 + 
	gsize
 > 
	gèû_
)

54  
	gÁl£
;

55 
mem˝y
(
buf
, 
ªad_cur_
, 
size
);

56 
	gªad_cur_
 +
size
;

57  
	gåue
;

	@base/Buffer.h

1 #i‚de‡
__KIT_BUFFER_H__


2 
	#__KIT_BUFFER_H__


	)

4 
	~"Ref.h
"

5 
	~"kôsys.h
"

6 
	~<°rög.h
>

10 
«me•a˚
 
	gkô
 {

12 ˛as†
	cBuf„r
 : 
public
 
Ref


14 
public
:

15 
KIT_CREATE_FUNC
(
Buf„r
);

17 
Buf„r
();

18 
	gvútuÆ
 ~
Buf„r
();

20 
öô
(
uöt32_t
 
size
);

22 
ª£t
(Ë{ 
	gwrôe_cur_
 = 
hód_
; 
	gªad_cur_
 = head_; };

23 
uöt32_t
 
gëSize
() const;

24 
uöt32_t
 
gëWrôãnSize
() const;

25 
uöt32_t
 
gëWrôabÀSize
() const;

26 
uöt32_t
 
gëRódabÀSize
() const;

27 
skùWrôe
(
uöt32_t
 
size
Ë{ 
	gwrôe_cur_
 += size; }

28 
skùRód
(
uöt32_t
 
size
Ë{ 
	gªad_cur_
 += size; }

30 
boﬁ
 
wrôeBuf„r
(c⁄° * 
buf
, 
uöt32_t
 
size
);

31 
boﬁ
 
ªadBuf„r
(* 
buf
, 
uöt32_t
 
size
);

33 
	gãm∂©e
<
ty≥«me
 
	gT
>

34 
	gBuf„r
& 
	g›î©‹
<<(
T
 
	gv
);

36 
	gãm∂©e
<
ty≥«me
 
	gT
>

37 
	gBuf„r
& 
	g›î©‹
>>(
	gT
& 
	gv
);

39 
	gpublic
:

40 * 
hód_
;

41 * 
	gèû_
;

42 * 
	gwrôe_cur_
;

43 * 
	gªad_cur_
;

46 
ölöe
 
uöt32_t
 
	gBuf„r
::
	$gëSize
() const

48  (
uöt32_t
)(
èû_
 - 
hód_
);

49 
	}
}

51 
ölöe
 
uöt32_t
 
	gBuf„r
::
	$gëWrôãnSize
() const

53  (
uöt32_t
)(
wrôe_cur_
 - 
èû_
);

54 
	}
}

56 
ölöe
 
uöt32_t
 
	gBuf„r
::
	$gëWrôabÀSize
() const

58  (
uöt32_t
)(
èû_
 - 
wrôe_cur_
);

59 
	}
}

61 
ölöe
 
uöt32_t
 
	gBuf„r
::
	$gëRódabÀSize
() const

63  (
uöt32_t
)(
wrôe_cur_
 - 
ªad_cur_
);

64 
	}
}

66 
	gãm∂©e
<
ty≥«me
 
	gT
>

67 
ölöe
 
	gBuf„r
& Buf„r::
›î©‹
<<(
T
 
v
)

69 
boﬁ
 
ªs
 = 
wrôeBuf„r
(&
v
, (
T
));

71  *
	gthis
;

74 
	gãm∂©e
<>

75 
ölöe
 
	gBuf„r
& Buf„r::
›î©‹
<< <c⁄° *>(c⁄° * 
v
)

77 
uöt16_t
 
size
 = (uöt16_t)
°æí
(
v
);

78 (*
	gthis
Ë<< 
	gsize
;

79 
wrôeBuf„r
(
v
, (
uöt32_t
)
size
);

80  *
	gthis
;

83 
	gãm∂©e
<
ty≥«me
 
	gT
>

84 
ölöe
 
	gBuf„r
& Buf„r::
›î©‹
>>(
T
& 
v
)

86 
buf
[(
T
)];

87 if(
ªadBuf„r
(
buf
, (
T
)))

88 
	gv
 = *((
T
*)
buf
);

89  *
	gthis
;

92 
	gãm∂©e
<>

93 
ölöe
 
	gBuf„r
& Buf„r::
›î©‹
>> <*>(*& 
v
)

95 * 
buf
 = 
v
;

96 
uöt16_t
 
	gsize
;

97 (*
	gthis
Ë>> 
	gsize
;

98 
ªadBuf„r
(
buf
, 
size
);

99  *
	gthis
;

	@base/BufferPool.cpp

1 
	~"Buf„rPoﬁ.h
"

3 
«me•a˚
 
	gkô
 {

5 
	gBuf„rPoﬁ
::
Buf„rPoﬁ
()

9 
Buf„rPoﬁ
::~BufferPool()

13 
Buf„r
* 
Buf„rPoﬁ
::
¸óãBuf„r
(
uöt32_t
 
size
)

15 
öt32_t
 
ödex
 = 0;

16 
uöt32_t
 
	gfix_size
 = 8;

17 
	gfix_size
 >
size
)

19 ++
ödex
;

20 
	gfix_size
 <<= 1;

23 
Buf„r
* 
	gbuf
 = 
NULL
;

24 i‡(
	gödex
 < 
	gBUFFER_QUEUE_CNT
)

26 
	gBuf„rQue
& 
	gque
 = 
ques_
[
ödex
];

27 i‡(!
	gque
.
p›
(
buf
))

29 
	gbuf
 = 
√w
 
Buf„r
();

30 
	gbuf
->
öô
(
fix_size
);

33 i‡(
	gbuf
 =
NULL
)

35 
buf
 = 
√w
 
Buf„r
();;

36 
	gbuf
->
öô
(
fix_size
);

39  
	gbuf
;

42 
	gBuf„rPoﬁ
::
de°royBuf„r
(
Buf„r
* 
buf„r
)

44 
uöt32_t
 
size
 = 
buf„r
->
gëSize
();

45 
öt32_t
 
	gödex
 = 0;

46 
uöt32_t
 
	gfix_size
 = 8;

47 
	gfix_size
 >
size
)

49 ++
ödex
;

50 
	gfix_size
 <<= 1;

52 i‡(
	gödex
 < 
	gBUFFER_QUEUE_CNT
)

54 
	gBuf„rQue
& 
	gque
 = 
ques_
[
ödex
];

55 i‡(
	gque
.
push
(
buf„r
))

56 
	gbuf„r
 = 
NULL
;

58 i‡(
	gbuf„r
)

60 
	gbuf„r
->
ªÀa£
();

	@base/BufferPool.h

1 #i‚de‡
__KIT_BUFFER_POOL_H__


2 
	#__KIT_BUFFER_POOL_H__


	)

7 
	~"Buf„r.h
"

8 
	~"Queue.h
"

10 
«me•a˚
 
	gkô
 {

12 c⁄° 
öt32_t
 
	gBUFFER_QUEUE_CNT
 = 8;

14 ˛as†
	cBuf„rPoﬁ


16 
	gpublic
:

17 
Buf„rPoﬁ
();

18 
	gvútuÆ
 ~
Buf„rPoﬁ
();

20 
Buf„r
* 
¸óãBuf„r
(
uöt32_t
 
size
);

21 
de°royBuf„r
(
Buf„r
* 
buf„r
);

22 
	g¥iv©e
:

23 
Queue
<
	tBuf„r
*, 200> 
	tBuf„rQue
;

24 
Buf„rQue
 
	gques_
[
BUFFER_QUEUE_CNT
];

27 
	#g_BufPoﬁ
 (
kô
::
SögÀt⁄
<kô::
Buf„rPoﬁ
>::
	`ö°™˚
())

	)

	@base/HashList.cpp

1 
	~"HashLi°.h
"

2 
	~"Ref.h
"

4 
«me•a˚
 
	gkô
 {

6 
HashLi°_öô
(
HashLi°T
 
hl
, 
size
)

8 
mem£t
(
hl
, 0, 
size
 * (
HLEÀmít
));

9 
	ghl
[0].
	gu
.
	gcou¡
[1] = 
size
;

12 
HashLi°_addEÀmít
(
HashLi°T
 
hl
, 
ödex
, 
Ref
* 
p
)

14 
as£π
(
ödex
 > 0 && index < 
HashLi°_Àngth
(
hl
));

16 
	gp
->
ªèö
();

18 
	gHLEÀmít
& 
	gñemít
 = 
hl
[
ödex
];

19 
	gHLEÀmít
& 
	göfo
 = 
hl
[0];

20 i‡(
	gñemít
.
	gu
.
	gªf
 != 0)

22 
ñemít
.
u
.
ªf
 = 
p
;

26 
	gñemít
.
	gu
.
	gªf
 = 
p
;

28 
	ghód
 = 
öfo
.
¥ev
;

29 
	gèû
 = 
öfo
.
√xt
;

30 i‡(
	ghód
 == 0)

32 
öfo
.
¥ev
 = info.
√xt
 = 
ödex
;

36 
	gHLEÀmít
& 
	gèû_ñemít
 = 
hl
[
èû
];

37 
	gèû_ñemít
.
	g√xt
 = 
öfo
.
√xt
 = 
ödex
;

39 
	gñemít
.
	g¥ev
 = 
èû
;

41 ++
	göfo
.
	gu
.
	gcou¡
[0];

46 
HashLi°_dñEÀmít
(
HashLi°T
 
hl
, 
ödex
)

48 
as£π
(
ödex
 > 0 && index < 
HashLi°_Àngth
(
hl
));

50 
	gHLEÀmít
& 
	gñemít
 = 
hl
[
ödex
];

52 
Ref
* 
	gªf
 = 
ñemít
.
u
.
ªf
;

53 i‡(
	gªf
 == 0)

56 
	gHLEÀmít
& 
	göfo
 = 
hl
[0];

57 
	g¥ev
 = 
ñemít
.
¥ev
;

58 
	g√xt
 = 
ñemít
.
√xt
;

59 i‡(
	g¥ev
 =0 
™d
 
√xt
 == 0)

62 
öfo
.
¥ev
 = info.
√xt
 = 0;

64 i‡(
	g¥ev
 == 0)

67 
öfo
.
¥ev
 = 
√xt
;

68 
	ghl
[
√xt
].
	g¥ev
 = 0;

70 i‡(
	g√xt
 == 0)

73 
öfo
.
√xt
 = 
¥ev
;

74 
	ghl
[
¥ev
].
	g√xt
 = 0;

79 
	ghl
[
¥ev
].
	g√xt
 = 
√xt
;

80 
	ghl
[
√xt
].
	g¥ev
 = 
¥ev
;

83 
mem£t
(&
ñemít
, 0, (
HLEÀmít
));

85 --
	göfo
.
	gu
.
	gcou¡
[0];

87 
	gªf
->
ªÀa£
();

91 
HashLi°_¥öt
(
HashLi°T
 
hl
)

93 
¥ötf
("Àngth:%d,cou¡:%d: [", 
HashLi°_Àngth
(
hl
), 
HashLi°_cou¡
(hl));

94 
	gödex
 = 0;

95 
	gödex
 = 
kô
::
HashLi°_√xt
(
hl
, 
ödex
))

97 
¥ötf
("%d,", 
ödex
);

99 
¥ötf
("]\n");

	@base/HashList.h

1 #i‚de‡
__KIT_HASH_LIST_H__


2 
	#__KIT_HASH_LIST_H__


	)

4 
	~<as£π.h
>

5 
	~<mem‹y.h
>

6 
	~<°dio.h
>

15 
«me•a˚
 
	gkô
 {

17 
˛ass
 
	gRef
;

19 
	sHLEÀmít


23 
Ref
* 
	gªf
;

24 
	gcou¡
[2];

25 }
	gu
;

26 
	g¥ev
;

27 
	g√xt
;

28 } 
	tHashLi°EÀmít
, 
	tHashLi°Def
, *
	tHashLi°T
;

32 
HashLi°_öô
(
HashLi°T
 
hl
, 
size
);

35 
ölöe
 
HashLi°_cou¡
(
HashLi°T
 
hl
)

37  
	ghl
[0].
	gu
.
	gcou¡
[0];

41 
ölöe
 
HashLi°_Àngth
(
HashLi°T
 
hl
)

43  
	ghl
[0].
	gu
.
	gcou¡
[1];

47 
ölöe
 
Ref
* 
HashLi°_gëEÀmít
(
HashLi°T
 
hl
, 
ödex
)

49 
as£π
(
ödex
 > 0 && index < 
HashLi°_Àngth
(
hl
));

51  
	ghl
[
ödex
].
	gu
.
	gªf
;

55 
ölöe
 
HashLi°_√xt
(
HashLi°T
 
hl
, 
ödex
)

57 
as£π
(
ödex
 >0 && index < 
HashLi°_Àngth
(
hl
));

59 c⁄° 
	gHLEÀmít
& 
	gñemít
 = 
hl
[
ödex
];

60 i‡(
	gödex
 == 0)

61  
hl
[0].
¥ev
;

63  
	ghl
[
ödex
].
	g√xt
;

67 
HashLi°_addEÀmít
(
HashLi°T
 
hl
, 
ödex
, 
Ref
* 
p
);

70 
HashLi°_dñEÀmít
(
HashLi°T
 
hl
, 
ödex
);

73 
HashLi°_¥öt
(
HashLi°T
 
hl
);

	@base/List.h

1 #i‚de‡
__KIT_LIST_H__


2 
	#__KIT_LIST_H__


	)

4 
«me•a˚
 
	gkô
 {

6 
	gãm∂©e
<
ty≥«me
 
	gTy≥
>

7 ˛as†
	cLi°


9 
	sIãm


11 
Ty≥
 
	gvÆue
;

12 
Iãm
* 
	g√xt
;

13 
Iãm
* 
	g¥ev
;

15 
	gpublic
:

16 
Li°
(): 
hód_
(0), 
èû_
(0), 
cou¡_
(0)

19 
cou¡
(Ë{  
	gcou¡_
; }

21 
boﬁ
 
‰⁄t
(
Ty≥
& 
vÆue
)

23 i‡(
	gcou¡_
 =0 || 
hód_
 == 0)

24  
Ál£
;

25 
	gvÆue
 = 
hód_
->
vÆue
;

26  
	gåue
;

30 
boﬁ
 
p›
(
Ty≥
& 
vÆue
)

32 i‡(
	gcou¡_
 =0 || 
hód_
 == 0)

33  
Ál£
;

34 
	gvÆue
 = 
hód_
->
vÆue
;

35 
Iãm
* 
	gnxt
 = 
hód_
->
√xt
;

36 i‡(
	gnxt
)

37 
	gnxt
->
	g¥ev
 = 0;

39 
	gèû_
 = 0;

40 
dñëe
 
	ghód_
;

41 
	ghód_
 = 
nxt
;

42 --
	gcou¡_
;

43  
	gåue
;

47 
boﬁ
 
push
(c⁄° 
Ty≥
& 
ôem
)

49 
Iãm
* 
	gp
 = 
√w
 Item();

50 
	gp
->
	gvÆue
 = 
ôem
;

51 
	gp
->
	g√xt
 = 0;

52 
	gp
->
	g¥ev
 = 
èû_
;

53 i‡(
	gèû_
)

54 
	gèû_
->
	g√xt
 = 
p
;

55 i‡(
	ghód_
 == 0)

56 
hód_
 = 
p
;

57 
	gèû_
 = 
p
;

58 ++
	gcou¡_
;

59  
	gåue
;

64 
boﬁ
 
ö£π
(
ödex
, c⁄° 
Ty≥
& 
ôem
)

80 
boﬁ
 
îa£
(
ödex
)

83 
	g¥iv©e
:

84 
Iãm
* 
hód_
;

85 
Iãm
* 
	gèû_
;

86 
	gcou¡_
;

	@base/Logger.cpp

1 
	~"Loggî.h
"

3 
«me•a˚
 
	gkô
 {

5 
	gLoggî
::
Loggî
()

7 
≠i_èbÀ_
[
LOG_TYPE_LOG
] = &
Loggî
::
wrôeLog
<LOG_TYPE_LOG>;

8 
	g≠i_èbÀ_
[
LOG_TYPE_ERR
] = &
Loggî
::
wrôeLog
<LOG_TYPE_ERR>;

9 
	g≠i_èbÀ_
[
LOG_TYPE_DBG
] = &
Loggî
::
wrôeLog
<LOG_TYPE_DBG>;

10 
	g≠i_èbÀ_
[
LOG_TYPE_SQL
] = &
Loggî
::
wrôeLog
<LOG_TYPE_SQL>;

13 
	gLoggî
::~
Loggî
()

17 
Loggî
::
LoggîAPI
 Loggî::
gëAPI
(
t
)

19 i‡(
t
 >0 &&Å < ()
MAX_LOG_TYPE
)

20  
≠i_èbÀ_
[
t
];

22  &
	gLoggî
::
wrôeN⁄e
;

25 
	gLoggî
::
£tAPI
(
t
, 
Loggî
::
LoggîAPI
 
≠i
)

27 i‡(
t
 >0 &&Å < ()
MAX_LOG_TYPE
)

28 
≠i_èbÀ_
[
t
] = 
≠i
;

	@base/Logger.h

1 #i‚de‡
__KIT_LOGGER_H__


2 
	#__KIT_LOGGER_H__


	)

4 
	~<°d¨g.h
>

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~"SögÀt⁄.h
"

9 
«me•a˚
 
	gkô
 {

13 
	gLOG_TYPE_LOG
,

14 
	gLOG_TYPE_ERR
,

15 
	gLOG_TYPE_DBG
,

16 
	gLOG_TYPE_SQL
,

18 
	gMAX_LOG_TYPE
,

22 c⁄° 
	gMAX_LOG_BUFFER_LEN
 = 1024 * 16;

24 
	#g_log
 (
kô
::
SögÀt⁄
<kô::
Loggî
>::
	`ö°™˚
())

	)

26 
	#LOG
 ( 
g_log
->*–g_log->
	`gëAPI
–
kô
::
LOG_TYPE_LOG
 ) ) )

	)

27 
	#DBG
 ( 
g_log
->*–g_log->
	`gëAPI
–
kô
::
LOG_TYPE_DBG
 ) ) )

	)

28 
	#ERR
 ( 
g_log
->*–g_log->
	`gëAPI
–
kô
::
LOG_TYPE_ERR
 ) ) )

	)

29 
	#SQL
 ( 
g_log
->*–g_log->
	`gëAPI
–
kô
::
LOG_TYPE_SQL
 ) ) )

	)

31 ˛as†
	cLoggî


33 
	gpublic
:

34 
Loggî
();

35 ~
Loggî
();

37 (
	gLoggî
::* 
	tLoggîAPI
)(c⁄° * 
	tf‹m©
, ...);

39 
LoggîAPI
 
gëAPI
(
t
);

40 
£tAPI
(
t
, 
LoggîAPI
 
≠i
);

42 
wrôeN⁄e
(c⁄° * 
f‹m©
, ...) {};

44 
	gãm∂©e
<
	gty≥
>

45 
wrôeLog
(c⁄° * 
f‹m©
, ...)

47 c⁄° * 
	glog_°r
[] = {"[LOG]", "[ERR]", "[DBG]", "[SQL]"};

48 
	gbuf„r
[
MAX_LOG_BUFFER_LEN
];

49 c⁄° * 
	g¥e°r
 = 
log_°r
[
ty≥
];

50 
	gÀn_¥e
 = 
°æí
(
¥e°r
);

51 
°∫˝y
(
buf„r
, 
¥e°r
, 
Àn_¥e
);

52 
va_li°
 
	g¨gs
;

53 
va_°¨t
(
¨gs
, 
f‹m©
);

54 
v¢¥ötf
(
buf„r
 + 
Àn_¥e
, 
MAX_LOG_BUFFER_LEN
 -Üí_¥e, 
f‹m©
, 
¨gs
);

55 
	gÀn_buf
 = 
°æí
(
buf„r
);

56 
	gbuf„r
[
Àn_buf
] = '\n';

57 
	gbuf„r
[
Àn_buf
 + 1] = 0;

58 
¥ötf
(
buf„r
);

59 
va_íd
(
¨gs
);

61 
	g¥iv©e
:

63 
LoggîAPI
 
≠i_èbÀ_
[
MAX_LOG_TYPE
];

	@base/Queue.h

1 #i‚de‡
__KIT_QUEUE_H__


2 
	#__KIT_QUEUE_H__


	)

4 
«me•a˚
 
	gkô
 {

6 
	gãm∂©e
<
ty≥«me
 
	gTy≥
, c⁄° 
	gLígth
>

7 ˛as†
	cQueue


9 
	gpublic
:

10 
Queue
(): 
cou¡_
(0), 
hód_
(0), 
èû_
(0)

14 
boﬁ
 
p›
(
Ty≥
& 
vÆue
)

16 i‡(
	gcou¡_
 == 0)

17  
Ál£
;

18 
	gvÆue
 = 
que_
[
hód_
];

19 ++
	ghód_
;

20 
	ghód_
 %
Lígth
;

21 --
	gcou¡_
;

23  
	gåue
;

26 
boﬁ
 
push
(c⁄° 
Ty≥
& 
vÆue
)

28 i‡(
	gcou¡_
 =
Lígth
)

29  
Ál£
;

30 
	gque_
[
èû_
] = 
vÆue
;

31 ++
	gèû_
;

32 
	gèû_
 %
Lígth
;

33 ++
	gcou¡_
;

35  
	gåue
;

38 
boﬁ
 
‰⁄t
(
Ty≥
& 
vÆue
)

40 i‡(
	gcou¡_
 == 0)

41  
Ál£
;

42 
	gvÆue
 = 
que_
[
hód_
];

43  
	gåue
;

46 
cou¡
()

48  
	gcou¡_
;

51 
ª°
()

53  
	gLígth
 - 
	gcou¡_
;

56 
	g¥iv©e
:

57 
cou¡_
;

58 
	ghód_
;

59 
	gèû_
;

60 
Ty≥
 
	gque_
[
Lígth
];

	@base/Ref.cpp

1 
	~"Ref.h
"

2 
	~"RefPoﬁ.h
"

3 
	~<as£π.h
>

5 
«me•a˚
 
	gkô
 {

7 
	gRef
::
Ref
()

8 : 
ª„ªn˚_cou¡_
(1)

12 
Ref
::~Ref()

16 
Ref
::
ªèö
()

18 ++
ª„ªn˚_cou¡_
;

21 
	gRef
::
ªÀa£
()

23 
as£π
(
ª„ªn˚_cou¡_
 > 0);

25 --
	gª„ªn˚_cou¡_
;

26 i‡(
	gª„ªn˚_cou¡_
 == 0)

27 
dñëe
 
this
;

30 
Ref
* 
	gRef
::
autoRñó£
()

32 
g_RefPoﬁ
->
gëCuºítPoﬁ
()->
addRef
(
this
);

	@base/Ref.h

1 #i‚de‡
__KIT_REF_H__


2 
	#__KIT_REF_H__


	)

4 
	~<√w
>

6 
«me•a˚
 
	gkô
 {

8 ˛as†
	cRef


10 
	g¥Ÿe˘ed
:

11 
Ref
();

12 
	gª„ªn˚_cou¡_
;

13 
	gpublic
:

14 
vútuÆ
 ~
Ref
();

16 
ªèö
();

17 
ªÀa£
();

19 
Ref
* 
autoRñó£
();

20 
gëRe„ªn˚Cou¡
(Ëc⁄° {  
	gª„ªn˚_cou¡_
; };

24 
	#KIT_CREATE_FUNC
(
__TYPE__
) \

25 
__TYPE__
* 
	`¸óã
() \

27 
__TYPE__
* 
ªt
 = 
	`√w
(
°d
::
nŸhrow
Ë
	`__TYPE__
(); \

28 i‡(
ªt
) \

30 
ªt
->
	`autoRñó£
(); \

31  
ªt
; \

33 
ªt
 = 
nuŒ±r
; \

34 }

	)

	@base/RefPool.cpp

1 
	~"RefPoﬁ.h
"

2 
	~"Ref.h
"

4 
«me•a˚
 
	gkô
 {

10 
	gRefPoﬁ
::
RefPoﬁ
()

12 
ªf_vec_
.
ª£rve
(150);

15 
	gRefPoﬁ
::~
RefPoﬁ
()

17 
˛ór
();

20 
	gRefPoﬁ
::
addRef
(
Ref
* 
ªf
)

22 
ªf_vec_
.
push_back
(
ªf
);

26 
	gRefPoﬁ
::
dñRef
(
Ref
* 
ªf
)

28 
RefVec
::
ôî©‹
 
ix
 = 
ªf_vec_
.
begö
(); 
	gix
 !ªf_vec_.
íd
(); ++ix)

30 i‡((*
	gix
Ë=
ªf
)

32 
ªf_vec_
.
îa£
(
ix
);

38 
	gRefPoﬁ
::
˛ór
()

40 
RefVec
 
vec
;

41 
	gvec
.
sw≠
(
ªf_vec_
);

42 
	gRefVec
::
ôî©‹
 
ix
 = 
vec
.
begö
(); 
	gix
 !vec.
íd
(); ++ix)

44 (*
	gix
)->
ªÀa£
();

52 
	gRefPoﬁM™agî
::
RefPoﬁM™agî
()

53 : 
cur_poﬁ_
(0)

55 
poﬁ_vec_
.
ª£rve
(10);

58 
	gRefPoﬁM™agî
::~
RefPoﬁM™agî
()

60 !
poﬁ_vec_
.
em±y
())

62 
p›
();

66 
	gRefPoﬁM™agî
::
push
(
RefPoﬁ
* 
poﬁ
)

68 
cur_poﬁ_
 = 
poﬁ
;

69 
	gpoﬁ_vec_
.
push_back
(
poﬁ
);

72 
	gRefPoﬁM™agî
::
p›
()

74 i‡(
poﬁ_vec_
.
em±y
())

77 
	gpoﬁ_vec_
.
p›_back
();

78 
dñëe
 
	gcur_poﬁ_
;

79 i‡(
	gpoﬁ_vec_
.
em±y
())

80 
	gcur_poﬁ_
 = 0;

82 
	gcur_poﬁ_
 = 
poﬁ_vec_
.
back
();

	@base/RefPool.h

1 #i‚de‡
__KIT_REF_POLL_H__


2 
	#__KIT_REF_POLL_H__


	)

11 
	~<ve˘‹
>

12 
	~"SögÀt⁄.h
"

14 
«me•a˚
 
	gkô
 {

16 
˛ass
 
	gRef
;

18 ˛as†
	cRefPoﬁ


20 
	gpublic
:

21 
RefPoﬁ
();

22 
	gvútuÆ
 ~
RefPoﬁ
();

24 
addRef
(
Ref
* 
ªf
);

25 
dñRef
(
Ref
* 
ªf
);

26 
˛ór
();

27 
	g¥iv©e
:

28 
°d
::
	tve˘‹
<
	tRef
*> 
	tRefVec
;

29 
RefVec
 
	gªf_vec_
;

32 ˛as†
	cRefPoﬁM™agî


34 
	gpublic
:

35 
RefPoﬁM™agî
();

36 
	gvútuÆ
 ~
RefPoﬁM™agî
();

38 
RefPoﬁ
* 
gëCuºítPoﬁ
(Ëc⁄° {  
	gcur_poﬁ_
; }

39 
push
(
RefPoﬁ
* 
poﬁ
);

40 
p›
();

41 
	g¥iv©e
:

42 
RefPoﬁ
* 
cur_poﬁ_
;

44 
	g°d
::
	tve˘‹
<
	tRefPoﬁ
*> 
	tPoﬁVec
;

45 
PoﬁVec
 
	gpoﬁ_vec_
;

49 
	#g_RefPoﬁ
 (
kô
::
SögÀt⁄
<kô::
RefPoﬁM™agî
>::
	`ö°™˚
())

	)

	@base/Singleton.h

1 #i‚de‡
__KIT_SINGLETON_H__


2 
	#__KIT_SINGLETON_H__


	)

9 
«me•a˚
 
	gkô
 {

11 
	gãm∂©e
< 
ty≥«me
 
	gT
 >

12 ˛as†
	cSögÀt⁄


14 
	gpublic
:

16 
ölöe
 
T
* 
ö°™˚
()

18 if–!
ö°™˚_
 )

19 
ö°™˚_
 = 
√w
 
T
();

21  
	gö°™˚_
;

25 
ªÀa£
()

27 
SAFE_DELETE
(
ö°™˚_
);

31 
boﬁ
 
exi°s
()

33  !
	gö°™˚_
;

36 
	g¥Ÿe˘ed
:

37 
T
* 
ö°™˚_
;

40 
	gãm∂©e
<
ty≥«me
 
	gT
> 
T
* 
	gSögÀt⁄
<T>::
ö°™˚_
 = 0;

	@base/Thread.cpp

	@base/Thread.h

1 #i‚de‡
__KIT_THREAD_H__


2 
	#__KIT_THREAD_H__


	)

4 
«me•a˚
 
	gkô
 {

6 ˛as†
	cThªad
 : 
public
 
Ref


8 
public
:

9 
Thªad
();

10 
	gvútuÆ
 ~
Thªad
();

12 
joö
();

13 
°¨t
();

14 
°›
();

	@base/base.h

1 #i‚de‡
__KIT_BASE_H__


2 
	#__KIT_BASE_H__


	)

4 
	~"kôsys.h
"

5 
	~"Ref.h
"

6 
	~"RefPoﬁ.h
"

7 
	~"Loggî.h
"

8 
	~"SögÀt⁄.h
"

9 
	~"HashLi°.h
"

10 
	~"Queue.h
"

11 
	~"Buf„r.h
"

12 
	~"Aºay.h
"

	@base/debugfunc.h

1 #i‚de‡
__DEBUG_FUNC_H__


2 
	#__DEBUG_FUNC_H__


	)

4 
	~<time.h
>

5 
	~<°dio.h
>

7 
	#KIT_BEGIN
(
x
) \

8 
˛ock_t
 
˛ock_°¨t_xx
##
x
, 
˛ock_föish_xx
##x; \

9 
˛ock_°¨t_xx
##
x
 = 
	`˛ock
()

	)

11 
	#KIT_END
(
x
, 
s
) \

12 
˛ock_föish_xx
##
x
 = 
	`˛ock
(); \

13 
	`¥ötf
(
s
); \

14 
	`¥ötf
("%lf\n", ()(
˛ock_föish_xx
##
x
 - 
˛ock_°¨t_xx
##xË/ 
CLOCKS_PER_SEC
)

	)

16 
	#KIT_RUN
(
Àn
Ë
i
 = 0; i !Àn; ++i){}

	)

	@base/kitsys.cpp

1 
	~"kôsys.h
"

2 
	~<°dio.h
>

3 #ifde‡
PLATFORM_WINDOWS


4 
	~<wödows.h
>

7 #ifde‡
PLATFORM_LINUX


8 
	~<uni°d.h
>

9 
	~<sys/time.h
>

10 #ifde‡
LINUX_TIME_HIGH_PRECISION


11 
	~<f˙é.h
>

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

17 
«me•a˚
 
	gkô
 {

20 
¶ìp
(
uöt32_t
 
m£c
)

22 #ifde‡
PLATFORM_LINUX


23 
u¶ìp
((
m£c
 << 10) - (msec << 4) - (msec << 3));

24 #ñi‡
deföed
 
PLATFORM_WINDOWS


25 
SÀï
(
m£c
);

29 #i‡(
deföed
 
PLATFORM_LINUX
Ë&& 
LINUX_TIME_HIGH_PRECISION


32 
ölöe
 
uöt64_t
 
tick
()

34 
uöt32_t
 
	g___L
, 
	g___H
;

35 
__asm__
 
__vﬁ©ûe__
("rdtsc" : "˜" ( 
___L
), "=d" ( 
___H
) );

36  ((
	guöt64_t
)
	g___H
Ë<< 32 | 
	g___L
;

39 
öt64_t
 
gë_num_‰om_sysfûe
–c⁄° * 
_«me
, c⁄° * 
_hód
 )

41 if–!
	g_«me
 || ! 
	g_hód
 )  -1;

42 
	gbuff
[4096] = {0,};

43 
öt32_t
 
	gfd
 = 
›í
–
_«me
, 
O_RDONLY
 );

44 if–
	gfd
 > 0 ) {

45 
öt32_t
 
	gÀn
 = 
ªad
–
fd
, 
buff
, (buff)-1 );

46 
˛o£
(
fd
);

47 
	gbuff
[
Àn
-1] = '\0';

48 * 
	gp
 = 
°r°r
–
buff
, 
_hód
);

49 if–
	gp
 ) {

50 
öt32_t
 
	gj
 = 0;

51 
öt32_t
 
	gk
 = 0;

52 
	gnum
[11] = {0,};

53 
boﬁ
 
	g°¨t
 = 
Ál£
;

54  
	gj
 = 0; j < 50; ++j ) {

55 if–
	gp
[
j
] >'0' && 
p
[j] <= '9' ) {

56 
num
[
k
++] = 
p
[
j
];

57 
	g°¨t
 = 
åue
;

58 if–
	gk
 >= 11 ) ;

60 if–
	g°¨t
 =
åue
 ) { ; }

63  (
	göt64_t
)
©ﬁl
(
num
);

69 
uöt64_t
 
gë_˝u_tick
()

71 
	g∑th
[64]={0,};

72 
¢¥ötf
–
∑th
, (path), "/proc/cpuinfo" );

73 
öt64_t
 
	gtick
 = 
gë_num_‰om_sysfûe
–
∑th
, "cpu MHz" );

74 
uöt64_t
 
	gªs
 = 0;

75 if–
	gtick
 <= 0 ){

76 
ªs
 = 1995*1000000;

78 
	gªs
 = (
uöt64_t
)
tick
*1000000;

80 
¥ötf
("˝u hz:%Œd\n", 
ªs
);

81  
	gªs
;

85 
uöt32_t
 
time
()

87 #ifde‡
PLATFORM_LINUX


88 #i‡
LINUX_TIME_HIGH_PRECISION


89 
öt64_t
 
	g‰eq
;

90 i‡(
	g‰eq
 == 0)

91 
‰eq
 = 
gë_˝u_tick
();

92  
uöt32_t
(
tick
(Ë* 1000 / 
‰eq
);

94 
boﬁ
 
	ghas_öô
 = 
Ál£
;

95 
timevÆ
 
	gbegö_time
;

96 
timez⁄e
 
	gtz
={0, 0};

97 i‡(!
	ghas_öô
)

99 
gëtimeofday
(&
begö_time
, &
tz
);

100 
	ghas_öô
 = 
åue
;

102 
timevÆ
 
	gtime
;

103 
gëtimeofday
(&
time
, &
tz
);

104  
uöt32_t
((
time
.
tv_£c
 - 
begö_time
.tv_£cË* 1000.0 +Åime.
tv_u£c
 / 1000.0);

106 #ñi‡
deföed
 
PLATFORM_WINDOWS


107 
boﬁ
 
	ghas_öô
 = 
Ál£
;

108 
boﬁ
 
	gu£_high_ªsﬁuti⁄
 = 
åue
;

109 
öt64_t
 
	g‰eq
;

110 
LARGE_INTEGER
 
	gbegö_time
;

112 i‡(!
	ghas_öô
)

114 
LARGE_INTEGER
 
	gvÆue
;

115 i‡(
QuîyPîf‹m™˚Fªquícy
(&
vÆue
) == 0)

117 
u£_high_ªsﬁuti⁄
 = 
Ál£
;

121 
	g‰eq
 = 
öt64_t
(
vÆue
.
QuadP¨t
 / 1000);

122 
QuîyPîf‹m™˚Cou¡î
(&
begö_time
);

124 
	ghas_öô
 = 
åue
;

127 i‡(!
	gu£_high_ªsﬁuti⁄
)

129  
GëTickCou¡
();

132 
LARGE_INTEGER
 
	gnow
;

133 
QuîyPîf‹m™˚Cou¡î
(&
now
);

134  
uöt32_t
(
now
.
QuadP¨t
 - 
begö_time
.QuadP¨tË/ 
	g‰eq
;

	@base/kitsys.h

1 #i‚de‡
__KIT_SYS_H__


2 
	#__KIT_SYS_H__


	)

5 
	#LINUX_TIME_HIGH_PRECISION
 0

	)

12 
	~<°döt.h
>

14 #ifde‡
PLATFORM_LINUX


17 #ifde‡
PLATFORM_WINDOWS


18 
	~<öåö.h
>

22 #i‚de‡
NULL


23 
	#NULL
 0

	)

26 
«me•a˚
 
	gkô
 {

29 
¶ìp
(
uöt32_t
 
m£c
);

32 
uöt32_t
 
time
();

	@gearkit.h

1 #i‚de‡
__GEAR_KIT_H__


2 
	#__GEAR_KIT_H__


	)

4 
	~"ba£/ba£.h
"

5 
	~"√tw‹k/√tw‹k.h
"

	@network/Client.cpp

1 
	~"Clõ¡.h
"

2 
	~"√tsys.h
"

3 
	~"Sockë.h
"

4 
	~"SockAddr.h
"

5 
	~"Loggî.h
"

7 
«me•a˚
 
	gkô
 {

9 c⁄° 
öt32_t
 
	gMAX_LISTEN
 = 50;

11 
	gIClõ¡
::
IClõ¡
()

12 : 
sockë_
(
NULL
)

13 , 
a˘ive_
(
Ál£
)

14 , 
timevÆ_
(-1)

18 
	gIClõ¡
::~
IClõ¡
()

20 i‡(
sockë_
 !
NULL
)

22 
sockë_
->
ªÀa£
();

23 
	gsockë_
 = 
NULL
;

28 
öt32_t
 
	gIClõ¡
::
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
)

30 i‡(
	gsockë_
)

32 
shutdown
();

36 
SockAddr
* 
	gaddr
 = SockAddr::
¸óã
();

37 
	gaddr
->
öô
(
ù
, 
p‹t
, 
KIT_AF_INET
);

38 i‡(!
	gaddr
->
vÆid
())

40 
ERR
("[IClõ¡](°¨tupËsockadd∏îr‹! %s, %d", 
ù
, 
p‹t
);

45 
Sockë
* 
	gsock
 = Sockë::
¸óã
();

46 
	gsock
->
öô
(
KIT_AF_INET
, 
KIT_SOCK_STREAM
, 0);

48 i‡(!
	gsock
->
vÆid
())

50 
ERR
("[IClõ¡](°¨tupËsockëÉº‹! %s, %d", 
ù
, 
p‹t
);

54 
	gsock
->
£tAddr
(
addr
);

65 
	gsock
->
ªèö
();

66 
	gsockë_
 = 
sock
;

68 
	ga˘ive_
 = 
åue
;

73 
	gIClõ¡
::
upd©e
()

77 
öt32_t
 
IClõ¡
::
shutdown
()

79 
a˘ive_
 = 
Ál£
;

80 i‡(
	gsockë_
)

82 
	gsockë_
->
˛o£
();

83 
	gsockë_
->
ªÀa£
();

84 
	gsockë_
 = 
NULL
;

	@network/Client.h

1 #i‚de‡
__KIT_CLIENT_H__


2 
	#__KIT_CLIENT_H__


	)

4 
	~"Ref.h
"

5 
	~"kôsys.h
"

6 
	~"HashLi°.h
"

8 
«me•a˚
 
	gkô
 {

10 
˛ass
 
	gSockë
;

12 ˛as†
	cIClõ¡
 : 
public
 
Ref


14 
public
:

15 
IClõ¡
();

16 
	gvútuÆ
 ~
IClõ¡
();

17 
vútuÆ
 
öt32_t
 
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
);

18 
vútuÆ
 
öt32_t
 
shutdown
();

21 
vútuÆ
 
upd©e
() = 0;

23 
ölöe
 
öt32_t
 
gëTimevÆ
(Ëc⁄° {  
	gtimevÆ_
; }

24 
ölöe
 
£tTimevÆ
(
öt32_t
 
timevÆ
Ë{ 
	gtimevÆ_
 =Åimeval; }

25 
	g¥Ÿe˘ed
:

26 
Sockë
* 
sockë_
;

27 
boﬁ
 
	ga˘ive_
;

30 
öt32_t
 
	gtimevÆ_
;

35 #ifde‡
PLATFORM_LINUX


36 
	~<∂©f‹m/löux/Clõ¡_löux.h
>

37 #ñi‡
deföed
 
PLATFORM_WINDOWS


38 
	~<∂©f‹m/wö/Clõ¡_wö.h
>

	@network/Packet.cpp

1 
	~"Packë.h
"

2 
	~"Buf„r.h
"

4 
«me•a˚
 
	gkô
 {

6 
ªadPackëInfo
(
Buf„r
* 
buf
, 
PackëHódî
& 
hódî
)

8 (*
	gbuf
Ë>> 
	ghódî
.
	g£ed
;

9 (*
	gbuf
Ë>> 
	ghódî
.
	gÀngth
;

12 
wrôePackëInfo
(
Buf„r
* 
buf
, c⁄° 
PackëHódî
& 
hódî
)

14 (*
	gbuf
Ë<< 
	ghódî
.
	g£ed
;

15 (*
	gbuf
Ë<< 
	ghódî
.
	gÀngth
;

	@network/Packet.h

1 #i‚de‡
__KIT_PACKET_H__


2 
	#__KIT_PACKET_H__


	)

4 
	~"kôsys.h
"

6 
«me•a˚
 
	gkô
 {

8 
	sPackëHódî


10 
uöt16_t
 
	g£ed
;

11 
uöt16_t
 
	gÀngth
;

15 c⁄° 
uöt32_t
 
	gPACKET_MAX_SIZE
 = 0xFFFF;

17 c⁄° 
uöt32_t
 
	gPACKET_HEADER_SIZE
 = (
PackëHódî
);

19 
˛ass
 
	gBuf„r
;

20 
ªadPackëInfo
(
Buf„r
* 
buf
, 
PackëHódî
& 
hódî
);

21 
wrôePackëInfo
(
Buf„r
* 
buf
, c⁄° 
PackëHódî
& 
hódî
);

	@network/Server.cpp

1 
	~"Sîvî.h
"

2 
	~"√tsys.h
"

3 
	~"Sockë.h
"

4 
	~"SockAddr.h
"

5 
	~"Loggî.h
"

7 
«me•a˚
 
	gkô
 {

9 c⁄° 
öt32_t
 
	gMAX_LISTEN
 = 50;

11 
	gISîvî
::
ISîvî
()

12 : 
sockë_
(
NULL
)

13 , 
a˘ive_
(
Ál£
)

14 , 
timevÆ_
(-1)

18 
	gISîvî
::~
ISîvî
()

20 i‡(
sockë_
 !
NULL
)

22 
sockë_
->
ªÀa£
();

23 
	gsockë_
 = 
NULL
;

28 
öt32_t
 
	gISîvî
::
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
)

30 i‡(
	gsockë_
)

32 
shutdown
();

36 
SockAddr
* 
	gaddr
 = SockAddr::
¸óã
();

37 
	gaddr
->
öô
(
ù
, 
p‹t
, 
KIT_AF_INET
);

38 i‡(!
	gaddr
->
vÆid
())

40 
ERR
("[ISîvî](°¨tupËsockadd∏îr‹! %s, %d", 
ù
, 
p‹t
);

45 
Sockë
* 
	gsock
 = Sockë::
¸óã
();

46 
	gsock
->
öô
(
KIT_AF_INET
, 
KIT_SOCK_STREAM
, 0);

48 i‡(!
	gsock
->
vÆid
())

50 
ERR
("[ISîvî](°¨tupËsockëÉº‹! %s, %d", 
ù
, 
p‹t
);

55 i‡(
	gsock
->
böd
(
addr
) < 0)

57 
ERR
("[ISîvî](°¨tupËbödÉº‹! %s, %d", 
ù
, 
p‹t
);

62 i‡(
	gsock
->
li°í
(
MAX_LISTEN
) < 0)

64 
ERR
("[ISîvî](°¨tupËli°íÉº‹! %s, %d", 
ù
, 
p‹t
);

68 
	gsock
->
ªèö
();

69 
	gsockë_
 = 
sock
;

71 
addSockë
(
sock
->
gëH™dÀ
(), sock);

73 
	ga˘ive_
 = 
åue
;

78 
	gISîvî
::
upd©e
()

81 
PﬁlEvít
 
ev
;

82 
öt32_t
 
	g˙t
 = 
evít_que_
.
cou¡
();

83 
öt32_t
 
	gsock_fd
;

84 
öt32_t
 
	gsock_ev
;

85 
Sockë
* 
	gsock
;

87 
	gi
 = 0; i !
˙t
; ++i)

89 i‡(!
	gevít_que_
.
p›
(
ev
))

91 
	gsock_fd
 = 
ev
.
fd
;

92 
	gsock_ev
 = 
ev
.
evíts
;

93 
	gsock
 = 
gëSockë
(
sock_fd
);

94 i‡(
	gsock
)

96 i‡(
	gsock_ev
 & 
	gKIT_POLLIN
)

98 
	gsock
->
dólRecv
();

100 i‡(
	gsock_ev
 & 
	gKIT_POLLOUT
)

102 
	gsock
->
doSíd
();

104 i‡(
	gsock_ev
 & 
	gKIT_POLLERR
)

107 
	gsock
->
ªÀa£
();

108 
	gsockë_¨øy_
.
dñ
(
sock_fd
);

111 
DBG
("[Sîvî](upd©eËpﬁ»evíàfd=%d", 
ev
.
fd
);

115 
öt32_t
 
	gISîvî
::
addSockë
(öt32_à
fd
, 
Sockë
* 
sock
)

117 i‡(
	gsock
 =
NULL
)

120 
sock
 = 
Sockë
::
¸óã
();

121 
	gsock
->
öô
(
fd
);

124 
	gsock
->
	gvÆid_
 = 
åue
;

125 
	gsock
->
ªèö
();

126 
	gsockë_¨øy_
.
add
(
fd
, 
sock
);

130 
öt32_t
 
	gISîvî
::
dñSockë
(öt32_à
fd
)

133 
Sockë
* 
sock
 = 
gëSockë
(
fd
);

134 i‡(
	gsock
)

136 
	gsock
->
˛o£
();

137 
	gsock
->
	gvÆid_
 = 
Ál£
;

149 
Sockë
* 
	gISîvî
::
gëSockë
(
öt32_t
 
fd
)

151 
Sockë
* 
s
 = 
NULL
;

152 
	gsockë_¨øy_
.
gë
(
fd
, 
s
);

153  
	gs
;

156 
öt32_t
 
	gISîvî
::
shutdown
()

158 
a˘ive_
 = 
Ál£
;

159 i‡(
	gsockë_
)

161 
	gsockë_
->
˛o£
();

162 
	gsockë_
->
ªÀa£
();

163 
	gsockë_
 = 
NULL
;

166 
Sockë
* 
	gsock
 = 
NULL
;

167 
	gsockë_¨øy_
.
ª£tNext
();

168 
	gsockë_¨øy_
.
√xt
(
sock
))

170 
	gsock
->
˛o£
();

171 
	gsock
->
ªÀa£
();

173 
	gsockë_¨øy_
.
˛ór
();

	@network/Server.h

1 #i‚de‡
__KIT_SERVER_H__


2 
	#__KIT_SERVER_H__


	)

4 
	~"Ref.h
"

5 
	~"√tsys.h
"

6 
	~"Queue.h
"

7 
	~"Aºay.h
"

9 
«me•a˚
 
	gkô
 {

11 c⁄° 
uöt16_t
 
	gCONNECTION_LIMIT
 = 0x7FFF;

12 c⁄° 
uöt16_t
 
	gSERVER_EVENT_CNT
 = 512;

14 
˛ass
 
	gSockë
;

16 ˛as†
	cISîvî
 : 
public
 
Ref


18 
public
:

19 
ISîvî
();

20 
	gvútuÆ
 ~
ISîvî
();

21 
vútuÆ
 
öt32_t
 
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
);

22 
vútuÆ
 
öt32_t
 
shutdown
();

25 
vútuÆ
 
upd©e
() = 0;

27 
ölöe
 
öt32_t
 
gëTimevÆ
(Ëc⁄° {  
	gtimevÆ_
; }

28 
ölöe
 
£tTimevÆ
(
öt32_t
 
timevÆ
Ë{ 
	gtimevÆ_
 =Åimeval; }

29 
	g¥Ÿe˘ed
:

30 
vútuÆ
 
öt32_t
 
addSockë
(öt32_à
fd
, 
Sockë
* 
sock
 = 
NULL
);

31 
vútuÆ
 
öt32_t
 
dñSockë
(öt32_à
fd
);

32 
Sockë
* 
gëSockë
(
öt32_t
 
fd
);

34 
	g¥Ÿe˘ed
:

35 
Sockë
* 
sockë_
;

36 
boﬁ
 
	ga˘ive_
;

39 
öt32_t
 
	gtimevÆ_
;

42 
	gAºay
<
	gSockë
*, 
	gCONNECTION_LIMIT
> 
	gsockë_¨øy_
;

45 
	gQueue
<
	tPﬁlEvít
, 
	tSERVER_EVENT_CNT
> 
	tEvítQue
;

46 
EvítQue
 
	gevít_que_
;

51 #ifde‡
PLATFORM_LINUX


52 
	~<∂©f‹m/löux/Sîvî_löux.h
>

53 #ñi‡
deföed
 
PLATFORM_WINDOWS


54 
	~<∂©f‹m/wö/Sîvî_wö.h
>

	@network/SockAddr.cpp

1 
	~"SockAddr.h
"

3 
«me•a˚
 
	gkô
 {

5 
	gISockAddr
::
ISockAddr
()

6 : 
addr_
(
NULL
)

7 , 
vÆid_
(
Ál£
)

8 , 
ù
("")

9 , 
p‹t
(0)

13 
	gISockAddr
::~
ISockAddr
()

17 
ISockAddr
::
öô
(c⁄° * 
ù
, 
uöt16_t
 
p‹t
, uöt16_à
Ámûy
)

19 
	gthis
->
	gù
 = 
ù
;

20 
	gthis
->
	gp‹t
 = 
p‹t
;

22 
	gvÆid_
 = 
åue
;

	@network/SockAddr.h

1 #i‚de‡
__KIT_SOCK_ADDR_H__


2 
	#__KIT_SOCK_ADDR_H__


	)

4 
	~"Ref.h
"

5 
	~"kôsys.h
"

6 
	~<°rög
>

8 
	gsockaddr
;

9 
	gsockaddr_ö
;

11 
«me•a˚
 
	gkô
 {

13 ˛as†
	cISockAddr
 : 
public
 
Ref


15 
public
:

16 
ISockAddr
();

17 
	gvútuÆ
 ~
ISockAddr
();

18 
vútuÆ
 
öô
(c⁄° * 
ù
, 
uöt16_t
 
p‹t
, uöt16_à
Ámûy
);

19 
boﬁ
 
vÆid
(Ëc⁄° {  
	gvÆid_
; }

21 
›î©‹
 
	gsockaddr_ö
*(Ë{  (sockaddr_ö*)
	gaddr_
; }

22 
›î©‹
 
	gsockaddr
*(Ë{  (sockaddr*)
	gaddr_
; }

23 
	gpublic
:

24 
°d
::
°rög
 
ù
;

25 
uöt16_t
 
	gp‹t
;

26 
	g¥Ÿe˘ed
:

27 
sockaddr
* 
addr_
;

28 
boﬁ
 
	gvÆid_
;

33 #ifde‡
PLATFORM_LINUX


34 
	~<∂©f‹m/löux/SockAddr_löux.h
>

35 #ñi‡
deföed
 
PLATFORM_WINDOWS


36 
	~<∂©f‹m/wö/SockAddr_wö.h
>

	@network/Socket.cpp

1 
	~"Sockë.h
"

2 
	~"SockAddr.h
"

3 
	~"√tsys.h
"

4 
	~"ba£.h
"

5 
	~<î∫o.h
>

6 
	~<°dio.h
>

7 
	~<°dlib.h
>

9 
«me•a˚
 
	gkô
 {

11 
	gISockë
::
ISockë
()

12 : 
vÆid_
(
Ál£
)

13 , 
sock_
(
DSOCKERR
)

14 , 
addr_
(
NULL
)

15 , 
ªadyOut_
(
Ál£
)

16 , 
ªcv_hód_buf_
(
NULL
)

17 , 
£nd_hód_buf_
(
NULL
)

18 , 
ªcv_buf_
(
NULL
)

19 , 
£nd_buf_
(
NULL
)

23 
	gISockë
::~
ISockë
()

25 i‡(
sock_
 !
DSOCKERR
)

26 
˛o£
();

27 i‡(
	gaddr_
)

29 
	gaddr_
->
ªÀa£
();

30 
	gaddr_
 = 
NULL
;

32 i‡(
	gªcv_hód_buf_
)

34 
	gªcv_hód_buf_
->
ªÀa£
();

35 
	gªcv_hód_buf_
 = 
NULL
;

37 i‡(
	g£nd_hód_buf_
)

39 
	g£nd_hód_buf_
->
ªÀa£
();

40 
	g£nd_hód_buf_
 = 
NULL
;

42 i‡(
	gªcv_buf_
)

44 
	gªcv_buf_
->
ªÀa£
();

45 
	gªcv_buf_
 = 
NULL
;

49 
	gISockë
::
öô
()

51 
ªcv_hód_buf_
 = 
√w
 
Buf„r
();

52 
	gªcv_hód_buf_
->
öô
(
PACKET_HEADER_SIZE
);

53 
	g£nd_hód_buf_
 = 
√w
 
Buf„r
();

54 
	g£nd_hód_buf_
->
öô
(
PACKET_HEADER_SIZE
);

57 
	g∑ckë_£ed_
 = ::
ønd
();

60 
	gISockë
::
öô
(
öt32_t
 
Ámûy
, i¡32_à
ty≥
, i¡32_à
¥Ÿocﬁ
)

62 
öô
();

63 i‡(
	gsock_
 !
DSOCKERR
)

64 
˛o£
();

65 
	gsock_
 = (
öt32_t
)::
sockë
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
);

66 i‡(
	gsock_
 < 0)

68 
	gsock_
 = 
DSOCKERR
;

72 
›í
();

75 
	gISockë
::
öô
(
öt32_t
 
sock
)

77 
öô
();

78 
£tH™dÀ
(
sock
);

81 
	gISockë
::
›í
()

83 
öt32_t
 
noblock
 = 1;

84 
öt32_t
 
	gªvÆue
 = 1;

87 
io˘l
(
FIONBIO
, (*)(&
noblock
));

90 
£tO±i⁄
(
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
ªvÆue
, (
öt32_t
)(revalue));

93 #i‚de‡
PLATFORM_LINUX


94 
£tO±i⁄
(
IPPROTO_TCP
, 
TCP_NODELAY
, (*)&
ªvÆue
, (
öt32_t
)(revalue));

96 
£tO±i⁄
(
SOL_TCP
, 
TCP_NODELAY
, (*)&
ªvÆue
, (
öt32_t
)(revalue));

100 
	gISockë
::
˛o£
()

102 i‡(
sock_
 =
DSOCKERR
)

105 ::
˛o£
(
sock_
);

107 
	gsock_
 = 
DSOCKERR
;

110 
	gISockë
::
£tH™dÀ
(
öt32_t
 
sock
)

112 i‡(
sock_
 !
DSOCKERR
)

113 
˛o£
();

115 
	gsock_
 = 
sock
;

116 
›í
();

119 
öt32_t
 
	gISockë
::
c⁄√˘
(
SockAddr
* 
addr
)

121 
sockÀn_t
 
Àn
 = (sockÀn_t)(
sockaddr
);

122 
öt32_t
 
	gªt
 = ::
c⁄√˘
(
sock_
, *
addr
, 
Àn
);

124 
£tAddr
(
addr
);

126  
	gªt
;

129 
öt32_t
 
	gISockë
::
shutdown
(öt32_à
mode
)

131 i‡(
sock_
 =
DSOCKERR
)

134 
öt32_t
 
	gªt
 = ::
shutdown
(
sock_
, 
mode
);

135 if(
	gªt
 =0 && 
mode
 == 2)

136 
sock_
 = 
DSOCKERR
;

137  
	gªt
;

140 
öt32_t
 
	gISockë
::
böd
(
SockAddr
* 
addr
)

142 
£tAddr
(
addr
);

143 
sockÀn_t
 
	gÀn
 = (sockÀn_t)(
sockaddr
);

144  ::
böd
(
sock_
, *
addr
, 
Àn
);

147 
öt32_t
 
	gISockë
::
li°í
(öt32_à
cou¡
)

149  ::
li°í
(
sock_
, 
cou¡
);

152 
öt32_t
 
	gISockë
::
ac˚±
(
SockAddr
* 
addr
)

154 
sockÀn_t
 
Àn
 = (sockÀn_t)(
sockaddr
);

155  ::
ac˚±
(
sock_
, *
addr
, &
Àn
);

158 
öt32_t
 
	gISockë
::
io˘l
(
cmd
, * 
¨gp
)

160  ::
io˘l
(
sock_
, 
cmd
, 
¨gp
);

163 
öt32_t
 
	gISockë
::
£tO±i⁄
(öt32_à
Àvñ
, i¡32_à
›äame
, c⁄° * 
›tvÆ
, i¡32_à
›éí
)

165  ::
£tsock›t
(
sock_
, 
Àvñ
, 
›äame
, 
›tvÆ
, 
›éí
);

168 
öt32_t
 
	gISockë
::
gëO±i⁄
(öt32_à
Àvñ
, i¡32_à
›äame
, * 
›tvÆ
, i¡32_t* 
›éí
)

170 
sockÀn_t
 
	gÀn
 = (sockÀn_t)((
›éí
) ? *optlen : 0);

171 
öt32_t
 
	gªtvÆ
;

172 
	gªtvÆ
 = 
gësock›t
(
sock_
, 
Àvñ
, 
›äame
, 
›tvÆ
, &
Àn
);

173 i‡(
	g›éí
)

174 *
	g›éí
 = 
Àn
;

176  
	gªtvÆ
;

179 
öt32_t
 
	gISockë
::
gëEºno
()

181  
î∫o
;

184 
öt32_t
 
	gISockë
::
doRecv
()

187 
Buf„r
* 
p
 = 
NULL
;

188 
	gªcv_li°_
.
cou¡
() > 0)

190 i‡(!
	gªcv_li°_
.
‰⁄t
(
p
Ë|| !
	gªcv_que_
.
push
(p))

192 
	gªcv_li°_
.
p›
(
p
);

196 
öt32_t
 
	gªt
 = 0;

197 
uöt32_t
 
	gª°_hódî_size
 = 
ªcv_hód_buf_
->
gëWrôabÀSize
();

198 i‡(
	gª°_hódî_size
 > 0)

200 
	gªt
 = 
ªcvBuf„r
(
ªcv_hód_buf_
);

202 i‡(
	gªt
 == -1)

205 i‡(
	gªt
 < 
	gª°_hódî_size
)

208 i‡(
	gªt
 =
ª°_hódî_size
)

210 
PackëHódî
 
hódî
;

211 
ªadPackëInfo
(
ªcv_hód_buf_
, 
hódî
);

212 i‡(
	ghódî
.
	g£ed
 !
∑ckë_£ed_
)

215 
ªcvCÀ¨
();

217 i‡(
	gªcv_buf_
)

218 
	gªcv_buf_
->
ªÀa£
();

219 
	gªcv_buf_
 = 
√w
 
Buf„r
();

220 
	gªcv_buf_
->
öô
(
hódî
.
Àngth
);

224 
uöt32_t
 
	gª°_size
 = 
ªcv_buf_
->
gëWrôabÀSize
();

225 i‡(
	gª°_size
 > 0)

227 
	gªt
 = 
ªcvBuf„r
(
ªcv_buf_
);

229 i‡(
	gªt
 == -1)

232 i‡(
	gªt
 < 
	gª°_size
)

238 i‡(
	gªcv_li°_
.
cou¡
(Ë> 0 || !
	gªcv_que_
.
push
(
ªcv_buf_
))

240 
	gªcv_li°_
.
push
(
ªcv_buf_
);

242 
	gªcv_buf_
 = 
NULL
;

243 
	gªcv_hód_buf_
->
ª£t
();

247 
öt32_t
 
	gISockë
::
doSíd
()

249 
uöt32_t
 
ª°_size
 = 0;

250 
uöt32_t
 
	gn£nd
 = 0;

251 i‡(
	g£nd_bufs_
 =
NULL
)

253 
£nd_bufs_
 = 
g_BufPoﬁ
->
¸óãBuf„r
(
PACKET_SIZE
);

254 
	gª°_size
 = 
PACKET_SIZE
;

257 
	gª°_size
 = 
£nd_bufs_
->
gëWrôabÀSize
();

259 
uöt32_t
 
	gª°_hódî_size
 = 
£nd_hód_buf_
->
gëRódabÀSize
();

260 i‡(
	gª°_hódî_size
 > 0)

262 
	gÀn
 = 
£nd_bufs_
->
wrôeBuf„r
(
£nd_hód_buf_
->
ªad_cur_
, 
mö
(
ª°_hódî_size
, 
ª°_size
));

263 i‡(
	gÀn
 == -1)

265 i‡(
	gÀn
 == 0)

267 
	gn£nd
 = 
Àn
;

268 
	gª°_size
 -
Àn
;

270 i‡(
	g£nd_buf_
 == 0)

272 i‡(!
£nd_que_
.
p›
(
£nd_buf_
Ë|| !
£nd_li°_
.pop(send_buf_))

274  
n£nd
;

276 
PackëHódî
 
	ghódî
;

277 
	ghódî
.
	g£ed
 = 
∑ckë_£ed_
;

278 
	ghódî
.
	gÀngth
 = 
£nd_buf_
->
gëRódabÀSize
();

279 
	gÀn
 = 
£nd_buf_
->
gëWrôabÀSize
();

280 
	g£nd_hód_buf_
->
ª£t
();

284 
Buf„r
* 
	gp
 = 
£nd_buf_
;

285 
	gp
 || 
	g£nd_que_
.
p›
(
p
Ë|| 
	g£nd_li°_
.pop(p))

288 
	gª°_size
 = 
£nd_hód_buf_
->
gëRódabÀSize
();

290 
	g£nd_li°_
.
cou¡
() > 0)

292 i‡(!
	g£nd_li°_
.
‰⁄t
(
p
Ë|| !
	g£nd_que_
.
push
(p))

294 
	g£nd_li°_
.
p›
(
p
);

296 
	gg_BufPoﬁ
->
de°royBuf„r
(
sbuf
);

301 
öt32_t
 
	gISockë
::
£ndPackë
(
Buf„r
* 
buf
)

304 
öt32_t
 
ªt
 = 0;

306 
	gªt
 = 
doSíd
();

307 } 
	gªt
 > 0);

309 
	gbuf
->
ªèö
();

310 i‡(
	g£nd_li°_
.
cou¡
(Ë> 0 || !
	g£nd_que_
.
push
(
buf
))

312 
	g£nd_li°_
.
push
(
buf
);

316 
öt32_t
 
	gISockë
::
£nd
(c⁄° * 
buf
, i¡32_à
size
, i¡32_à
mode
)

318  ::
£nd
(
sock_
, 
buf
, 
size
, 
mode
);

321 
öt32_t
 
	gISockë
::
ªcv
(* 
buf
, i¡32_à
size
, i¡32_à
mode
)

323  ::
ªcv
(
sock_
, 
buf
, 
size
, 
mode
);

326 
öt32_t
 
	gISockë
::
ªcvFrom
(* 
buf
, i¡32_à
size
, i¡32_à
mode
, 
SockAddr
 *
addr
)

328 
sockÀn_t
 
	gÀn
 = (
sockaddr
);

329  ::
ªcv‰om
(
sock_
, 
buf
, 
size
, 
mode
, *
addr
, &
Àn
);

332 
öt32_t
 
	gISockë
::
£ndTo
(c⁄° * 
buf
, i¡32_à
size
, i¡32_à
mode
, 
SockAddr
* 
addr
)

334 
sockÀn_t
 
	gÀn
 = (
sockaddr
);

335  ::
£ndto
(
sock_
, 
buf
, 
size
, 
mode
, *
addr
, 
Àn
);

338 
	gISockë
::
£tAddr
(
SockAddr
* 
addr
)

340 i‡(
addr_
 =
addr
)

342 i‡(
	gaddr_
)

343 
	gaddr_
->
ªÀa£
();

344 
	gaddr_
 = 
addr
;

345 
	gaddr_
->
ªèö
();

348 
öt32_t
 
	gISockë
::
ªcvBuf„r
(
Buf„r
* 
buf
)

350 
uöt32_t
 
size
 = 
buf
->
gëWrôabÀSize
();

351 
uöt32_t
 
	gƒecv
 = 0;

352 
öt32_t
 
	gÀn
 = 0;

353 
	gƒecv
 < 
	gsize
)

355 
	gÀn
 = 
this
->
ªcv
(
buf
->
wrôe_cur_
, 
size
 - 
ƒecv
, 0);

356 i‡(
	gÀn
 < 0)

358 i‡(
	gÀn
 == 0)

360 
	gƒecv
 +
Àn
;

361 
	gbuf
->
skùWrôe
(
Àn
);

363  
	gƒecv
;

366 
öt32_t
 
	gISockë
::
£ndBuf„r
(
Buf„r
* 
buf
)

368 
uöt32_t
 
size
 = 
buf
->
gëRódabÀSize
();

369 
uöt32_t
 
	gn£nd
 = 0;

370 
öt32_t
 
	gÀn
 = 0;

371 
	gn£nd
 < 
	gsize
)

373 
	gÀn
 = 
this
->
£nd
(
buf
->
ªad_cur_
, 
size
 - 
n£nd
, 0);

374 i‡(
	gÀn
 < 0)

376 i‡(
	gÀn
 == 0)

378 
	gn£nd
 +
Àn
;

379 
	gbuf
->
skùRód
(
Àn
);

381  
	gn£nd
;

384 
	gISockë
::
ªcvCÀ¨
()

386 c⁄° 
öt32_t
 
BSIZE
 = 512;

387 
	gbuf
[
BSIZE
];

388 
öt32_t
 
	gÀn
 = -1;

390 
	gÀn
 = 
this
->
ªcv
(
buf
, 
BSIZE
, 0);

391 } 
	gÀn
 < 
	gBSIZE
);

394 
	gISockë
::
dólRecv
()

	@network/Socket.h

1 #i‚de‡
__KIT_SOCKET_H__


2 
	#__KIT_SOCKET_H__


	)

4 
	~"Ref.h
"

5 
	~"kôsys.h
"

6 
	~"Packë.h
"

7 
	~"Queue.h
"

8 
	~"Li°.h
"

10 
	#DSOCKERR
 -1

	)

12 
«me•a˚
 
	gkô
 {

14 
˛ass
 
	gSockAddr
;

15 
˛ass
 
	gBuf„r
;

17 ˛as†
	cISockë
 : 
public
 
Ref


19 
public
:

20 
ISockë
();

21 
	gvútuÆ
 ~
ISockë
();

23 
vútuÆ
 
öô
();

24 
vútuÆ
 
öô
(
öt32_t
 
Ámûy
, i¡32_à
ty≥
, i¡32_à
¥Ÿocﬁ
);

25 
vútuÆ
 
öô
(
öt32_t
 
sock
);

27 
›í
();

28 
˛o£
();

30 
öt32_t
 
c⁄√˘
(
SockAddr
* 
addr
);

31 
öt32_t
 
shutdown
(öt32_à
mode
);

32 
öt32_t
 
böd
(
SockAddr
* 
addr
);

33 
öt32_t
 
li°í
(öt32_à
cou¡
);

34 
öt32_t
 
ac˚±
(
SockAddr
* 
addr
);

35 
öt32_t
 
gëEºno
();

38 
öt32_t
 
£nd
(c⁄° * 
buf
, i¡32_à
size
, i¡32_à
mode
 = 0);

39 
öt32_t
 
ªcv
(* 
buf
, i¡32_à
size
, i¡32_à
mode
 = 0);

40 
öt32_t
 
£ndTo
(c⁄° * 
buf
, i¡32_à
size
, i¡32_à
mode
, 
SockAddr
* 
addr
);

41 
öt32_t
 
ªcvFrom
(* 
buf
, i¡32_à
size
, i¡32_à
mode
, 
SockAddr
* 
addr
);

43 
öt32_t
 
io˘l
(
cmd
, * 
¨gp
);

44 
öt32_t
 
£tO±i⁄
(öt32_à
Àvñ
, i¡32_à
›äame
, c⁄° * 
›tvÆ
, i¡32_à
›éí
);

45 
öt32_t
 
gëO±i⁄
(öt32_à
Àvñ
, i¡32_à
›äame
, * 
›tvÆ
, i¡32_t* 
›éí
);

47 
£tH™dÀ
(
öt32_t
 
_sock
);

48 
ölöe
 
öt32_t
 
gëH™dÀ
(Ëc⁄° {  
	gsock_
; }

50 
£tAddr
(
SockAddr
* 
addr
);

51 
SockAddr
* 
gëAddr
(Ëc⁄° {  
	gaddr_
; }

55 
öt32_t
 
doRecv
();

58 
öt32_t
 
doSíd
();

61 
öt32_t
 
£ndPackë
(
Buf„r
* 
buf
);

63 
dólRecv
();

65 
boﬁ
 
vÆid
(Ëc⁄° {  
	gvÆid_
; }

68 
boﬁ
 
	gvÆid_
;

70 
boﬁ
 
	gªadyOut_
;

71 
	g¥Ÿe˘ed
:

74 
öt32_t
 
ªcvBuf„r
(
Buf„r
* 
buf
);

75 
öt32_t
 
£ndBuf„r
(
Buf„r
* 
buf
);

77 
ªcvCÀ¨
();

79 
	g¥Ÿe˘ed
:

80 
öt32_t
 
sock_
;

81 
SockAddr
* 
	gaddr_
;

83 
	g¥iv©e
:

85 
uöt32_t
 
∑ckë_£ed_
;

87 
uöt32_t
 
	gªcv_cou¡_
;

89 
Buf„r
* 
	gªcv_hód_buf_
;

90 
Buf„r
* 
	g£nd_hód_buf_
;

92 
Buf„r
* 
	gªcv_buf_
;

93 
Buf„r
* 
	g£nd_buf_
;

94 
Buf„r
* 
	g£nd_bufs_
;

97 
	gQueue
<
	tBuf„r
*, 200> 
	tBuf„rQue
;

99 
Buf„rQue
 
	gªcv_que_
;

100 
Buf„rQue
 
	g£nd_que_
;

102 
	gLi°
<
	gBuf„r
*> 
	gªcv_li°_
;

103 
	gLi°
<
	gBuf„r
*> 
	g£nd_li°_
;

108 #ifde‡
PLATFORM_LINUX


109 
	~<∂©f‹m/löux/Sockë_löux.h
>

110 #ñi‡
deföed
 
PLATFORM_WINDOWS


111 
	~<∂©f‹m/wö/Sockë_wö.h
>

	@network/netsys.h

1 #i‚de‡
__KIT_NET_SYS_H__


2 
	#__KIT_NET_SYS_H__


	)

4 #ifde‡
PLATFORM_LINUX


5 
	~<uni°d.h
>

6 
	~<√tdb.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/sockë.h
>

9 
	~<sys/ïﬁl.h
>

10 
	~<¨∑/öë.h
>

11 
	~<√töë/ö.h
>

12 
	~<√töë/t˝.h
>

14 
	#KIT_AF_INET
 
AF_INET


	)

15 
	#KIT_SOCK_STREAM
 
SOCK_STREAM


	)

17 
	#KIT_POLLIN
 
EPOLLIN


	)

18 
	#KIT_POLLOUT
 
EPOLLOUT


	)

19 
	#KIT_POLLERR
 
EPOLLERR


	)

22 #ñi‡
deföed
 
PLATFORM_WINDOWS


24 
	#KIT_AF_INET
 
AF_INET


	)

25 
	#KIT_SOCK_STREAM
 
SOCK_STREAM


	)

29 
	~"kôsys.h
"

31 
«me•a˚
 
	gkô
 {

33 c⁄° 
uöt32_t
 
	gPACKET_SIZE
 512;

35 
	sPﬁlEvít
 {

36 
öt32_t
 
	gevíts
;

37 
öt32_t
 
	gfd
;

	@network/network.h

1 #i‚de‡
__KIT_NETWORK_H__


2 
	#__KIT_NETWORK_H__


	)

4 
	~"SockAddr.h
"

5 
	~"Sockë.h
"

6 
	~"Sîvî.h
"

	@network/platform/linux/Client_linux.cpp

1 
	~"Clõ¡_löux.h
"

2 
	~"Sockë.h
"

3 
	~"SockAddr.h
"

4 
	~<uni°d.h
>

5 
	~<√tdb.h
>

6 
	~<sys/ïﬁl.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/sockë.h
>

9 
	~<¨∑/öë.h
>

10 
	~<√töë/ö.h
>

11 
	~<√töë/t˝.h
>

12 
	~<î∫o.h
>

13 
	~<°dlib.h
>

14 
	~<±hªad.h
>

15 
	~"Loggî.h
"

17 
«me•a˚
 
	gkô
 {

19 c⁄° 
öt32_t
 
	gMAX_LISTEN
 = 50;

21 
	gClõ¡
::
Clõ¡
()

22 : 
pﬁl_fd_
(0)

23 , 
thªad_id_
(0)

27 
	gClõ¡
::~
Clõ¡
()

31 * 
thªad_°¨t
(* 
p
)

33 i‡(!
p
)

36 
Clõ¡
* 
	g˛õ¡
 = (Clõ¡*)
p
;

37 
	g˛õ¡
->
run
();

42 
öt32_t
 
	gClõ¡
::
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
)

44 
	gªt
 = 
IClõ¡
::
°¨tup
(
ù
, 
p‹t
);

45 i‡(
	gªt
 < 0)

46  
	gªt
;

48 
	ga˘ive_
 = 
Ál£
;

51 
öt32_t
 
	gpﬁl_fd
 = 
ïﬁl_¸óã
(1);

52 i‡(
	gpﬁl_fd
 < 0)

54 
ERR
("[Clõ¡](°¨tupËïﬁl_¸óãÉº‹! %s, %d", 
__FILE__
, 
__LINE__
);

58 
	gpﬁl_fd_
 = 
pﬁl_fd
;

60 
öt32_t
 
	gsockfd
 = 
sockë_
->
gëH™dÀ
();

61 
	gªt
 = 
addCål
(
sockfd
, 
EPOLLET
 | 
EPOLLOUT
 | 
EPOLLIN
);

62 i‡(
	gªt
 < 0)

64 
ERR
("[Clõ¡](°¨tupËadd cå»îr‹! %s, %d", 
__FILE__
, 
__LINE__
);

69 
±hªad_t
 
	gpid
;

70 
	gªt
 = 
±hªad_¸óã
(&
pid
, 
NULL
, 
thªad_°¨t
, (*)
this
);

71 i‡(
	gªt
 < 0)

73 
ERR
("[Clõ¡](°¨tupË¸óãÅhªadÉº‹! %s, %d", 
__FILE__
, 
__LINE__
);

76 
	gthªad_id_
 = (
öt64_t
)
pid
;

81 
	gClõ¡
::
run
()

83 autÿ
addr
 = 
sockë_
->
gëAddr
();

84 
	gsockë_
->
c⁄√˘
(
addr
) < 0)

86 
	gkô
::
¶ìp
(2000);

87 
DBG
("[Clõ¡]‘unËc⁄√˘ ip:%†p‹t:%d", 
addr
->
ù
.
c_°r
(),áddr->
p‹t
);

90 
	ga˘ive_
 = 
åue
;

92 
LOG
("[Clõ¡](°¨tupËsuc˚ssÊy! ip: %†p‹t: %d", 
addr
->
ù
.
c_°r
(),áddr->
p‹t
);

96 
öt32_t
 
	g˙t
 = 0;

97 
öt32_t
 
	gª°
 = 0;

98 
öt32_t
 
	gïﬁl_fd
 = 
pﬁl_fd_
;

100 
ïﬁl_evít
 
	gevíts
[
CLIENT_EVENT_CNT
];

101 
mem£t
(&
evíts
, 0, (events));

103 
PﬁlEvít
 
	gout_ev
;

104 
Sockë
* 
	gsockë
;

105 
	gEvítQue
& 
	gque
 = 
evít_que_
;

107 
	ga˘ive_
)

109 
	gª°
 = 
que
.
ª°
();

110 i‡(
	gª°
 == 0)

112 
kô
::
¶ìp
(100);

113 
DBG
("[Client](run) EPOLL WAIT");

117 
	g˙t
 = 
ïﬁl_waô
(
ïﬁl_fd
, 
evíts
, 
ª°
, 
timevÆ_
);

118 i‡(
	g˙t
 =-1 && 
î∫o
 =
EINTR
)

121 
out_ev
.
evíts
 = 
EPOLLERR
;

122 
	gout_ev
.
	gfd
 = 
sockë_
->
gëH™dÀ
();

123 
	gque
.
push
(
out_ev
);

128 
	gi
 = 0; i !
˙t
; ++i)

130 c⁄° 
	gïﬁl_evít
& 
	gev
 = 
evíts
[
i
];

131 
h™dÀEvíts
(
ev
.
evíts
);

133 
	gout_ev
.
	gevíts
 = 
ev
.
evíts
;

134 
	gout_ev
.
	gfd
 = 
ev
.
d©a
.
fd
;

135 i‡(!
	gque
.
push
(
out_ev
))

137 
DBG
("[Client](run) EventQueÖush ERROR!");

144 
	gClõ¡
::
upd©e
()

147 
PﬁlEvít
 
ev
;

148 
öt32_t
 
	g˙t
 = 
evít_que_
.
cou¡
();

150 
	gi
 = 0; i !
˙t
; ++i)

152 i‡(!
	gevít_que_
.
p›
(
ev
))

154 
DBG
("[Clõ¡](upd©eËpﬁ»evíàfd=%d", 
ev
.
fd
);

158 
	gClõ¡
::
h™dÀEvíts
(
öt32_t
 
evíts
)

160 i‡(
evíts
 & 
EPOLLIN
)

162 
DBG
("[Client](handleEvents) EPOLLIN");

164 i‡(
	gevíts
 & 
	gEPOLLOUT
)

166 
DBG
("[Client](handleEvents) EPOLLOUT");

168 i‡(
	gevíts
 & 
	gEPOLLERR
)

172 
DBG
("[Client](handleEvents) EPOLLERR");

176 
öt32_t
 
	gClõ¡
::
addCål
(öt32_à
fd
, i¡32_à
evíts
)

179 
ïﬁl_evít
 
	gev
;

180 
mem£t
(&
ev
, 0, (ev));

181 
	gev
.
	gevíts
 = 
evíts
;

182 
	gev
.
	gd©a
.
	gfd
 = 
fd
;

183 
öt32_t
 
	gªt
 = 
ïﬁl_˘l
(
pﬁl_fd_
, 
EPOLL_CTL_ADD
, 
fd
, &
ev
);

184  
	gªt
;

187 
öt32_t
 
	gClõ¡
::
dñCål
(öt32_à
fd
)

190 
ïﬁl_evít
 
ev
;

191 
mem£t
(&
ev
, 0, (ev));

192 
	gev
.
	gevíts
 = 0;

193 
	gev
.
	gd©a
.
	gfd
 = 
fd
;

194 
öt32_t
 
	gªt
 = 
ïﬁl_˘l
(
pﬁl_fd_
, 
EPOLL_CTL_DEL
, 
fd
, &
ev
);

195  
	gªt
;

198 
öt32_t
 
	gClõ¡
::
shutdown
()

200 
IClõ¡
::
shutdown
();

201 i‡(
	gthªad_id_
)

204 
±hªad_joö
((
±hªad_t
)
thªad_id_
, 
NULL
);

205 
	gthªad_id_
 = 0;

208 
LOG
("[Client](shutdown) successfly!");

	@network/platform/linux/Client_linux.h

1 #i‚de‡
__KIT_CLIENT_LINUX_H__


2 
	#__KIT_CLIENT_LINUX_H__


	)

4 
	~"Clõ¡.h
"

5 
	~"√tsys.h
"

6 
	~"Queue.h
"

7 
	~<sys/ïﬁl.h
>

9 
«me•a˚
 
	gkô
 {

11 c⁄° 
uöt16_t
 
	gCLIENT_EVENT_CNT
 = 128;

13 ˛as†
	cClõ¡
 : 
public
 
IClõ¡


15 
public
:

16 
KIT_CREATE_FUNC
(
Clõ¡
)

18 
Clõ¡
();

19 
	gvútuÆ
 ~
Clõ¡
();

20 
vútuÆ
 
öt32_t
 
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
);

21 
vútuÆ
 
öt32_t
 
shutdown
();

24 
run
();

26 
vútuÆ
 
upd©e
();

27 
	g¥iv©e
:

28 
öt32_t
 
addCål
(öt32_à
fd
, i¡32_à
evíts
);

29 
öt32_t
 
dñCål
(öt32_à
fd
);

31 
h™dÀEvíts
(
öt32_t
 
evíts
);

32 
	g¥iv©e
:

33 
öt32_t
 
pﬁl_fd_
;

34 
öt64_t
 
	gthªad_id_
;

37 
	gQueue
<
	tPﬁlEvít
,
	tCLIENT_EVENT_CNT
> 
	tEvítQue
;

38 
EvítQue
 
	gevít_que_
;

	@network/platform/linux/Server_linux.cpp

1 
	~"Sîvî_löux.h
"

2 
	~"Sockë.h
"

3 
	~"SockAddr.h
"

4 
	~<uni°d.h
>

5 
	~<√tdb.h
>

6 
	~<sys/ïﬁl.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/sockë.h
>

9 
	~<¨∑/öë.h
>

10 
	~<√töë/ö.h
>

11 
	~<√töë/t˝.h
>

12 
	~<î∫o.h
>

13 
	~<°dlib.h
>

14 
	~<±hªad.h
>

15 
	~"Loggî.h
"

17 
«me•a˚
 
	gkô
 {

19 c⁄° 
öt32_t
 
	gMAX_LISTEN
 = 50;

21 
	gSîvî
::
Sîvî
()

22 : 
pﬁl_fd_
(0)

23 , 
thªad_id_
(0)

27 
	gSîvî
::~
Sîvî
()

31 * 
thªad_°¨t
(* 
p
)

33 i‡(!
p
)

36 
Sîvî
* 
	g£rvî
 = (Sîvî*)
p
;

37 
	g£rvî
->
run
();

42 
öt32_t
 
	gSîvî
::
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
)

44 
	gªt
 = 
ISîvî
::
°¨tup
(
ù
, 
p‹t
);

45 i‡(
	gªt
 < 0)

46  
	gªt
;

48 
	ga˘ive_
 = 
Ál£
;

51 
öt32_t
 
	gpﬁl_fd
 = 
ïﬁl_¸óã
(
CONNECTION_LIMIT
);

52 i‡(
	gpﬁl_fd
 < 0)

54 
ERR
("[Sîvî](°¨tupËïﬁl_¸óãÉº‹! %s, %d", 
__FILE__
, 
__LINE__
);

58 
	gpﬁl_fd_
 = 
pﬁl_fd
;

60 
öt32_t
 
	gli°ífd
 = 
sockë_
->
gëH™dÀ
();

61 
	gªt
 = 
addCål
(
li°ífd
, 
EPOLLET
 | 
EPOLLIN
);

62 i‡(
	gªt
 < 0)

64 
ERR
("[Sîvî](°¨tupËaddÜi°í sockëÉº‹! %s, %d", 
__FILE__
, 
__LINE__
);

68 
	ga˘ive_
 = 
åue
;

71 
±hªad_t
 
	gpid
;

72 
	gªt
 = 
±hªad_¸óã
(&
pid
, 
NULL
, 
thªad_°¨t
, (*)
this
);

73 i‡(
	gªt
 < 0)

75 
ERR
("[Sîvî](°¨tupË¸óãÅhªadÉº‹! %s, %d", 
__FILE__
, 
__LINE__
);

78 
	gthªad_id_
 = (
öt64_t
)
pid
;

80 
LOG
("[Sîvî](°¨tupËsuc˚ssÊy! ip: %†p‹t: %d", 
ù
, 
p‹t
);

86 
	gSîvî
::
run
()

88 
öt32_t
 
˙t
 = 0;

89 
öt32_t
 
	gª°
 = 0;

90 
öt32_t
 
	gïﬁl_fd
 = 
pﬁl_fd_
;

91 
öt32_t
 
	gªt
 = 0;

92 
öt32_t
 
	gsock_fd
 = 0;

93 
öt32_t
 
	gsock_ev
 = 0;

95 
ïﬁl_evít
 
	gevíts
[
SERVER_EVENT_CNT
];

96 
mem£t
(&
evíts
, 0, (events));

98 
PﬁlEvít
 
	gout_ev
;

99 
Sockë
* 
	gsockë
;

100 
	gEvítQue
& 
	gque
 = 
evít_que_
;

102 
	ga˘ive_
)

104 
	gª°
 = 
que
.
ª°
();

105 i‡(
	gª°
 == 0)

107 
kô
::
¶ìp
(100);

108 
DBG
("[Server](run) EPOLL WAIT");

112 
	g˙t
 = 
ïﬁl_waô
(
ïﬁl_fd
, 
evíts
, 
ª°
, 
timevÆ_
);

113 i‡(
	g˙t
 =-1 && 
î∫o
 =
EINTR
)

116 
out_ev
.
evíts
 = 
EPOLLERR
;

117 
	gout_ev
.
	gfd
 = 
sockë_
->
gëH™dÀ
();

118 
	gque
.
push
(
out_ev
);

123 
	gi
 = 0; i !
˙t
; ++i)

125 c⁄° 
	gïﬁl_evít
& 
	gev
 = 
evíts
[
i
];

126 
	gsock_fd
 = 
ev
.
d©a
.
fd
;

127 
	gsock_ev
 = 
ev
.
evíts
;

129 
	gsockë
 = 
gëSockë
(
sock_fd
);

130 i‡(
	gsockë
)

131 
	gªt
 = 
h™dÀSockë
(
sockë
, 
sock_ev
);

133 
	gªt
 = -1;

135 i‡(
	gªt
 == -1)

137 
dñSockë
(
sock_fd
);

138 
dñCål
(
sock_fd
);

139 
	gsock_ev
 |
EPOLLERR
;

143 
	gout_ev
.
	gfd
 = 
sock_fd
;

144 
	gout_ev
.
	gevíts
 = 
sock_ev
;

145 i‡(!
	gque
.
push
(
out_ev
))

148 
DBG
("[Server](run) EventQueÖush ERROR!");

156 
	gSîvî
::
upd©e
()

158 
ISîvî
::
upd©e
();

161 
öt32_t
 
	gSîvî
::
h™dÀSockë
(
Sockë
* 
sock
, i¡32_à
evíts
)

163 i‡(
	gsock
 =
sockë_
 && 
evíts
 & 
EPOLLIN
)

165 i‡(
evíts
 & 
EPOLLERR
)

167 
DBG
("[Server](handleSocket) server disconnect!");

173 
SockAddr
* 
	gaddr
 = SockAddr::
¸óã
();

174 
öt32_t
 
	gfd
 = 
sockë_
->
ac˚±
(
addr
);

175 i‡(
	gfd
 =
DSOCKERR
)

177 
ERR
("[Server](handleAccept)áccept fail!");

182 
addSockë
(
fd
);

183 
addCål
(
fd
, 
EPOLLET
 | 
EPOLLIN
 | 
EPOLLOUT
);

184 
LOG
("[Sîvî](h™dÀAc˚±Ëac˚± suc˚ssfuŒy! fd:%d", 
fd
);

191 i‡(
	gevíts
 & 
	gEPOLLIN
)

193 
öt32_t
 
	gªt
 = 0;

195 
	gªt
 = 
sock
->
doRecv
();

196 } 
	gªt
 == 1);

197 i‡(
	gªt
 == -1)

202 
DBG
("[Sîvî](h™dÀSockëËEPOLLIN fd:%d", 
sock
->
gëH™dÀ
());

204 i‡(
	gevíts
 & 
	gEPOLLOUT
)

207 
	gsock
->
	gªadyOut_
 = 
åue
;

208 
DBG
("[Sîvî](h™dÀSockëËEPOLLOUT fd:%d", 
sock
->
gëH™dÀ
());

211 i‡(
	gevíts
 & 
	gEPOLLERR
)

214 
DBG
("[Sîvî](h™dÀSockëËEPOLLERR fd:%d", 
sock
->
gëH™dÀ
());

216 
öt32_t
 
	gcfd
 = 
sock
->
gëH™dÀ
();

217 
dñSockë
(
cfd
);

218 
dñCål
(
cfd
);

224 
öt32_t
 
	gSîvî
::
addCål
(öt32_à
fd
, i¡32_à
evíts
)

227 
ïﬁl_evít
 
	gev
;

228 
mem£t
(&
ev
, 0, (ev));

229 
	gev
.
	gevíts
 = 
evíts
;

230 
	gev
.
	gd©a
.
	gfd
 = 
fd
;

231 
öt32_t
 
	gªt
 = 
ïﬁl_˘l
(
pﬁl_fd_
, 
EPOLL_CTL_ADD
, 
fd
, &
ev
);

232  
	gªt
;

235 
öt32_t
 
	gSîvî
::
dñCål
(öt32_à
fd
)

238 
ïﬁl_evít
 
ev
;

239 
mem£t
(&
ev
, 0, (ev));

240 
	gev
.
	gevíts
 = 0;

241 
	gev
.
	gd©a
.
	gfd
 = 
fd
;

242 
öt32_t
 
	gªt
 = 
ïﬁl_˘l
(
pﬁl_fd_
, 
EPOLL_CTL_DEL
, 
fd
, &
ev
);

243  
	gªt
;

246 
öt32_t
 
	gSîvî
::
shutdown
()

248 
ISîvî
::
shutdown
();

249 i‡(
	gthªad_id_
)

252 
±hªad_joö
((
±hªad_t
)
thªad_id_
, 
NULL
);

253 
	gthªad_id_
 = 0;

256 
LOG
("[Server](shutdown) successfly!");

	@network/platform/linux/Server_linux.h

1 #i‚de‡
__KIT_SERVER_LINUX_H__


2 
	#__KIT_SERVER_LINUX_H__


	)

4 
	~"Sîvî.h
"

5 
	~"√tsys.h
"

6 
	~"Queue.h
"

8 
«me•a˚
 
	gkô
 {

11 ˛as†
	cSîvî
 : 
public
 
ISîvî


13 
public
:

14 
KIT_CREATE_FUNC
(
Sîvî
)

16 
Sîvî
();

17 
	gvútuÆ
 ~
Sîvî
();

18 
vútuÆ
 
öt32_t
 
°¨tup
(c⁄° * 
ù
, i¡32_à
p‹t
);

19 
vútuÆ
 
öt32_t
 
shutdown
();

22 
run
();

24 
vútuÆ
 
upd©e
();

25 
	g¥iv©e
:

26 
öt32_t
 
addCål
(öt32_à
fd
, i¡32_à
evíts
);

27 
öt32_t
 
dñCål
(öt32_à
fd
);

30 
öt32_t
 
h™dÀSockë
(
Sockë
* 
sock
, i¡32_à
evíts
);

31 
	g¥iv©e
:

32 
öt32_t
 
pﬁl_fd_
;

33 
öt64_t
 
	gthªad_id_
;

	@network/platform/linux/SockAddr_linux.cpp

1 
	~"SockAddr_löux.h
"

2 
	~<sys/sockë.h
>

3 
	~<√tdb.h
>

4 
	~<¨∑/öë.h
>

5 
	~"ba£.h
"

7 
«me•a˚
 
	gkô
 {

9 
	gSockAddr
::~
SockAddr
()

11 i‡(
addr_
)

13 
dñëe
 
addr_
;

14 
	gaddr_
 = 
NULL
;

17 
	gSockAddr
::
öô
(c⁄° * 
ù
, 
uöt16_t
 
p‹t
, uöt16_à
Ámûy
)

19 
	gISockAddr
::
öô
(
ù
, 
p‹t
, 
Ámûy
);

21 
	gvÆid_
 = 
Ál£
;

22 i‡(
	gaddr_
 =
NULL
)

24 
addr_
 = 
√w
 
sockaddr
();

26 
mem£t
(
addr_
, 0, (*addr_));

28 
sockaddr_ö
* 
	gaddr
 = (sockaddr_ö*)
addr_
;

31 
boﬁ
 
	gis_«me
 = 
Ál£
;

32 
	gi
 = 0; 
	gù
[
i
]; ++i)

34 
	gs
 = 
ù
[
i
];

35 i‡(!((
	gs
 >'0' && 
s
 <= '9') || s == '.'))

37 
is_«me
 = 
åue
;

42 i‡(
	gis_«me
)

44 
ho°ít
* 
	ght
 = ::
gëho°by«me
(
ù
);

45 i‡(
	ght
 =
NULL
 || 
ht
->
h_Àngth
 != 4)

47 
ERR
("[SockAddr](öôËîr‹! %s, %d", 
__FILE__
, 
__LINE__
);

51 
mem˝y
((*)&(
addr
->
sö_addr
), 
ht
->
h_addr
, ht->
h_Àngth
);

55 
	gaddr
->
	gsö_addr
.
	gs_addr
 = 
öë_addr
(
ù
);

58 
	gaddr
->
	gsö_p‹t
 = 
ht⁄s
(
p‹t
);

59 
	gaddr
->
	gsö_Ámûy
 = 
Ámûy
;

60 
	gvÆid_
 = 
åue
;

	@network/platform/linux/SockAddr_linux.h

1 #i‚de‡
__KIT_SOCK_ADDR_LINUX_H__


2 
	#__KIT_SOCK_ADDR_LINUX_H__


	)

4 
	~"SockAddr.h
"

6 
«me•a˚
 
	gkô
 {

8 ˛as†
	cSockAddr
 : 
public
 
ISockAddr


10 
public
:

11 
KIT_CREATE_FUNC
(
SockAddr
)

12 
vútuÆ
 ~
SockAddr
();

13 
vútuÆ
 
öô
(c⁄° * 
ù
, 
uöt16_t
 
p‹t
, uöt16_à
Ámûy
);

	@network/platform/linux/Socket_linux.cpp

1 
	~"Sockë_löux.h
"

2 
	~"SockAddr.h
"

3 
	~<uni°d.h
>

4 
	~<√tdb.h
>

5 
	~<sys/io˘l.h
>

6 
	~<sys/sockë.h
>

7 
	~<¨∑/öë.h
>

8 
	~<√töë/ö.h
>

9 
	~<√töë/t˝.h
>

10 
	~<î∫o.h
>

11 
	~<°dio.h
>

12 
	~"ba£.h
"

14 
«me•a˚
 
	gkô
 {

	@network/platform/linux/Socket_linux.h

1 #i‚de‡
__KIT_SOCKET_LINUX_H__


2 
	#__KIT_SOCKET_LINUX_H__


	)

4 
	~"Sockë.h
"

6 
«me•a˚
 
	gkô
 {

8 ˛as†
	cSockë
 : 
public
 
ISockë


10 
public
:

11 
KIT_CREATE_FUNC
(
Sockë
)

	@network/platform/win/Client.cpp

	@network/platform/win/Server.cpp

1 
	~"Sîvî.h
"

2 
	~"Sockë.h
"

3 
	~"SockAddr.h
"

4 
	~<uni°d.h
>

5 
	~<√tdb.h
>

6 
	~<sys/ïﬁl.h
>

7 
	~<sys/io˘l.h
>

8 
	~<sys/sockë.h
>

9 
	~<¨∑/öë.h
>

10 
	~<√töë/ö.h
>

11 
	~<√töë/t˝.h
>

12 
	~<î∫o.h
>

13 
	~<°dlib.h
>

14 
	~"Loggî.h
"

16 
«me•a˚
 
	gkô
 {

18 c⁄° 
öt32_t
 
	gMAX_LISTEN
 = 50;

20 
	gSîvî
::
Sîvî
()

21 : 
sockë_
(
NULL
)

25 
Sîvî
::~Server()

29 
Sîvî
::
°¨tup
(c⁄° * 
ù
, 
öt32_t
 
p‹t
)

31 i‡(
	gsockë_
)

33 
shutdown
();

37 
SockAddr
 
	gaddr
;

38 
	gaddr
.
öô
(
ù
, 
p‹t
, 
AF_INET
);

39 i‡(!
	gaddr
.
vÆid
())

41 
ERR
("[Sîvî](°¨upËsockadd∏îr‹! %s, %d", 
ù
, 
p‹t
);

46 
	gsockë_
 = 
√w
 
Sockë
();

47 
	gsockë_
->
öô
(
AF_INET
, 
SOCK_STREAM
, 0);

48 i‡(!
	gsockë_
->
vÆid
())

50 
ERR
("[Sîvî](°¨upËsockëÉº‹! %s, %d", 
ù
, 
p‹t
);

55 i‡(
	gsockë_
->
böd
(
addr
) < 0)

57 
ERR
("[Sîvî](°¨upËbödÉº‹! %s, %d", 
ù
, 
p‹t
);

62 i‡(
	gsockë_
->
li°í
(
MAX_LISTEN
) < 0)

64 
ERR
("[Sîvî](°¨upËli°íÉº‹! %s, %d", 
ù
, 
p‹t
);

71 
	gSîvî
::
shutdown
()

73 i‡(
sockë_
)

75 
sockë_
->
˛o£
();

76 
dñëe
 
	gsockë_
;

77 
	gsockë_
 = 
NULL
;

	@network/platform/win/SockAddr.cpp

1 
	~"SockAddr.h
"

2 
	~"ba£.h
"

3 
	~<√töë/ö.h
>

5 
«me•a˚
 
	gkô
 {

7 
	gSockAddr
::
SockAddr
()

8 : 
addr_
(
NULL
)

12 
SockAddr
::~SockAddr()

14 i‡(
addr_
 !
NULL
)

16 
dñëe
 
addr_
;

20 
	gSockAddr
::
öô
(c⁄° * 
ù
, 
uöt16_t
 
p‹t
, uöt16_à
Ámûy
)

22 i‡(
	gaddr_
 =
NULL
)

24 
addr_
 = 
√w
 
sockaddr
();

26 
mem£t
(
addr_
, 0, (*addr_));

28 
sockaddr_ö
 *
	gaddr
 = (sockaddr_ö*)
addr_
;

31 
boﬁ
 
	gis_«me
 = 
Ál£
;

32 
	gi
 = 0; 
	gù
[
i
]; ++i)

34 
	gs
 = 
ù
[
i
];

35 i‡(!((
	gs
 >'0' && 
s
 <= '9') || s == '.'))

37 
is_«me
 = 
åue
;

42 i‡(
	gis_«me
)

44 
ho°ít
* 
	ght
 = ::
gëho°by«me
(
ù
);

45 i‡(
	ght
 =
NULL
 || 
ht
->
h_Àngth
 != 4)

47 
ERR
("[SockAddr](öôËîr‹! %s, %d", 
__FILE__
, 
__LINE__
);

51 
mem˝y
((*)&(
addr
->
sö_addr
), 
ht
->
h_addr
, ht->
h_Àngth
);

55 
	gaddr
->
	gsö_addr
.
	gS_un
.
	gS_addr
 = 
öë_addr
(
ù
);

58 
	gaddr
->
	gsö_p‹t
 = 
ht⁄s
(
p‹t
);

59 
	gaddr
->
	gsö_Ámûy
 = 
Ámûy
;

	@network/platform/win/Socket.cpp

1 
	~"Sockë.h
"

2 
	~<uni°d.h
>

3 
	~<√tdb.h
>

4 
	~<sys/io˘l.h
>

5 
	~<sys/sockë.h
>

6 
	~<¨∑/öë.h
>

7 
	~<√töë/ö.h
>

8 
	~<√töë/t˝.h
>

9 
	~<î∫o.h
>

10 
	~<°dio.h
>

11 
	~"ba£.h
"

13 
«me•a˚
 
	gkô
 {

15 
	gSockë
::
Sockë
()

16 : 
sock_
(
DSOCKERR
)

20 
Sockë
::~Socket()

22 i‡(
sock_
 !
DSOCKERR
)

23 
˛o£
();

26 
	gSockë
::
öô
(
öt32_t
 
Ámûy
, i¡32_à
ty≥
, i¡32_à
¥Ÿocﬁ
)

28 i‡(
	gsock_
 !
DSOCKERR
)

29 
˛o£
();

30 
	gsock_
 = (
öt32_t
)::
sockë
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
);

31 i‡(
	gsock_
 < 0)

33 
	gsock_
 = 
DSOCKERR
;

37 
›í
();

40 
	gSockë
::
›í
()

42 
öt32_t
 
noblock
 = 1;

43 
öt32_t
 
	gªvÆue
 = 1;

46 
io˘l
(
FIONBIO
, (*)(&
noblock
));

49 
£tO±i⁄
(
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
ªvÆue
, (
öt32_t
)(revalue));

52 #i‚de‡
PLATFORM_LINUX


53 
£tO±i⁄
(
IPPROTO_TCP
, 
TCP_NODELAY
, (*)&
ªvÆue
, (
öt32_t
)(revalue));

55 
£tO±i⁄
(
SOL_TCP
, 
TCP_NODELAY
, (*)&
ªvÆue
, (
öt32_t
)(revalue));

60 
	gSockë
::
˛o£
()

62 i‡(
sock_
 =
DSOCKERR
)

65 ::
˛o£
(
sock_
);

67 
	gsock_
 = 
DSOCKERR
;

70 
	gSockë
::
£tH™dÀ
(
öt32_t
 
sock
)

72 i‡(
sock_
 !
DSOCKERR
)

73 
˛o£
();

74 i‡(
	gsock
 < 0)

77 
	gsock_
 = 
sock
;

78 
›í
();

81 
öt32_t
 
	gSockë
::
c⁄√˘
(c⁄° 
sockaddr
* 
addr
)

83 
sockÀn_t
 
Àn
 = (sockÀn_t)(
sockaddr
);

84 
öt32_t
 
	gªt
 = ::
c⁄√˘
(
sock_
, 
addr
, 
Àn
);

86  
	gªt
;

89 
öt32_t
 
	gSockë
::
shutdown
(öt32_à
mode
)

91 i‡(
sock_
 =
DSOCKERR
)

94 
öt32_t
 
	gªt
 = ::
shutdown
(
sock_
, 
mode
);

95 if(
	gªt
 =0 && 
mode
 == 2)

96 
sock_
 = 
DSOCKERR
;

97  
	gªt
;

100 
öt32_t
 
	gSockë
::
böd
(c⁄° 
sockaddr
* 
addr
)

102 
sockÀn_t
 
Àn
 = (sockÀn_t)(
sockaddr
);

103  ::
böd
(
sock_
, 
addr
, 
Àn
);

106 
öt32_t
 
	gSockë
::
li°í
(öt32_à
cou¡
)

108  ::
li°í
(
sock_
, 
cou¡
);

111 
öt32_t
 
	gSockë
::
ac˚±
(
sockaddr
* 
addr
)

113 
sockÀn_t
 
Àn
 = (sockÀn_t)(
sockaddr
);

114  ::
ac˚±
(
sock_
, 
addr
, &
Àn
);

117 
öt32_t
 
	gSockë
::
io˘l
(
cmd
, * 
¨gp
)

119  ::
io˘l
(
sock_
, 
cmd
, 
¨gp
);

122 
öt32_t
 
	gSockë
::
£tO±i⁄
(öt32_à
Àvñ
, i¡32_à
›äame
, c⁄° * 
›tvÆ
, i¡32_à
›éí
)

124  ::
£tsock›t
(
sock_
, 
Àvñ
, 
›äame
, 
›tvÆ
, 
›éí
);

127 
öt32_t
 
	gSockë
::
gëO±i⁄
(öt32_à
Àvñ
, i¡32_à
›äame
, * 
›tvÆ
, i¡32_t* 
›éí
)

129 
sockÀn_t
 
	gÀn
 = (sockÀn_t)((
›éí
) ? *optlen : 0);

130 
öt32_t
 
	gªtvÆ
;

131 
	gªtvÆ
 = 
gësock›t
(
sock_
, 
Àvñ
, 
›äame
, 
›tvÆ
, &
Àn
);

132 i‡(
	g›éí
)

133 *
	g›éí
 = 
Àn
;

135  
	gªtvÆ
;

138 
öt32_t
 
	gSockë
::
gëEºno
()

140  
î∫o
;

143 
öt32_t
 
	gSockë
::
£nd
(c⁄° * 
buf
, i¡32_à
size
, i¡32_à
mode
)

145  ::
£nd
(
sock_
, 
buf
, 
size
, 
mode
);

148 
öt32_t
 
	gSockë
::
ªcv
(* 
buf
, i¡32_à
size
, i¡32_à
mode
)

150  ::
ªcv
(
sock_
, 
buf
, 
size
, 
mode
);

153 
öt32_t
 
	gSockë
::
ªcvFrom
(* 
buf
, i¡32_à
size
, i¡32_à
mode
, 
sockaddr
 *
addr
)

155 
sockÀn_t
 
	gÀn
 = (
sockaddr
);

156  ::
ªcv‰om
(
sock_
, 
buf
, 
size
, 
mode
, 
addr
, &
Àn
);

159 
öt32_t
 
	gSockë
::
£ndTo
(c⁄° * 
buf
, i¡32_à
size
, i¡32_à
mode
, c⁄° 
sockaddr
* 
addr
)

161 
sockÀn_t
 
	gÀn
 = (
sockaddr
);

162  ::
£ndto
(
sock_
, 
buf
, 
size
, 
mode
, 
addr
, 
Àn
);

	@test/app_client.cpp

1 
	~"≠p_˛õ¡.h
"

2 
	~"Clõ¡.h
"

3 
	~"górkô.h
"

6 
	gAµ
::
	$Aµ
()

7 : 
	$˛õ¡_
(
NULL
)

9 
	}
}

11 
Aµ
::~
	$Aµ
()

13 i‡(
˛õ¡_
)

14 
˛õ¡_
->
	`ªÀa£
();

15 
	}
}

17 
	gAµ
::
	$run
()

19 
kô
::
Aµliˇti⁄
::
	`run
();

21 i‡(
˛õ¡_
)

23 
˛õ¡_
->
	`ªÀa£
();

24 
˛õ¡_
 = 
NULL
;

26 autÿ
˛õ¡
 = 
kô
::
Clõ¡
::
	`¸óã
();

27 autÿ
ªt
 = 
˛õ¡
->
	`°¨tup
("127.0.0.1", 3333);

28 i‡(
ªt
 != 0)

30 
	`ERR
("[App](run) client starupÉrror!");

34 
˛õ¡_
 = 
˛õ¡
;

35 
˛õ¡_
->
	`ªèö
();

37 
vÆid_
)

39 
	`maöLo›
();

41 
	}
}

44 
	gAµ
::
	$°›
()

46 
kô
::
Aµliˇti⁄
::
	`°›
();

47 
	}
}

49 
	gAµ
::
	$logic
()

51 
˛õ¡_
->
	`upd©e
();

52 
	}
}

54 
uöt32_t
 
	gAµ
::
	$•¨eLogic
(
uöt32_t
 
•¨e_time
)

56  
•¨e_time
;

57 
	}
}

	@test/app_client.h

1 #i‚de‡
__APP_H__


2 
	#__APP_H__


	)

4 
	~"Aµliˇti⁄.h
"

6 
«me•a˚
 
	gkô
{

7 
˛ass
 
	gClõ¡
;

10 ˛as†
	cAµ
 : 
public
 
kô
::
Aµliˇti⁄


12 
public
:

13 
Aµ
();

14 
	mvútuÆ
 ~
Aµ
();

16 
vútuÆ
 
run
();

17 
vútuÆ
 
°›
();

18 
vútuÆ
 
logic
();

19 
vútuÆ
 
uöt32_t
 
•¨eLogic
(uöt32_à
•¨e_time
);

21 
	m¥iv©e
:

22 
kô
::
Clõ¡
* 
˛õ¡_
;

	@test/app_server.cpp

1 
	~"≠p_£rvî.h
"

2 
	~"górkô.h
"

5 
	gAµ
::
	$Aµ
()

6 : 
	$£rvî_
(
NULL
)

8 
	}
}

10 
Aµ
::~
	$Aµ
()

12 i‡(
£rvî_
)

13 
£rvî_
->
	`ªÀa£
();

14 
	}
}

16 
	gAµ
::
	$run
()

18 
kô
::
Aµliˇti⁄
::
	`run
();

20 i‡(
£rvî_
)

22 
£rvî_
->
	`ªÀa£
();

23 
£rvî_
 = 
NULL
;

25 autÿ
£rvî
 = 
kô
::
Sîvî
::
	`¸óã
();

26 autÿ
ªt
 = 
£rvî
->
	`°¨tup
("127.0.0.1", 3333);

27 i‡(
ªt
 != 0)

29 
	`ERR
("[App](run) server starupÉrror!");

33 
£rvî_
 = 
£rvî
;

34 
£rvî_
->
	`ªèö
();

36 
vÆid_
)

38 
	`maöLo›
();

40 
	}
}

43 
	gAµ
::
	$°›
()

45 
kô
::
Aµliˇti⁄
::
	`°›
();

46 
	}
}

48 
	gAµ
::
	$logic
()

50 
£rvî_
->
	`upd©e
();

51 
	}
}

53 
uöt32_t
 
	gAµ
::
	$•¨eLogic
(
uöt32_t
 
•¨e_time
)

55  
•¨e_time
;

56 
	}
}

	@test/app_server.h

1 #i‚de‡
__APP_H__


2 
	#__APP_H__


	)

4 
	~"Aµliˇti⁄.h
"

5 
	~"Sîvî.h
"

7 ˛as†
	cAµ
 : 
public
 
kô
::
Aµliˇti⁄


9 
public
:

10 
Aµ
();

11 
	mvútuÆ
 ~
Aµ
();

13 
vútuÆ
 
run
();

14 
vútuÆ
 
°›
();

15 
vútuÆ
 
logic
();

16 
vútuÆ
 
uöt32_t
 
•¨eLogic
(uöt32_à
•¨e_time
);

18 
	m¥iv©e
:

19 
kô
::
Sîvî
* 
£rvî_
;

	@test/client/CMakeFiles/3.10.0-rc3/CompilerIdC/CMakeCCompilerId.c

1 #ifde‡
__˝lu•lus


5 #i‡
deföed
(
__18CXX
)

6 
	#ID_VOID_MAIN


	)

8 #i‡
deföed
(
__CLASSIC_C__
)

10 c⁄°

	)

11 vﬁ©ûe

	)

18 #i‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICC
)

19 
	#COMPILER_ID
 "I¡ñ"

	)

20 #i‡
deföed
(
_MSC_VER
)

21 
	#SIMULATE_ID
 "MSVC"

	)

24 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

25 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

26 #i‡
deföed
(
__INTEL_COMPILER_UPDATE
)

27 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER_UPDATE
)

	)

29 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

31 #i‡
deföed
(
__INTEL_COMPILER_BUILD_DATE
)

33 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

35 #i‡
deföed
(
_MSC_VER
)

37 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

38 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

41 #ñi‡
deföed
(
__PATHCC__
)

42 
	#COMPILER_ID
 "P©hSˇÀ"

	)

43 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

44 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

45 #i‡
deföed
(
__PATHCC_PATCHLEVEL__
)

46 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

49 #ñi‡
deföed
(
__BORLANDC__
Ë&& deföed(
__CODEGEARC_VERSION__
)

50 
	#COMPILER_ID
 "Emb¨ˇdîo"

	)

51 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

52 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

53 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

55 #ñi‡
deföed
(
__BORLANDC__
)

56 
	#COMPILER_ID
 "B‹œnd"

	)

58 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

59 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

61 #ñi‡
deföed
(
__WATCOMC__
) && __WATCOMC__ < 1200

62 
	#COMPILER_ID
 "W©com"

	)

64 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

65 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

66 #i‡(
__WATCOMC__
 % 10) > 0

67 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

70 #ñi‡
deföed
(
__WATCOMC__
)

71 
	#COMPILER_ID
 "O≥nW©com"

	)

73 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__WATCOMC__
 - 1100Ë/ 100)

	)

74 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

75 #i‡(
__WATCOMC__
 % 10) > 0

76 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

79 #ñi‡
deföed
(
__SUNPRO_C
)

80 
	#COMPILER_ID
 "SunPro"

	)

81 #i‡
__SUNPRO_C
 >= 0x5100

83 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_C
>>12)

	)

84 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_C
>>4 & 0xFF)

	)

85 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_C
 & 0xF)

	)

88 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_C
>>8)

	)

89 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_C
>>4 & 0xF)

	)

90 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_C
 & 0xF)

	)

93 #ñi‡
deföed
(
__HP_cc
)

94 
	#COMPILER_ID
 "HP"

	)

96 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_cc
/10000)

	)

97 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_cc
/100 % 100)

	)

98 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_cc
 % 100)

	)

100 #ñi‡
deföed
(
__DECC
)

101 
	#COMPILER_ID
 "Com∑q"

	)

103 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECC_VER
/10000000)

	)

104 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECC_VER
/100000 % 100)

	)

105 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECC_VER
 % 10000)

	)

107 #ñi‡
deföed
(
__IBMC__
Ë&& deföed(
__COMPILER_VER__
)

108 
	#COMPILER_ID
 "zOS"

	)

110 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

111 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

112 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

114 #ñi‡
deföed
(
__IBMC__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMC__ >= 800

115 
	#COMPILER_ID
 "XL"

	)

117 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

118 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

119 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

121 #ñi‡
deföed
(
__IBMC__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMC__ < 800

122 
	#COMPILER_ID
 "VisuÆAge"

	)

124 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

125 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

126 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

128 #ñi‡
deföed
(
__PGI
)

129 
	#COMPILER_ID
 "PGI"

	)

130 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

131 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

132 #i‡
deföed
(
__PGIC_PATCHLEVEL__
)

133 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

136 #ñi‡
deföed
(
_CRAYC
)

137 
	#COMPILER_ID
 "Cøy"

	)

138 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE_MAJOR
)

	)

139 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

141 #ñi‡
deföed
(
__TI_COMPILER_VERSION__
)

142 
	#COMPILER_ID
 "TI"

	)

144 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

145 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

146 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

148 #ñi‡
deföed
(
__FUJITSU
Ë|| deföed(
__FCC_VERSION
Ë|| deföed(
__fcc_vîsi⁄
)

149 
	#COMPILER_ID
 "Fujôsu"

	)

151 #ñi‡
deföed
(
__TINYC__
)

152 
	#COMPILER_ID
 "TöyCC"

	)

154 #ñi‡
deföed
(
__BCC__
)

155 
	#COMPILER_ID
 "Bru˚"

	)

157 #ñi‡
deföed
(
__SCO_VERSION__
)

158 
	#COMPILER_ID
 "SCO"

	)

160 #ñi‡
deföed
(
__˛™g__
Ë&& deföed(
__≠∂e_buûd_vîsi⁄__
)

161 
	#COMPILER_ID
 "AµÀCœng"

	)

162 #i‡
deföed
(
_MSC_VER
)

163 
	#SIMULATE_ID
 "MSVC"

	)

165 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

166 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

167 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

168 #i‡
deföed
(
_MSC_VER
)

170 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

171 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

173 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__≠∂e_buûd_vîsi⁄__
)

	)

175 #ñi‡
deföed
(
__˛™g__
)

176 
	#COMPILER_ID
 "Cœng"

	)

177 #i‡
deföed
(
_MSC_VER
)

178 
	#SIMULATE_ID
 "MSVC"

	)

180 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

181 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

182 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

183 #i‡
deföed
(
_MSC_VER
)

185 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

186 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

189 #ñi‡
deföed
(
__GNUC__
)

190 
	#COMPILER_ID
 "GNU"

	)

191 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

192 #i‡
deföed
(
__GNUC_MINOR__
)

193 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

195 #i‡
deföed
(
__GNUC_PATCHLEVEL__
)

196 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

199 #ñi‡
deföed
(
_MSC_VER
)

200 
	#COMPILER_ID
 "MSVC"

	)

202 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

203 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

204 #i‡
deföed
(
_MSC_FULL_VER
)

205 #i‡
_MSC_VER
 >= 1400

207 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

210 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

213 #i‡
deföed
(
_MSC_BUILD
)

214 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

217 #ñi‡
deföed
(
__VISUALDSPVERSION__
Ë|| deföed(
__ADSPBLACKFIN__
Ë|| deföed(
__ADSPTS__
Ë|| deföed(
__ADSP21000__
)

218 
	#COMPILER_ID
 "ADSP"

	)

219 #i‡
deföed
(
__VISUALDSPVERSION__
)

221 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__VISUALDSPVERSION__
>>24)

	)

222 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__VISUALDSPVERSION__
>>16 & 0xFF)

	)

223 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__VISUALDSPVERSION__
>>8 & 0xFF)

	)

226 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

227 
	#COMPILER_ID
 "IAR"

	)

228 #i‡
deföed
(
__VER__
)

229 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__VER__
Ë/ 1000000)

	)

230 
	#COMPILER_VERSION_MINOR
 
	`DEC
(((
__VER__
Ë/ 1000Ë% 1000)

	)

231 
	#COMPILER_VERSION_PATCH
 
	`DEC
((
__VER__
Ë% 1000)

	)

232 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__IAR_SYSTEMS_ICC__
)

	)

235 #ñi‡
deföed
(
__ARMCC_VERSION
)

236 
	#COMPILER_ID
 "ARMCC"

	)

237 #i‡
__ARMCC_VERSION
 >= 1000000

239 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/1000000)

	)

240 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 100)

	)

241 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

244 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/100000)

	)

245 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 10)

	)

246 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

250 #ñi‡
deföed
(
__SDCC_VERSION_MAJOR
Ë|| deföed(
SDCC
)

251 
	#COMPILER_ID
 "SDCC"

	)

252 #i‡
deföed
(
__SDCC_VERSION_MAJOR
)

253 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__SDCC_VERSION_MAJOR
)

	)

254 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__SDCC_VERSION_MINOR
)

	)

255 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__SDCC_VERSION_PATCH
)

	)

258 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
SDCC
/100)

	)

259 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
SDCC
/10 % 10)

	)

260 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
SDCC
 % 10)

	)

263 #ñi‡
deföed
(
_SGI_COMPILER_VERSION
Ë|| deföed(
_COMPILER_VERSION
)

264 
	#COMPILER_ID
 "MIPS¥o"

	)

265 #i‡
deföed
(
_SGI_COMPILER_VERSION
)

267 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/100)

	)

268 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/10 % 10)

	)

269 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_SGI_COMPILER_VERSION
 % 10)

	)

272 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_COMPILER_VERSION
/100)

	)

273 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_COMPILER_VERSION
/10 % 10)

	)

274 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_COMPILER_VERSION
 % 10)

	)

281 #ñi‡
deföed
(
__sgi
)

282 
	#COMPILER_ID
 "MIPS¥o"

	)

284 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpua
)

285 
	#COMPILER_ID
 "HP"

	)

288 
	#COMPILER_ID
 ""

	)

295 c⁄°* 
	göfo_compûî
 = "INFO" ":" "compûî[" 
COMPILER_ID
 "]";

296 #ifde‡
SIMULATE_ID


297 c⁄°* 
	göfo_simuœã
 = "INFO" ":" "simuœã[" 
SIMULATE_ID
 "]";

300 #ifde‡
__QNXNTO__


301 c⁄°* 
	gqnx¡o
 = "INFO" ":" "qnxnto[]";

304 #i‡
deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

305 c⁄° *
	göfo_¸ay
 = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";

308 
	#STRINGIFY_HELPER
(
X
Ë#X

	)

309 
	#STRINGIFY
(
X
Ë
	`STRINGIFY_HELPER
(X)

	)

312 #i‡
deföed
(
__löux
Ë|| deföed(
__löux__
Ë|| deföed(
löux
)

313 
	#PLATFORM_ID
 "Löux"

	)

315 #ñi‡
deföed
(
__CYGWIN__
)

316 
	#PLATFORM_ID
 "Cygwö"

	)

318 #ñi‡
deföed
(
__MINGW32__
)

319 
	#PLATFORM_ID
 "MöGW"

	)

321 #ñi‡
deföed
(
__APPLE__
)

322 
	#PLATFORM_ID
 "D¨wö"

	)

324 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

325 
	#PLATFORM_ID
 "Wödows"

	)

327 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD
)

328 
	#PLATFORM_ID
 "FªeBSD"

	)

330 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__NëBSD
)

331 
	#PLATFORM_ID
 "NëBSD"

	)

333 #ñi‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__OPENBSD
)

334 
	#PLATFORM_ID
 "O≥nBSD"

	)

336 #ñi‡
deföed
(
__sun
Ë|| deföed(
sun
)

337 
	#PLATFORM_ID
 "SunOS"

	)

339 #ñi‡
deföed
(
_AIX
Ë|| deföed(
__AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix
Ë|| deföed(
__aix__
)

340 
	#PLATFORM_ID
 "AIX"

	)

342 #ñi‡
deföed
(
__sgi
Ë|| deföed(
__sgi__
Ë|| deföed(
_SGI
)

343 
	#PLATFORM_ID
 "IRIX"

	)

345 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpux__
)

346 
	#PLATFORM_ID
 "HP-UX"

	)

348 #ñi‡
deföed
(
__HAIKU__
)

349 
	#PLATFORM_ID
 "Haiku"

	)

351 #ñi‡
deföed
(
__BeOS
Ë|| deföed(
__BEOS__
Ë|| deföed(
_BEOS
)

352 
	#PLATFORM_ID
 "BeOS"

	)

354 #ñi‡
deföed
(
__QNX__
Ë|| deföed(
__QNXNTO__
)

355 
	#PLATFORM_ID
 "QNX"

	)

357 #ñi‡
deföed
(
__åu64
Ë|| deföed(
_åu64
Ë|| deföed(
__TRU64__
)

358 
	#PLATFORM_ID
 "Tru64"

	)

360 #ñi‡
deföed
(
__riscos
Ë|| deföed(
__riscos__
)

361 
	#PLATFORM_ID
 "RISCos"

	)

363 #ñi‡
deföed
(
__söix
Ë|| deföed(
__söix__
Ë|| deföed(
__SINIX__
)

364 
	#PLATFORM_ID
 "SINIX"

	)

366 #ñi‡
deföed
(
__UNIX_SV__
)

367 
	#PLATFORM_ID
 "UNIX_SV"

	)

369 #ñi‡
deföed
(
__bsdos__
)

370 
	#PLATFORM_ID
 "BSDOS"

	)

372 #ñi‡
deföed
(
_MPRAS
Ë|| deföed(
MPRAS
)

373 
	#PLATFORM_ID
 "MP-RAS"

	)

375 #ñi‡
deföed
(
__osf
Ë|| deföed(
__osf__
)

376 
	#PLATFORM_ID
 "OSF1"

	)

378 #ñi‡
deföed
(
_SCO_SV
Ë|| deföed(
SCO_SV
Ë|| deföed(
sco_sv
)

379 
	#PLATFORM_ID
 "SCO_SV"

	)

381 #ñi‡
deföed
(
__u…rix
Ë|| deföed(
__u…rix__
Ë|| deföed(
_ULTRIX
)

382 
	#PLATFORM_ID
 "ULTRIX"

	)

384 #ñi‡
deföed
(
__XENIX__
Ë|| deföed(
_XENIX
Ë|| deföed(
XENIX
)

385 
	#PLATFORM_ID
 "Xíix"

	)

387 #ñi‡
deföed
(
__WATCOMC__
)

388 #i‡
deföed
(
__LINUX__
)

389 
	#PLATFORM_ID
 "Löux"

	)

391 #ñi‡
deföed
(
__DOS__
)

392 
	#PLATFORM_ID
 "DOS"

	)

394 #ñi‡
deföed
(
__OS2__
)

395 
	#PLATFORM_ID
 "OS2"

	)

397 #ñi‡
deföed
(
__WINDOWS__
)

398 
	#PLATFORM_ID
 "Wödows3x"

	)

401 
	#PLATFORM_ID


	)

405 
	#PLATFORM_ID


	)

414 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

415 #i‡
deföed
(
_M_IA64
)

416 
	#ARCHITECTURE_ID
 "IA64"

	)

418 #ñi‡
deföed
(
_M_X64
Ë|| deföed(
_M_AMD64
)

419 
	#ARCHITECTURE_ID
 "x64"

	)

421 #ñi‡
deföed
(
_M_IX86
)

422 
	#ARCHITECTURE_ID
 "X86"

	)

424 #ñi‡
deföed
(
_M_ARM64
)

425 
	#ARCHITECTURE_ID
 "ARM64"

	)

427 #ñi‡
deföed
(
_M_ARM
)

428 #i‡
_M_ARM
 == 4

429 
	#ARCHITECTURE_ID
 "ARMV4I"

	)

430 #ñi‡
_M_ARM
 == 5

431 
	#ARCHITECTURE_ID
 "ARMV5I"

	)

433 
	#ARCHITECTURE_ID
 "ARMV" 
	`STRINGIFY
(
_M_ARM
)

	)

436 #ñi‡
deföed
(
_M_MIPS
)

437 
	#ARCHITECTURE_ID
 "MIPS"

	)

439 #ñi‡
deföed
(
_M_SH
)

440 
	#ARCHITECTURE_ID
 "SHx"

	)

443 
	#ARCHITECTURE_ID
 ""

	)

446 #ñi‡
deföed
(
__WATCOMC__
)

447 #i‡
deföed
(
_M_I86
)

448 
	#ARCHITECTURE_ID
 "I86"

	)

450 #ñi‡
deföed
(
_M_IX86
)

451 
	#ARCHITECTURE_ID
 "X86"

	)

454 
	#ARCHITECTURE_ID
 ""

	)

457 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

458 #i‡
deföed
(
__ICCARM__
)

459 
	#ARCHITECTURE_ID
 "ARM"

	)

461 #ñi‡
deföed
(
__ICCAVR__
)

462 
	#ARCHITECTURE_ID
 "AVR"

	)

465 
	#ARCHITECTURE_ID
 ""

	)

468 
	#ARCHITECTURE_ID


	)

472 
	#DEC
(
n
) \

473 ('0' + (((
n
) / 10000000)%10)), \

474 ('0' + (((
n
) / 1000000)%10)), \

475 ('0' + (((
n
) / 100000)%10)), \

476 ('0' + (((
n
) / 10000)%10)), \

477 ('0' + (((
n
) / 1000)%10)), \

478 ('0' + (((
n
) / 100)%10)), \

479 ('0' + (((
n
) / 10)%10)), \

480 ('0' + ((
n
Ë% 10))

	)

483 
	#HEX
(
n
) \

484 ('0' + ((
n
)>>28 & 0xF)), \

485 ('0' + ((
n
)>>24 & 0xF)), \

486 ('0' + ((
n
)>>20 & 0xF)), \

487 ('0' + ((
n
)>>16 & 0xF)), \

488 ('0' + ((
n
)>>12 & 0xF)), \

489 ('0' + ((
n
)>>8 & 0xF)), \

490 ('0' + ((
n
)>>4 & 0xF)), \

491 ('0' + ((
n
Ë& 0xF))

	)

494 #ifde‡
COMPILER_VERSION_MAJOR


495 c⁄° 
	göfo_vîsi⁄
[] = {

498 
COMPILER_VERSION_MAJOR
,

499 #ifde‡
COMPILER_VERSION_MINOR


500 '.', 
COMPILER_VERSION_MINOR
,

501 #ifde‡
COMPILER_VERSION_PATCH


502 '.', 
COMPILER_VERSION_PATCH
,

503 #ifde‡
COMPILER_VERSION_TWEAK


504 '.', 
COMPILER_VERSION_TWEAK
,

512 #ifde‡
COMPILER_VERSION_INTERNAL


513 c⁄° 
	göfo_vîsi⁄_öã∫Æ
[] = {

517 
COMPILER_VERSION_INTERNAL
,']','\0'};

521 #ifde‡
SIMULATE_VERSION_MAJOR


522 c⁄° 
	göfo_simuœã_vîsi⁄
[] = {

525 
SIMULATE_VERSION_MAJOR
,

526 #ifde‡
SIMULATE_VERSION_MINOR


527 '.', 
SIMULATE_VERSION_MINOR
,

528 #ifde‡
SIMULATE_VERSION_PATCH


529 '.', 
SIMULATE_VERSION_PATCH
,

530 #ifde‡
SIMULATE_VERSION_TWEAK


531 '.', 
SIMULATE_VERSION_TWEAK
,

542 c⁄°* 
	göfo_∂©f‹m
 = "INFO" ":" "∂©f‹m[" 
PLATFORM_ID
 "]";

543 c⁄°* 
	göfo_¨ch
 = "INFO" ":" "¨ch[" 
ARCHITECTURE_ID
 "]";

548 #i‡!
deföed
(
__STDC__
)

549 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
__˛™g__
)

550 
	#C_DIALECT
 "90"

	)

552 
	#C_DIALECT


	)

554 #ñi‡
__STDC_VERSION__
 >= 201000L

555 
	#C_DIALECT
 "11"

	)

556 #ñi‡
__STDC_VERSION__
 >= 199901L

557 
	#C_DIALECT
 "99"

	)

559 
	#C_DIALECT
 "90"

	)

561 c⁄° * 
	göfo_œnguage_düÀ˘_deÁu…
 =

562 "INFO" ":" "düÀ˘_deÁu…[" 
C_DIALECT
 "]";

566 #ifde‡
ID_VOID_MAIN


567 
	$maö
(Ë{
	}
}

569 #i‡
deföed
(
__CLASSIC_C__
)

570 
	$maö
(
¨gc
, 
¨gv
) argc; *argv[];

572 
	$maö
(
¨gc
, * 
¨gv
[])

575 
ªquúe
 = 0;

576 
ªquúe
 +
öfo_compûî
[
¨gc
];

577 
ªquúe
 +
öfo_∂©f‹m
[
¨gc
];

578 
ªquúe
 +
öfo_¨ch
[
¨gc
];

579 #ifde‡
COMPILER_VERSION_MAJOR


580 
ªquúe
 +
öfo_vîsi⁄
[
¨gc
];

582 #ifde‡
COMPILER_VERSION_INTERNAL


583 
ªquúe
 +
öfo_vîsi⁄_öã∫Æ
[
¨gc
];

585 #ifde‡
SIMULATE_ID


586 
ªquúe
 +
öfo_simuœã
[
¨gc
];

588 #ifde‡
SIMULATE_VERSION_MAJOR


589 
ªquúe
 +
öfo_simuœã_vîsi⁄
[
¨gc
];

591 #i‡
	`deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

592 
ªquúe
 +
öfo_¸ay
[
¨gc
];

594 
ªquúe
 +
öfo_œnguage_düÀ˘_deÁu…
[
¨gc
];

595 ()
¨gv
;

596  
ªquúe
;

597 
	}
}

	@test/client/CMakeFiles/3.10.0-rc3/CompilerIdCXX/CMakeCXXCompilerId.cpp

4 #i‚de‡
__˝lu•lus


12 #i‡
deföed
(
__COMO__
)

13 
	#COMPILER_ID
 "Comóu"

	)

15 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__COMO_VERSION__
 / 100)

	)

16 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__COMO_VERSION__
 % 100)

	)

18 #ñi‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICC
)

19 
	#COMPILER_ID
 "I¡ñ"

	)

20 #i‡
deföed
(
_MSC_VER
)

21 
	#SIMULATE_ID
 "MSVC"

	)

24 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

25 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

26 #i‡
deföed
(
__INTEL_COMPILER_UPDATE
)

27 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER_UPDATE
)

	)

29 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

31 #i‡
deföed
(
__INTEL_COMPILER_BUILD_DATE
)

33 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

35 #i‡
deföed
(
_MSC_VER
)

37 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

38 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

41 #ñi‡
deföed
(
__PATHCC__
)

42 
	#COMPILER_ID
 "P©hSˇÀ"

	)

43 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

44 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

45 #i‡
deföed
(
__PATHCC_PATCHLEVEL__
)

46 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

49 #ñi‡
deföed
(
__BORLANDC__
Ë&& deföed(
__CODEGEARC_VERSION__
)

50 
	#COMPILER_ID
 "Emb¨ˇdîo"

	)

51 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

52 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

53 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

55 #ñi‡
deföed
(
__BORLANDC__
)

56 
	#COMPILER_ID
 "B‹œnd"

	)

58 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

59 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

61 #ñi‡
deföed
(
__WATCOMC__
) && __WATCOMC__ < 1200

62 
	#COMPILER_ID
 "W©com"

	)

64 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

65 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

66 #i‡(
__WATCOMC__
 % 10) > 0

67 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

70 #ñi‡
deföed
(
__WATCOMC__
)

71 
	#COMPILER_ID
 "O≥nW©com"

	)

73 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__WATCOMC__
 - 1100Ë/ 100)

	)

74 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

75 #i‡(
__WATCOMC__
 % 10) > 0

76 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

79 #ñi‡
deföed
(
__SUNPRO_CC
)

80 
	#COMPILER_ID
 "SunPro"

	)

81 #i‡
__SUNPRO_CC
 >= 0x5100

83 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>12)

	)

84 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xFF)

	)

85 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

88 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>8)

	)

89 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xF)

	)

90 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

93 #ñi‡
deföed
(
__HP_aCC
)

94 
	#COMPILER_ID
 "HP"

	)

96 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_aCC
/10000)

	)

97 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_aCC
/100 % 100)

	)

98 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_aCC
 % 100)

	)

100 #ñi‡
deföed
(
__DECCXX
)

101 
	#COMPILER_ID
 "Com∑q"

	)

103 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECCXX_VER
/10000000)

	)

104 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECCXX_VER
/100000 % 100)

	)

105 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECCXX_VER
 % 10000)

	)

107 #ñi‡
deföed
(
__IBMCPP__
Ë&& deföed(
__COMPILER_VER__
)

108 
	#COMPILER_ID
 "zOS"

	)

110 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

111 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

112 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

114 #ñi‡
deföed
(
__IBMCPP__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMCPP__ >= 800

115 
	#COMPILER_ID
 "XL"

	)

117 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

118 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

119 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

121 #ñi‡
deföed
(
__IBMCPP__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMCPP__ < 800

122 
	#COMPILER_ID
 "VisuÆAge"

	)

124 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

125 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

126 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

128 #ñi‡
deföed
(
__PGI
)

129 
	#COMPILER_ID
 "PGI"

	)

130 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

131 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

132 #i‡
deföed
(
__PGIC_PATCHLEVEL__
)

133 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

136 #ñi‡
deföed
(
_CRAYC
)

137 
	#COMPILER_ID
 "Cøy"

	)

138 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE_MAJOR
)

	)

139 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

141 #ñi‡
deföed
(
__TI_COMPILER_VERSION__
)

142 
	#COMPILER_ID
 "TI"

	)

144 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

145 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

146 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

148 #ñi‡
deföed
(
__FUJITSU
Ë|| deföed(
__FCC_VERSION
Ë|| deföed(
__fcc_vîsi⁄
)

149 
	#COMPILER_ID
 "Fujôsu"

	)

151 #ñi‡
deföed
(
__SCO_VERSION__
)

152 
	#COMPILER_ID
 "SCO"

	)

154 #ñi‡
deföed
(
__˛™g__
Ë&& deföed(
__≠∂e_buûd_vîsi⁄__
)

155 
	#COMPILER_ID
 "AµÀCœng"

	)

156 #i‡
deföed
(
_MSC_VER
)

157 
	#SIMULATE_ID
 "MSVC"

	)

159 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

160 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

161 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

162 #i‡
deföed
(
_MSC_VER
)

164 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

165 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

167 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__≠∂e_buûd_vîsi⁄__
)

	)

169 #ñi‡
deföed
(
__˛™g__
)

170 
	#COMPILER_ID
 "Cœng"

	)

171 #i‡
deföed
(
_MSC_VER
)

172 
	#SIMULATE_ID
 "MSVC"

	)

174 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

175 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

176 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

177 #i‡
deföed
(
_MSC_VER
)

179 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

180 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

183 #ñi‡
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
)

184 
	#COMPILER_ID
 "GNU"

	)

185 #i‡
deföed
(
__GNUC__
)

186 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

188 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUG__
)

	)

190 #i‡
deföed
(
__GNUC_MINOR__
)

191 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

193 #i‡
deföed
(
__GNUC_PATCHLEVEL__
)

194 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

197 #ñi‡
deföed
(
_MSC_VER
)

198 
	#COMPILER_ID
 "MSVC"

	)

200 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

201 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

202 #i‡
deföed
(
_MSC_FULL_VER
)

203 #i‡
_MSC_VER
 >= 1400

205 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

208 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

211 #i‡
deföed
(
_MSC_BUILD
)

212 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

215 #ñi‡
deföed
(
__VISUALDSPVERSION__
Ë|| deföed(
__ADSPBLACKFIN__
Ë|| deföed(
__ADSPTS__
Ë|| deföed(
__ADSP21000__
)

216 
	#COMPILER_ID
 "ADSP"

	)

217 #i‡
deföed
(
__VISUALDSPVERSION__
)

219 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__VISUALDSPVERSION__
>>24)

	)

220 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__VISUALDSPVERSION__
>>16 & 0xFF)

	)

221 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__VISUALDSPVERSION__
>>8 & 0xFF)

	)

224 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

225 
	#COMPILER_ID
 "IAR"

	)

226 #i‡
deföed
(
__VER__
)

227 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__VER__
Ë/ 1000000)

	)

228 
	#COMPILER_VERSION_MINOR
 
	`DEC
(((
__VER__
Ë/ 1000Ë% 1000)

	)

229 
	#COMPILER_VERSION_PATCH
 
	`DEC
((
__VER__
Ë% 1000)

	)

230 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__IAR_SYSTEMS_ICC__
)

	)

233 #ñi‡
deföed
(
__ARMCC_VERSION
)

234 
	#COMPILER_ID
 "ARMCC"

	)

235 #i‡
__ARMCC_VERSION
 >= 1000000

237 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/1000000)

	)

238 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 100)

	)

239 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

242 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/100000)

	)

243 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 10)

	)

244 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

248 #ñi‡
deföed
(
_SGI_COMPILER_VERSION
Ë|| deföed(
_COMPILER_VERSION
)

249 
	#COMPILER_ID
 "MIPS¥o"

	)

250 #i‡
deföed
(
_SGI_COMPILER_VERSION
)

252 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/100)

	)

253 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/10 % 10)

	)

254 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_SGI_COMPILER_VERSION
 % 10)

	)

257 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_COMPILER_VERSION
/100)

	)

258 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_COMPILER_VERSION
/10 % 10)

	)

259 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_COMPILER_VERSION
 % 10)

	)

266 #ñi‡
deföed
(
__sgi
)

267 
	#COMPILER_ID
 "MIPS¥o"

	)

269 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpua
)

270 
	#COMPILER_ID
 "HP"

	)

273 
	#COMPILER_ID
 ""

	)

280 c⁄°* 
	göfo_compûî
 = "INFO" ":" "compûî[" 
COMPILER_ID
 "]";

281 #ifde‡
SIMULATE_ID


282 c⁄°* 
	göfo_simuœã
 = "INFO" ":" "simuœã[" 
SIMULATE_ID
 "]";

285 #ifde‡
__QNXNTO__


286 c⁄°* 
	gqnx¡o
 = "INFO" ":" "qnxnto[]";

289 #i‡
deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

290 c⁄° *
	göfo_¸ay
 = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";

293 
	#STRINGIFY_HELPER
(
X
Ë#X

	)

294 
	#STRINGIFY
(
X
Ë
	`STRINGIFY_HELPER
(X)

	)

297 #i‡
deföed
(
__löux
Ë|| deföed(
__löux__
Ë|| deföed(
löux
)

298 
	#PLATFORM_ID
 "Löux"

	)

300 #ñi‡
deföed
(
__CYGWIN__
)

301 
	#PLATFORM_ID
 "Cygwö"

	)

303 #ñi‡
deföed
(
__MINGW32__
)

304 
	#PLATFORM_ID
 "MöGW"

	)

306 #ñi‡
deföed
(
__APPLE__
)

307 
	#PLATFORM_ID
 "D¨wö"

	)

309 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

310 
	#PLATFORM_ID
 "Wödows"

	)

312 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD
)

313 
	#PLATFORM_ID
 "FªeBSD"

	)

315 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__NëBSD
)

316 
	#PLATFORM_ID
 "NëBSD"

	)

318 #ñi‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__OPENBSD
)

319 
	#PLATFORM_ID
 "O≥nBSD"

	)

321 #ñi‡
deföed
(
__sun
Ë|| deföed(
sun
)

322 
	#PLATFORM_ID
 "SunOS"

	)

324 #ñi‡
deföed
(
_AIX
Ë|| deföed(
__AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix
Ë|| deföed(
__aix__
)

325 
	#PLATFORM_ID
 "AIX"

	)

327 #ñi‡
deföed
(
__sgi
Ë|| deföed(
__sgi__
Ë|| deföed(
_SGI
)

328 
	#PLATFORM_ID
 "IRIX"

	)

330 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpux__
)

331 
	#PLATFORM_ID
 "HP-UX"

	)

333 #ñi‡
deföed
(
__HAIKU__
)

334 
	#PLATFORM_ID
 "Haiku"

	)

336 #ñi‡
deföed
(
__BeOS
Ë|| deföed(
__BEOS__
Ë|| deföed(
_BEOS
)

337 
	#PLATFORM_ID
 "BeOS"

	)

339 #ñi‡
deföed
(
__QNX__
Ë|| deföed(
__QNXNTO__
)

340 
	#PLATFORM_ID
 "QNX"

	)

342 #ñi‡
deföed
(
__åu64
Ë|| deföed(
_åu64
Ë|| deföed(
__TRU64__
)

343 
	#PLATFORM_ID
 "Tru64"

	)

345 #ñi‡
deföed
(
__riscos
Ë|| deföed(
__riscos__
)

346 
	#PLATFORM_ID
 "RISCos"

	)

348 #ñi‡
deföed
(
__söix
Ë|| deföed(
__söix__
Ë|| deföed(
__SINIX__
)

349 
	#PLATFORM_ID
 "SINIX"

	)

351 #ñi‡
deföed
(
__UNIX_SV__
)

352 
	#PLATFORM_ID
 "UNIX_SV"

	)

354 #ñi‡
deföed
(
__bsdos__
)

355 
	#PLATFORM_ID
 "BSDOS"

	)

357 #ñi‡
deföed
(
_MPRAS
Ë|| deföed(
MPRAS
)

358 
	#PLATFORM_ID
 "MP-RAS"

	)

360 #ñi‡
deföed
(
__osf
Ë|| deföed(
__osf__
)

361 
	#PLATFORM_ID
 "OSF1"

	)

363 #ñi‡
deföed
(
_SCO_SV
Ë|| deföed(
SCO_SV
Ë|| deföed(
sco_sv
)

364 
	#PLATFORM_ID
 "SCO_SV"

	)

366 #ñi‡
deföed
(
__u…rix
Ë|| deföed(
__u…rix__
Ë|| deföed(
_ULTRIX
)

367 
	#PLATFORM_ID
 "ULTRIX"

	)

369 #ñi‡
deföed
(
__XENIX__
Ë|| deföed(
_XENIX
Ë|| deföed(
XENIX
)

370 
	#PLATFORM_ID
 "Xíix"

	)

372 #ñi‡
deföed
(
__WATCOMC__
)

373 #i‡
deföed
(
__LINUX__
)

374 
	#PLATFORM_ID
 "Löux"

	)

376 #ñi‡
deföed
(
__DOS__
)

377 
	#PLATFORM_ID
 "DOS"

	)

379 #ñi‡
deföed
(
__OS2__
)

380 
	#PLATFORM_ID
 "OS2"

	)

382 #ñi‡
deföed
(
__WINDOWS__
)

383 
	#PLATFORM_ID
 "Wödows3x"

	)

386 
	#PLATFORM_ID


	)

390 
	#PLATFORM_ID


	)

399 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

400 #i‡
deföed
(
_M_IA64
)

401 
	#ARCHITECTURE_ID
 "IA64"

	)

403 #ñi‡
deföed
(
_M_X64
Ë|| deföed(
_M_AMD64
)

404 
	#ARCHITECTURE_ID
 "x64"

	)

406 #ñi‡
deföed
(
_M_IX86
)

407 
	#ARCHITECTURE_ID
 "X86"

	)

409 #ñi‡
deföed
(
_M_ARM64
)

410 
	#ARCHITECTURE_ID
 "ARM64"

	)

412 #ñi‡
deföed
(
_M_ARM
)

413 #i‡
_M_ARM
 == 4

414 
	#ARCHITECTURE_ID
 "ARMV4I"

	)

415 #ñi‡
_M_ARM
 == 5

416 
	#ARCHITECTURE_ID
 "ARMV5I"

	)

418 
	#ARCHITECTURE_ID
 "ARMV" 
	`STRINGIFY
(
_M_ARM
)

	)

421 #ñi‡
deföed
(
_M_MIPS
)

422 
	#ARCHITECTURE_ID
 "MIPS"

	)

424 #ñi‡
deföed
(
_M_SH
)

425 
	#ARCHITECTURE_ID
 "SHx"

	)

428 
	#ARCHITECTURE_ID
 ""

	)

431 #ñi‡
deföed
(
__WATCOMC__
)

432 #i‡
deföed
(
_M_I86
)

433 
	#ARCHITECTURE_ID
 "I86"

	)

435 #ñi‡
deföed
(
_M_IX86
)

436 
	#ARCHITECTURE_ID
 "X86"

	)

439 
	#ARCHITECTURE_ID
 ""

	)

442 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

443 #i‡
deföed
(
__ICCARM__
)

444 
	#ARCHITECTURE_ID
 "ARM"

	)

446 #ñi‡
deföed
(
__ICCAVR__
)

447 
	#ARCHITECTURE_ID
 "AVR"

	)

450 
	#ARCHITECTURE_ID
 ""

	)

453 
	#ARCHITECTURE_ID


	)

457 
	#DEC
(
n
) \

458 ('0' + (((
n
) / 10000000)%10)), \

459 ('0' + (((
n
) / 1000000)%10)), \

460 ('0' + (((
n
) / 100000)%10)), \

461 ('0' + (((
n
) / 10000)%10)), \

462 ('0' + (((
n
) / 1000)%10)), \

463 ('0' + (((
n
) / 100)%10)), \

464 ('0' + (((
n
) / 10)%10)), \

465 ('0' + ((
n
Ë% 10))

	)

468 
	#HEX
(
n
) \

469 ('0' + ((
n
)>>28 & 0xF)), \

470 ('0' + ((
n
)>>24 & 0xF)), \

471 ('0' + ((
n
)>>20 & 0xF)), \

472 ('0' + ((
n
)>>16 & 0xF)), \

473 ('0' + ((
n
)>>12 & 0xF)), \

474 ('0' + ((
n
)>>8 & 0xF)), \

475 ('0' + ((
n
)>>4 & 0xF)), \

476 ('0' + ((
n
Ë& 0xF))

	)

479 #ifde‡
COMPILER_VERSION_MAJOR


480 c⁄° 
	göfo_vîsi⁄
[] = {

483 
COMPILER_VERSION_MAJOR
,

484 #ifde‡
COMPILER_VERSION_MINOR


485 '.', 
COMPILER_VERSION_MINOR
,

486 #ifde‡
COMPILER_VERSION_PATCH


487 '.', 
COMPILER_VERSION_PATCH
,

488 #ifde‡
COMPILER_VERSION_TWEAK


489 '.', 
COMPILER_VERSION_TWEAK
,

497 #ifde‡
COMPILER_VERSION_INTERNAL


498 c⁄° 
	göfo_vîsi⁄_öã∫Æ
[] = {

502 
COMPILER_VERSION_INTERNAL
,']','\0'};

506 #ifde‡
SIMULATE_VERSION_MAJOR


507 c⁄° 
	göfo_simuœã_vîsi⁄
[] = {

510 
SIMULATE_VERSION_MAJOR
,

511 #ifde‡
SIMULATE_VERSION_MINOR


512 '.', 
SIMULATE_VERSION_MINOR
,

513 #ifde‡
SIMULATE_VERSION_PATCH


514 '.', 
SIMULATE_VERSION_PATCH
,

515 #ifde‡
SIMULATE_VERSION_TWEAK


516 '.', 
SIMULATE_VERSION_TWEAK
,

527 c⁄°* 
	göfo_∂©f‹m
 = "INFO" ":" "∂©f‹m[" 
PLATFORM_ID
 "]";

528 c⁄°* 
	göfo_¨ch
 = "INFO" ":" "¨ch[" 
ARCHITECTURE_ID
 "]";

533 #i‡
deföed
(
_MSC_VER
Ë&& deföed(
_MSVC_LANG
)

534 
	#CXX_STD
 
_MSVC_LANG


	)

536 
	#CXX_STD
 
__˝lu•lus


	)

539 c⁄° * 
	göfo_œnguage_düÀ˘_deÁu…
 = "INFO" ":" "dialect_default["

540 #i‡
CXX_STD
 > 201402L

542 #ñi‡
CXX_STD
 >= 201402L

544 #ñi‡
CXX_STD
 >= 201103L

553 
	$maö
(
¨gc
, * 
¨gv
[])

555 
ªquúe
 = 0;

556 
ªquúe
 +
öfo_compûî
[
¨gc
];

557 
ªquúe
 +
öfo_∂©f‹m
[
¨gc
];

558 #ifde‡
COMPILER_VERSION_MAJOR


559 
ªquúe
 +
öfo_vîsi⁄
[
¨gc
];

561 #ifde‡
COMPILER_VERSION_INTERNAL


562 
ªquúe
 +
öfo_vîsi⁄_öã∫Æ
[
¨gc
];

564 #ifde‡
SIMULATE_ID


565 
ªquúe
 +
öfo_simuœã
[
¨gc
];

567 #ifde‡
SIMULATE_VERSION_MAJOR


568 
ªquúe
 +
öfo_simuœã_vîsi⁄
[
¨gc
];

570 #i‡
	`deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

571 
ªquúe
 +
öfo_¸ay
[
¨gc
];

573 
ªquúe
 +
öfo_œnguage_düÀ˘_deÁu…
[
¨gc
];

574 ()
¨gv
;

575  
ªquúe
;

576 
	}
}

	@test/client/CMakeFiles/feature_tests.c

2 c⁄° 
	g„©uªs
[] = {"\n"

4 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
) >= 304

11 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
Ë>304 && 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

18 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
Ë>406 && 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 201000L

25 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
Ë>304 && 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

34 
	$maö
(
¨gc
, ** 
¨gv
Ë{ (Ôrgv;  
„©uªs
[¨gc]; 
	}
}

	@test/main_client.cpp

1 
	~"≠p_˛õ¡.h
"

2 
	~"Li°.h
"

3 
	~"Aºay.h
"

4 
	~"°dio.h
"

6 
	sAA


8 
	ma
;

9 
	mb
;

12 
	$ã°_li°
()

14 
kô
::
Li°
<
AA
> 
li°
;

15 
i
 = 1; i != 10; ++i)

17 
AA
 
ôem
;

18 
ôem
.
a
 = 
i
;

19 
ôem
.
b
 = 
i
;

20 
boﬁ
 
ªt
 = 
li°
.
	`push
(
ôem
);

21 
	`¥ötf
("%d\n", 
ªt
);

23 
	}
}

25 
	$ã°_¨øy
()

27 
kô
::
Aºay
<
AA
, 100> 
¨øy
;

29 
	`¥ötf
("input:\n");

30 
i
 = 1; i != 10; ++i)

32 
AA
 
ôem
;

33 
ôem
.
a
 = 
i
;

34 
ôem
.
b
 = 
i
;

35 
¨øy
.
	`add
(
i
 + 1, 
ôem
);

36 
	`¥ötf
("%d %d\n", 
ôem
.
a
, iãm.
b
);

38 
	`¥ötf
("output:\n");

39 
¨øy
.
	`˛ór
();

40 
i
 = 7; i != 10; ++i)

42 
AA
 
ôem
;

43 
ôem
.
a
 = 
i
;

44 
ôem
.
b
 = 
i
;

45 
¨øy
.
	`add
(
i
 + 1, 
ôem
);

47 
AA
 
ôem
;

48 
¨øy
.
	`ª£tNext
();áºay.
	`√xt
(
ôem
);)

50 
	`¥ötf
("%d %d\n", 
ôem
.
a
, iãm.
b
);

52 
	}
}

54 
	$maö
()

56 
Aµ
 
≠p
;

58 
	`ã°_¨øy
();

61 
	}
}

	@test/main_server.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<un‹dîed_m≠
>

4 
	~<time.h
>

5 
	~<sys/ty≥s.h
>

6 
	~<sys/timeb.h
>

7 
	~<sys/times.h
>

8 
	~<sys/time.h
>

9 
	~"górkô.h
"

10 
	~"≠p_£rvî.h
"

11 
	~"debugfunc.h
"

12 
	~"Queue.h
"

14 
	~<uni°d.h
>

17 
	$ã°
(
a
[])

19 
	`¥ötf
("%d\n", (
a
));

20 
	}
}

22 
	$ã°_hl_vec
()

24 c⁄° 
ã°_˙t
 = 100000;

25 c⁄° 
run_˙t
 = 100000000;

26 
kô
::
Ref
* 
p
 = kô::
Sockë
::
	`¸óã
();

27 
ödex
;

28 
kô
::
HashLi°Def
 
hl
[
ã°_˙t
];

29 
kô
::
	`HashLi°_öô
(
hl
, 
ã°_˙t
);

30 
°d
::
ve˘‹
<*> 
vec
;

32 
	`KIT_BEGIN
(
hash_li°
);

33 
i
 = 1; i !
ã°_˙t
; ++i)

35 
kô
::
	`HashLi°_addEÀmít
(
hl
, 
i
, 
p
);

38 
	`KIT_RUN
(
run_˙t
);

39 
	`KIT_END
(
hash_li°
, "[HashList] init cost:");

41 
	`KIT_BEGIN
(
hash_li°_li°
);

42 
ödex
 = 0;

43 
ödex
 = 
kô
::
	`HashLi°_√xt
(
hl
, index))

45 * 
µ
 = 
kô
::
	`HashLi°_gëEÀmít
(
hl
, 
ödex
);

47 
	`KIT_RUN
(
run_˙t
);

49 
	`KIT_END
(
hash_li°_li°
, "[HashList]Üist cost:");

51 
	`KIT_BEGIN
(
hash_ödex
);

52 
i
 = 1; i !
ã°_˙t
; ++i)

54 * 
µ
 = 
kô
::
	`HashLi°_gëEÀmít
(
hl
, 
i
);

56 
	`KIT_RUN
(
run_˙t
);

57 
	`KIT_END
(
hash_ödex
, "[HashList] index cost:");

59 
	`¥ötf
("\n");

61 
	`KIT_BEGIN
(
ve˘‹
);

62 
i
 = 1; i !
ã°_˙t
; ++i)

64 
vec
.
	`push_back
(
p
);

66 
	`KIT_RUN
(
run_˙t
);

67 
	`KIT_END
(
ve˘‹
, "[vector] init cost:");

69 
	`KIT_BEGIN
(
ve˘‹_li°
);

70 
°d
::
ve˘‹
<*>::
ôî©‹
 
ix
 = 
vec
.
	`begö
();

71 
ix
 !
vec
.
	`íd
())

73 * 
µ
 = *
ix
;

74 ++
ix
;

76 
	`KIT_RUN
(
run_˙t
);

77 
	`KIT_END
(
ve˘‹_li°
, "[vector]Üist cost:");

79 
	`KIT_BEGIN
(
ve˘‹_ödex
);

80 
i
 = 1; i !
ã°_˙t
; ++i)

82 * 
µ
 = 
vec
[
i
];

84 
	`KIT_RUN
(
run_˙t
);

85 
	`KIT_END
(
ve˘‹_ödex
, "[vector] index cost:");

87 
	`¥ötf
("\n");

90 
°d
::
un‹dîed_m≠
<, *> 
um≠
;

91 
	`KIT_BEGIN
(
un‹dîed_m≠_öô
);

92 
i
 = 1; i !
ã°_˙t
; ++i)

94 
um≠
[
i
] = 
p
;

96 
	`KIT_RUN
(
run_˙t
);

97 
	`KIT_END
(
un‹dîed_m≠_öô
, "[unorder_map] init cost:");

99 
	`KIT_BEGIN
(
un‹dîed_m≠_li°
);

100 
°d
::
un‹dîed_m≠
<, *>::
ôî©‹
 
ix
 = 
um≠
.
	`begö
(); ix !um≠.
	`íd
(); ++ix)

102 * 
µ
 = 
ix
->
£c⁄d
;

104 
	`KIT_RUN
(
run_˙t
);

105 
	`KIT_END
(
un‹dîed_m≠_li°
, "[unorder_map]Üist cost");

107 
	`KIT_BEGIN
(
m≠_ödex
);

108 
i
 = 1; i !
ã°_˙t
; ++i)

110 * 
µ
 = 
um≠
[
i
];

112 
	`KIT_RUN
(
run_˙t
);

113 
	`KIT_END
(
m≠_ödex
, "[unorder_map] index cost:");

115 
	`¥ötf
("ª‡˙t:%d\n", 
p
->
	`gëRe„ªn˚Cou¡
());

116 
	}
}

118 
	$ã°_tick
()

120 c⁄° 
TEST_CNT
 = 0x7FFFFF;

122 
	`KIT_BEGIN
(
tick
);

123 
i
 = 0; i < 
TEST_CNT
; ++i)

127 
	`KIT_END
(
tick
, "tick:");

129 
	`KIT_BEGIN
(
m£c
);

130 
i
 = 0; i < 
TEST_CNT
; ++i)

132 
kô
::
	`time
();

134 
	`KIT_END
(
m£c
, "msec:");

137 
time•ec
 
ts
;

138 
	`KIT_BEGIN
(
time
);

139 
i
 = 0; i < 
TEST_CNT
; ++i)

141 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
ts
);

143 
	`KIT_END
(
time
, "time:");

146 
	`KIT_BEGIN
(
˛ock
);

147 
i
 = 0; i < 
TEST_CNT
; ++i)

149 
	`˛ock
();

151 
	`KIT_END
(
˛ock
, "clock:");

153 
timevÆ
 
tv
;

154 
timez⁄e
 
tz
;

155 
	`KIT_BEGIN
(
gëtimeofday
);

156 
i
 = 0; i < 
TEST_CNT
; ++i)

158 
	`gëtimeofday
(&
tv
, &
tz
);

160 
	`KIT_END
(
gëtimeofday
, "gettimeofday:");

162 
	`KIT_BEGIN
(
times
);

163 
i
 = 0; i < 
TEST_CNT
; ++i)

165 
	`times
(
NULL
);

167 
	`KIT_END
(
times
, "times:");

169 
	}
}

171 
	$ã°_hash_li°
()

173 
kô
::
HashLi°Def
 
a
[100];

174 
	`HashLi°_öô
(
a
, 100);

176 
kô
::
Ref
* 
p
 = (kit::Ref*)1;

178 
kô
::
	`HashLi°_addEÀmít
(
a
, 1, 
p
);

179 
kô
::
	`HashLi°_addEÀmít
(
a
, 2, 
p
);

180 
kô
::
	`HashLi°_addEÀmít
(
a
, 88, 
p
);

181 
kô
::
	`HashLi°_addEÀmít
(
a
, 4, 
p
);

182 
kô
::
	`HashLi°_dñEÀmít
(
a
, 2);

183 
kô
::
	`HashLi°_addEÀmít
(
a
, 2, 
p
);

185 
kô
::
Sîvî
* 
cc
 = (kô::Sîvî*)kô::
	`HashLi°_gëEÀmít
(
a
, 1);

186 
kô
::
	`HashLi°_¥öt
(
a
);

187 
	}
}

189 ˛as†
	cAT
 : 
public
 
kô
::
Ref


191 
public
:

194 
	$ã°_£rvî
()

196 
kô
::
Sîvî
* 
£rvî1
 = kô::Sîvî::
	`¸óã
();

197 
kô
::
Sîvî
* 
£rvî2
 = kô::Sîvî::
	`¸óã
();

199 
£rvî1
->
	`£tTimevÆ
(2000);

200 
£rvî1
->
	`°¨tup
("127.0.0.1", 3333);

202 
£rvî2
->
	`£tTimevÆ
(2000);

203 
£rvî2
->
	`°¨tup
("127.0.0.1", 3334);

205 
	`¶ìp
(10);

206 
£rvî1
->
	`shutdown
();

207 
£rvî2
->
	`shutdown
();

208 
	}
}

210 
	~<sys/ïﬁl.h
>

212 
	$ã°_que
()

214 
ïﬁl_evít
 
	tEvít
;

215 
kô
::
Queue
<
ïﬁl_evít
, 100> 
que
;

216 
ïﬁl_evít
 
evít
;

217 
i
 = 0; i != 1000; ++i)

219 
evít
.
d©a
.
fd
 = 
i
;

220 
boﬁ
 
ªt
 = 
que
.
	`push
(
evít
);

221 
	`¥ötf
("push:%d\n", (
ªt
));

224 
i
 = 0; i != 1000; ++i)

226 i‡(
que
.
	`p›
(
evít
))

228 
	`LOG
("p›::%d\n", 
evít
.
d©a
.
fd
);

231 
	`LOG
("cou¡:%d\n", 
que
.
	`cou¡
());

232 
	}
}

234 
	$°¨t_£rvî
()

236 
Aµ
 
≠p
;

237 
≠p
.
	`run
();

238 
	}
}

240 
	$ã°_¨øy
()

242 c⁄° 
size
 = 10;

243 
a
[
size
];

244 * 
p
 = 
a
;

245 
i
 = 0; i !
size
; ++i)

247 
a
[
i
] = i;

250 
	`mem˝y
(
p
,Ö + 2, () * 2);

252 
i
 = 0; i !
size
; ++i)

254 
	`¥ötf
("%d ", 
a
[
i
]);

256 
	`¥ötf
("\n");

257 
	}
}

259 
	$maö
(
¨gc
, * 
¨gv
[])

263 
	`°¨t_£rvî
();

265 
	}
}

	@test/server/CMakeFiles/3.10.0-rc3/CompilerIdC/CMakeCCompilerId.c

1 #ifde‡
__˝lu•lus


5 #i‡
deföed
(
__18CXX
)

6 
	#ID_VOID_MAIN


	)

8 #i‡
deföed
(
__CLASSIC_C__
)

10 c⁄°

	)

11 vﬁ©ûe

	)

18 #i‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICC
)

19 
	#COMPILER_ID
 "I¡ñ"

	)

20 #i‡
deföed
(
_MSC_VER
)

21 
	#SIMULATE_ID
 "MSVC"

	)

24 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

25 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

26 #i‡
deföed
(
__INTEL_COMPILER_UPDATE
)

27 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER_UPDATE
)

	)

29 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

31 #i‡
deföed
(
__INTEL_COMPILER_BUILD_DATE
)

33 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

35 #i‡
deföed
(
_MSC_VER
)

37 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

38 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

41 #ñi‡
deföed
(
__PATHCC__
)

42 
	#COMPILER_ID
 "P©hSˇÀ"

	)

43 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

44 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

45 #i‡
deföed
(
__PATHCC_PATCHLEVEL__
)

46 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

49 #ñi‡
deföed
(
__BORLANDC__
Ë&& deföed(
__CODEGEARC_VERSION__
)

50 
	#COMPILER_ID
 "Emb¨ˇdîo"

	)

51 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

52 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

53 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

55 #ñi‡
deföed
(
__BORLANDC__
)

56 
	#COMPILER_ID
 "B‹œnd"

	)

58 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

59 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

61 #ñi‡
deföed
(
__WATCOMC__
) && __WATCOMC__ < 1200

62 
	#COMPILER_ID
 "W©com"

	)

64 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

65 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

66 #i‡(
__WATCOMC__
 % 10) > 0

67 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

70 #ñi‡
deföed
(
__WATCOMC__
)

71 
	#COMPILER_ID
 "O≥nW©com"

	)

73 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__WATCOMC__
 - 1100Ë/ 100)

	)

74 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

75 #i‡(
__WATCOMC__
 % 10) > 0

76 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

79 #ñi‡
deföed
(
__SUNPRO_C
)

80 
	#COMPILER_ID
 "SunPro"

	)

81 #i‡
__SUNPRO_C
 >= 0x5100

83 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_C
>>12)

	)

84 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_C
>>4 & 0xFF)

	)

85 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_C
 & 0xF)

	)

88 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_C
>>8)

	)

89 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_C
>>4 & 0xF)

	)

90 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_C
 & 0xF)

	)

93 #ñi‡
deföed
(
__HP_cc
)

94 
	#COMPILER_ID
 "HP"

	)

96 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_cc
/10000)

	)

97 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_cc
/100 % 100)

	)

98 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_cc
 % 100)

	)

100 #ñi‡
deföed
(
__DECC
)

101 
	#COMPILER_ID
 "Com∑q"

	)

103 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECC_VER
/10000000)

	)

104 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECC_VER
/100000 % 100)

	)

105 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECC_VER
 % 10000)

	)

107 #ñi‡
deföed
(
__IBMC__
Ë&& deföed(
__COMPILER_VER__
)

108 
	#COMPILER_ID
 "zOS"

	)

110 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

111 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

112 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

114 #ñi‡
deföed
(
__IBMC__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMC__ >= 800

115 
	#COMPILER_ID
 "XL"

	)

117 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

118 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

119 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

121 #ñi‡
deföed
(
__IBMC__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMC__ < 800

122 
	#COMPILER_ID
 "VisuÆAge"

	)

124 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMC__
/100)

	)

125 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMC__
/10 % 10)

	)

126 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMC__
 % 10)

	)

128 #ñi‡
deföed
(
__PGI
)

129 
	#COMPILER_ID
 "PGI"

	)

130 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

131 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

132 #i‡
deföed
(
__PGIC_PATCHLEVEL__
)

133 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

136 #ñi‡
deföed
(
_CRAYC
)

137 
	#COMPILER_ID
 "Cøy"

	)

138 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE_MAJOR
)

	)

139 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

141 #ñi‡
deföed
(
__TI_COMPILER_VERSION__
)

142 
	#COMPILER_ID
 "TI"

	)

144 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

145 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

146 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

148 #ñi‡
deföed
(
__FUJITSU
Ë|| deföed(
__FCC_VERSION
Ë|| deföed(
__fcc_vîsi⁄
)

149 
	#COMPILER_ID
 "Fujôsu"

	)

151 #ñi‡
deföed
(
__TINYC__
)

152 
	#COMPILER_ID
 "TöyCC"

	)

154 #ñi‡
deföed
(
__BCC__
)

155 
	#COMPILER_ID
 "Bru˚"

	)

157 #ñi‡
deföed
(
__SCO_VERSION__
)

158 
	#COMPILER_ID
 "SCO"

	)

160 #ñi‡
deföed
(
__˛™g__
Ë&& deföed(
__≠∂e_buûd_vîsi⁄__
)

161 
	#COMPILER_ID
 "AµÀCœng"

	)

162 #i‡
deföed
(
_MSC_VER
)

163 
	#SIMULATE_ID
 "MSVC"

	)

165 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

166 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

167 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

168 #i‡
deföed
(
_MSC_VER
)

170 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

171 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

173 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__≠∂e_buûd_vîsi⁄__
)

	)

175 #ñi‡
deföed
(
__˛™g__
)

176 
	#COMPILER_ID
 "Cœng"

	)

177 #i‡
deföed
(
_MSC_VER
)

178 
	#SIMULATE_ID
 "MSVC"

	)

180 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

181 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

182 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

183 #i‡
deföed
(
_MSC_VER
)

185 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

186 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

189 #ñi‡
deföed
(
__GNUC__
)

190 
	#COMPILER_ID
 "GNU"

	)

191 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

192 #i‡
deföed
(
__GNUC_MINOR__
)

193 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

195 #i‡
deföed
(
__GNUC_PATCHLEVEL__
)

196 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

199 #ñi‡
deföed
(
_MSC_VER
)

200 
	#COMPILER_ID
 "MSVC"

	)

202 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

203 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

204 #i‡
deföed
(
_MSC_FULL_VER
)

205 #i‡
_MSC_VER
 >= 1400

207 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

210 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

213 #i‡
deföed
(
_MSC_BUILD
)

214 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

217 #ñi‡
deföed
(
__VISUALDSPVERSION__
Ë|| deföed(
__ADSPBLACKFIN__
Ë|| deföed(
__ADSPTS__
Ë|| deföed(
__ADSP21000__
)

218 
	#COMPILER_ID
 "ADSP"

	)

219 #i‡
deföed
(
__VISUALDSPVERSION__
)

221 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__VISUALDSPVERSION__
>>24)

	)

222 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__VISUALDSPVERSION__
>>16 & 0xFF)

	)

223 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__VISUALDSPVERSION__
>>8 & 0xFF)

	)

226 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

227 
	#COMPILER_ID
 "IAR"

	)

228 #i‡
deföed
(
__VER__
)

229 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__VER__
Ë/ 1000000)

	)

230 
	#COMPILER_VERSION_MINOR
 
	`DEC
(((
__VER__
Ë/ 1000Ë% 1000)

	)

231 
	#COMPILER_VERSION_PATCH
 
	`DEC
((
__VER__
Ë% 1000)

	)

232 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__IAR_SYSTEMS_ICC__
)

	)

235 #ñi‡
deföed
(
__ARMCC_VERSION
)

236 
	#COMPILER_ID
 "ARMCC"

	)

237 #i‡
__ARMCC_VERSION
 >= 1000000

239 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/1000000)

	)

240 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 100)

	)

241 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

244 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/100000)

	)

245 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 10)

	)

246 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

250 #ñi‡
deföed
(
__SDCC_VERSION_MAJOR
Ë|| deföed(
SDCC
)

251 
	#COMPILER_ID
 "SDCC"

	)

252 #i‡
deföed
(
__SDCC_VERSION_MAJOR
)

253 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__SDCC_VERSION_MAJOR
)

	)

254 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__SDCC_VERSION_MINOR
)

	)

255 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__SDCC_VERSION_PATCH
)

	)

258 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
SDCC
/100)

	)

259 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
SDCC
/10 % 10)

	)

260 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
SDCC
 % 10)

	)

263 #ñi‡
deföed
(
_SGI_COMPILER_VERSION
Ë|| deföed(
_COMPILER_VERSION
)

264 
	#COMPILER_ID
 "MIPS¥o"

	)

265 #i‡
deföed
(
_SGI_COMPILER_VERSION
)

267 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/100)

	)

268 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/10 % 10)

	)

269 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_SGI_COMPILER_VERSION
 % 10)

	)

272 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_COMPILER_VERSION
/100)

	)

273 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_COMPILER_VERSION
/10 % 10)

	)

274 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_COMPILER_VERSION
 % 10)

	)

281 #ñi‡
deföed
(
__sgi
)

282 
	#COMPILER_ID
 "MIPS¥o"

	)

284 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpua
)

285 
	#COMPILER_ID
 "HP"

	)

288 
	#COMPILER_ID
 ""

	)

295 c⁄°* 
	göfo_compûî
 = "INFO" ":" "compûî[" 
COMPILER_ID
 "]";

296 #ifde‡
SIMULATE_ID


297 c⁄°* 
	göfo_simuœã
 = "INFO" ":" "simuœã[" 
SIMULATE_ID
 "]";

300 #ifde‡
__QNXNTO__


301 c⁄°* 
	gqnx¡o
 = "INFO" ":" "qnxnto[]";

304 #i‡
deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

305 c⁄° *
	göfo_¸ay
 = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";

308 
	#STRINGIFY_HELPER
(
X
Ë#X

	)

309 
	#STRINGIFY
(
X
Ë
	`STRINGIFY_HELPER
(X)

	)

312 #i‡
deföed
(
__löux
Ë|| deföed(
__löux__
Ë|| deföed(
löux
)

313 
	#PLATFORM_ID
 "Löux"

	)

315 #ñi‡
deföed
(
__CYGWIN__
)

316 
	#PLATFORM_ID
 "Cygwö"

	)

318 #ñi‡
deföed
(
__MINGW32__
)

319 
	#PLATFORM_ID
 "MöGW"

	)

321 #ñi‡
deföed
(
__APPLE__
)

322 
	#PLATFORM_ID
 "D¨wö"

	)

324 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

325 
	#PLATFORM_ID
 "Wödows"

	)

327 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD
)

328 
	#PLATFORM_ID
 "FªeBSD"

	)

330 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__NëBSD
)

331 
	#PLATFORM_ID
 "NëBSD"

	)

333 #ñi‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__OPENBSD
)

334 
	#PLATFORM_ID
 "O≥nBSD"

	)

336 #ñi‡
deföed
(
__sun
Ë|| deföed(
sun
)

337 
	#PLATFORM_ID
 "SunOS"

	)

339 #ñi‡
deföed
(
_AIX
Ë|| deföed(
__AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix
Ë|| deföed(
__aix__
)

340 
	#PLATFORM_ID
 "AIX"

	)

342 #ñi‡
deföed
(
__sgi
Ë|| deföed(
__sgi__
Ë|| deföed(
_SGI
)

343 
	#PLATFORM_ID
 "IRIX"

	)

345 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpux__
)

346 
	#PLATFORM_ID
 "HP-UX"

	)

348 #ñi‡
deföed
(
__HAIKU__
)

349 
	#PLATFORM_ID
 "Haiku"

	)

351 #ñi‡
deföed
(
__BeOS
Ë|| deföed(
__BEOS__
Ë|| deföed(
_BEOS
)

352 
	#PLATFORM_ID
 "BeOS"

	)

354 #ñi‡
deföed
(
__QNX__
Ë|| deföed(
__QNXNTO__
)

355 
	#PLATFORM_ID
 "QNX"

	)

357 #ñi‡
deföed
(
__åu64
Ë|| deföed(
_åu64
Ë|| deföed(
__TRU64__
)

358 
	#PLATFORM_ID
 "Tru64"

	)

360 #ñi‡
deföed
(
__riscos
Ë|| deföed(
__riscos__
)

361 
	#PLATFORM_ID
 "RISCos"

	)

363 #ñi‡
deföed
(
__söix
Ë|| deföed(
__söix__
Ë|| deföed(
__SINIX__
)

364 
	#PLATFORM_ID
 "SINIX"

	)

366 #ñi‡
deföed
(
__UNIX_SV__
)

367 
	#PLATFORM_ID
 "UNIX_SV"

	)

369 #ñi‡
deföed
(
__bsdos__
)

370 
	#PLATFORM_ID
 "BSDOS"

	)

372 #ñi‡
deföed
(
_MPRAS
Ë|| deföed(
MPRAS
)

373 
	#PLATFORM_ID
 "MP-RAS"

	)

375 #ñi‡
deföed
(
__osf
Ë|| deföed(
__osf__
)

376 
	#PLATFORM_ID
 "OSF1"

	)

378 #ñi‡
deföed
(
_SCO_SV
Ë|| deföed(
SCO_SV
Ë|| deföed(
sco_sv
)

379 
	#PLATFORM_ID
 "SCO_SV"

	)

381 #ñi‡
deföed
(
__u…rix
Ë|| deföed(
__u…rix__
Ë|| deföed(
_ULTRIX
)

382 
	#PLATFORM_ID
 "ULTRIX"

	)

384 #ñi‡
deföed
(
__XENIX__
Ë|| deföed(
_XENIX
Ë|| deföed(
XENIX
)

385 
	#PLATFORM_ID
 "Xíix"

	)

387 #ñi‡
deföed
(
__WATCOMC__
)

388 #i‡
deföed
(
__LINUX__
)

389 
	#PLATFORM_ID
 "Löux"

	)

391 #ñi‡
deföed
(
__DOS__
)

392 
	#PLATFORM_ID
 "DOS"

	)

394 #ñi‡
deföed
(
__OS2__
)

395 
	#PLATFORM_ID
 "OS2"

	)

397 #ñi‡
deföed
(
__WINDOWS__
)

398 
	#PLATFORM_ID
 "Wödows3x"

	)

401 
	#PLATFORM_ID


	)

405 
	#PLATFORM_ID


	)

414 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

415 #i‡
deföed
(
_M_IA64
)

416 
	#ARCHITECTURE_ID
 "IA64"

	)

418 #ñi‡
deföed
(
_M_X64
Ë|| deföed(
_M_AMD64
)

419 
	#ARCHITECTURE_ID
 "x64"

	)

421 #ñi‡
deföed
(
_M_IX86
)

422 
	#ARCHITECTURE_ID
 "X86"

	)

424 #ñi‡
deföed
(
_M_ARM64
)

425 
	#ARCHITECTURE_ID
 "ARM64"

	)

427 #ñi‡
deföed
(
_M_ARM
)

428 #i‡
_M_ARM
 == 4

429 
	#ARCHITECTURE_ID
 "ARMV4I"

	)

430 #ñi‡
_M_ARM
 == 5

431 
	#ARCHITECTURE_ID
 "ARMV5I"

	)

433 
	#ARCHITECTURE_ID
 "ARMV" 
	`STRINGIFY
(
_M_ARM
)

	)

436 #ñi‡
deföed
(
_M_MIPS
)

437 
	#ARCHITECTURE_ID
 "MIPS"

	)

439 #ñi‡
deföed
(
_M_SH
)

440 
	#ARCHITECTURE_ID
 "SHx"

	)

443 
	#ARCHITECTURE_ID
 ""

	)

446 #ñi‡
deföed
(
__WATCOMC__
)

447 #i‡
deföed
(
_M_I86
)

448 
	#ARCHITECTURE_ID
 "I86"

	)

450 #ñi‡
deföed
(
_M_IX86
)

451 
	#ARCHITECTURE_ID
 "X86"

	)

454 
	#ARCHITECTURE_ID
 ""

	)

457 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

458 #i‡
deföed
(
__ICCARM__
)

459 
	#ARCHITECTURE_ID
 "ARM"

	)

461 #ñi‡
deföed
(
__ICCAVR__
)

462 
	#ARCHITECTURE_ID
 "AVR"

	)

465 
	#ARCHITECTURE_ID
 ""

	)

468 
	#ARCHITECTURE_ID


	)

472 
	#DEC
(
n
) \

473 ('0' + (((
n
) / 10000000)%10)), \

474 ('0' + (((
n
) / 1000000)%10)), \

475 ('0' + (((
n
) / 100000)%10)), \

476 ('0' + (((
n
) / 10000)%10)), \

477 ('0' + (((
n
) / 1000)%10)), \

478 ('0' + (((
n
) / 100)%10)), \

479 ('0' + (((
n
) / 10)%10)), \

480 ('0' + ((
n
Ë% 10))

	)

483 
	#HEX
(
n
) \

484 ('0' + ((
n
)>>28 & 0xF)), \

485 ('0' + ((
n
)>>24 & 0xF)), \

486 ('0' + ((
n
)>>20 & 0xF)), \

487 ('0' + ((
n
)>>16 & 0xF)), \

488 ('0' + ((
n
)>>12 & 0xF)), \

489 ('0' + ((
n
)>>8 & 0xF)), \

490 ('0' + ((
n
)>>4 & 0xF)), \

491 ('0' + ((
n
Ë& 0xF))

	)

494 #ifde‡
COMPILER_VERSION_MAJOR


495 c⁄° 
	göfo_vîsi⁄
[] = {

498 
COMPILER_VERSION_MAJOR
,

499 #ifde‡
COMPILER_VERSION_MINOR


500 '.', 
COMPILER_VERSION_MINOR
,

501 #ifde‡
COMPILER_VERSION_PATCH


502 '.', 
COMPILER_VERSION_PATCH
,

503 #ifde‡
COMPILER_VERSION_TWEAK


504 '.', 
COMPILER_VERSION_TWEAK
,

512 #ifde‡
COMPILER_VERSION_INTERNAL


513 c⁄° 
	göfo_vîsi⁄_öã∫Æ
[] = {

517 
COMPILER_VERSION_INTERNAL
,']','\0'};

521 #ifde‡
SIMULATE_VERSION_MAJOR


522 c⁄° 
	göfo_simuœã_vîsi⁄
[] = {

525 
SIMULATE_VERSION_MAJOR
,

526 #ifde‡
SIMULATE_VERSION_MINOR


527 '.', 
SIMULATE_VERSION_MINOR
,

528 #ifde‡
SIMULATE_VERSION_PATCH


529 '.', 
SIMULATE_VERSION_PATCH
,

530 #ifde‡
SIMULATE_VERSION_TWEAK


531 '.', 
SIMULATE_VERSION_TWEAK
,

542 c⁄°* 
	göfo_∂©f‹m
 = "INFO" ":" "∂©f‹m[" 
PLATFORM_ID
 "]";

543 c⁄°* 
	göfo_¨ch
 = "INFO" ":" "¨ch[" 
ARCHITECTURE_ID
 "]";

548 #i‡!
deföed
(
__STDC__
)

549 #i‡
deföed
(
_MSC_VER
Ë&& !deföed(
__˛™g__
)

550 
	#C_DIALECT
 "90"

	)

552 
	#C_DIALECT


	)

554 #ñi‡
__STDC_VERSION__
 >= 201000L

555 
	#C_DIALECT
 "11"

	)

556 #ñi‡
__STDC_VERSION__
 >= 199901L

557 
	#C_DIALECT
 "99"

	)

559 
	#C_DIALECT
 "90"

	)

561 c⁄° * 
	göfo_œnguage_düÀ˘_deÁu…
 =

562 "INFO" ":" "düÀ˘_deÁu…[" 
C_DIALECT
 "]";

566 #ifde‡
ID_VOID_MAIN


567 
	$maö
(Ë{
	}
}

569 #i‡
deföed
(
__CLASSIC_C__
)

570 
	$maö
(
¨gc
, 
¨gv
) argc; *argv[];

572 
	$maö
(
¨gc
, * 
¨gv
[])

575 
ªquúe
 = 0;

576 
ªquúe
 +
öfo_compûî
[
¨gc
];

577 
ªquúe
 +
öfo_∂©f‹m
[
¨gc
];

578 
ªquúe
 +
öfo_¨ch
[
¨gc
];

579 #ifde‡
COMPILER_VERSION_MAJOR


580 
ªquúe
 +
öfo_vîsi⁄
[
¨gc
];

582 #ifde‡
COMPILER_VERSION_INTERNAL


583 
ªquúe
 +
öfo_vîsi⁄_öã∫Æ
[
¨gc
];

585 #ifde‡
SIMULATE_ID


586 
ªquúe
 +
öfo_simuœã
[
¨gc
];

588 #ifde‡
SIMULATE_VERSION_MAJOR


589 
ªquúe
 +
öfo_simuœã_vîsi⁄
[
¨gc
];

591 #i‡
	`deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

592 
ªquúe
 +
öfo_¸ay
[
¨gc
];

594 
ªquúe
 +
öfo_œnguage_düÀ˘_deÁu…
[
¨gc
];

595 ()
¨gv
;

596  
ªquúe
;

597 
	}
}

	@test/server/CMakeFiles/3.10.0-rc3/CompilerIdCXX/CMakeCXXCompilerId.cpp

4 #i‚de‡
__˝lu•lus


12 #i‡
deföed
(
__COMO__
)

13 
	#COMPILER_ID
 "Comóu"

	)

15 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__COMO_VERSION__
 / 100)

	)

16 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__COMO_VERSION__
 % 100)

	)

18 #ñi‡
deföed
(
__INTEL_COMPILER
Ë|| deföed(
__ICC
)

19 
	#COMPILER_ID
 "I¡ñ"

	)

20 #i‡
deföed
(
_MSC_VER
)

21 
	#SIMULATE_ID
 "MSVC"

	)

24 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__INTEL_COMPILER
/100)

	)

25 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__INTEL_COMPILER
/10 % 10)

	)

26 #i‡
deföed
(
__INTEL_COMPILER_UPDATE
)

27 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER_UPDATE
)

	)

29 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__INTEL_COMPILER
 % 10)

	)

31 #i‡
deföed
(
__INTEL_COMPILER_BUILD_DATE
)

33 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__INTEL_COMPILER_BUILD_DATE
)

	)

35 #i‡
deföed
(
_MSC_VER
)

37 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

38 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

41 #ñi‡
deföed
(
__PATHCC__
)

42 
	#COMPILER_ID
 "P©hSˇÀ"

	)

43 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PATHCC__
)

	)

44 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PATHCC_MINOR__
)

	)

45 #i‡
deföed
(
__PATHCC_PATCHLEVEL__
)

46 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PATHCC_PATCHLEVEL__
)

	)

49 #ñi‡
deföed
(
__BORLANDC__
Ë&& deföed(
__CODEGEARC_VERSION__
)

50 
	#COMPILER_ID
 "Emb¨ˇdîo"

	)

51 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>24 & 0x00FF)

	)

52 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__CODEGEARC_VERSION__
>>16 & 0x00FF)

	)

53 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__CODEGEARC_VERSION__
 & 0xFFFF)

	)

55 #ñi‡
deföed
(
__BORLANDC__
)

56 
	#COMPILER_ID
 "B‹œnd"

	)

58 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__BORLANDC__
>>8)

	)

59 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__BORLANDC__
 & 0xFF)

	)

61 #ñi‡
deföed
(
__WATCOMC__
) && __WATCOMC__ < 1200

62 
	#COMPILER_ID
 "W©com"

	)

64 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__WATCOMC__
 / 100)

	)

65 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

66 #i‡(
__WATCOMC__
 % 10) > 0

67 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

70 #ñi‡
deföed
(
__WATCOMC__
)

71 
	#COMPILER_ID
 "O≥nW©com"

	)

73 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__WATCOMC__
 - 1100Ë/ 100)

	)

74 
	#COMPILER_VERSION_MINOR
 
	`DEC
((
__WATCOMC__
 / 10Ë% 10)

	)

75 #i‡(
__WATCOMC__
 % 10) > 0

76 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__WATCOMC__
 % 10)

	)

79 #ñi‡
deföed
(
__SUNPRO_CC
)

80 
	#COMPILER_ID
 "SunPro"

	)

81 #i‡
__SUNPRO_CC
 >= 0x5100

83 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>12)

	)

84 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xFF)

	)

85 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

88 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__SUNPRO_CC
>>8)

	)

89 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__SUNPRO_CC
>>4 & 0xF)

	)

90 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__SUNPRO_CC
 & 0xF)

	)

93 #ñi‡
deföed
(
__HP_aCC
)

94 
	#COMPILER_ID
 "HP"

	)

96 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__HP_aCC
/10000)

	)

97 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__HP_aCC
/100 % 100)

	)

98 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__HP_aCC
 % 100)

	)

100 #ñi‡
deföed
(
__DECCXX
)

101 
	#COMPILER_ID
 "Com∑q"

	)

103 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__DECCXX_VER
/10000000)

	)

104 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__DECCXX_VER
/100000 % 100)

	)

105 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__DECCXX_VER
 % 10000)

	)

107 #ñi‡
deföed
(
__IBMCPP__
Ë&& deföed(
__COMPILER_VER__
)

108 
	#COMPILER_ID
 "zOS"

	)

110 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

111 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

112 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

114 #ñi‡
deföed
(
__IBMCPP__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMCPP__ >= 800

115 
	#COMPILER_ID
 "XL"

	)

117 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

118 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

119 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

121 #ñi‡
deföed
(
__IBMCPP__
Ë&& !deföed(
__COMPILER_VER__
) && __IBMCPP__ < 800

122 
	#COMPILER_ID
 "VisuÆAge"

	)

124 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__IBMCPP__
/100)

	)

125 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__IBMCPP__
/10 % 10)

	)

126 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__IBMCPP__
 % 10)

	)

128 #ñi‡
deföed
(
__PGI
)

129 
	#COMPILER_ID
 "PGI"

	)

130 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__PGIC__
)

	)

131 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__PGIC_MINOR__
)

	)

132 #i‡
deföed
(
__PGIC_PATCHLEVEL__
)

133 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__PGIC_PATCHLEVEL__
)

	)

136 #ñi‡
deföed
(
_CRAYC
)

137 
	#COMPILER_ID
 "Cøy"

	)

138 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_RELEASE_MAJOR
)

	)

139 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_RELEASE_MINOR
)

	)

141 #ñi‡
deföed
(
__TI_COMPILER_VERSION__
)

142 
	#COMPILER_ID
 "TI"

	)

144 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000000)

	)

145 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__TI_COMPILER_VERSION__
/1000 % 1000)

	)

146 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__TI_COMPILER_VERSION__
 % 1000)

	)

148 #ñi‡
deföed
(
__FUJITSU
Ë|| deföed(
__FCC_VERSION
Ë|| deföed(
__fcc_vîsi⁄
)

149 
	#COMPILER_ID
 "Fujôsu"

	)

151 #ñi‡
deföed
(
__SCO_VERSION__
)

152 
	#COMPILER_ID
 "SCO"

	)

154 #ñi‡
deföed
(
__˛™g__
Ë&& deföed(
__≠∂e_buûd_vîsi⁄__
)

155 
	#COMPILER_ID
 "AµÀCœng"

	)

156 #i‡
deföed
(
_MSC_VER
)

157 
	#SIMULATE_ID
 "MSVC"

	)

159 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

160 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

161 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

162 #i‡
deföed
(
_MSC_VER
)

164 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

165 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

167 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
__≠∂e_buûd_vîsi⁄__
)

	)

169 #ñi‡
deföed
(
__˛™g__
)

170 
	#COMPILER_ID
 "Cœng"

	)

171 #i‡
deföed
(
_MSC_VER
)

172 
	#SIMULATE_ID
 "MSVC"

	)

174 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__˛™g_maj‹__
)

	)

175 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__˛™g_mö‹__
)

	)

176 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__˛™g_∑tchÀvñ__
)

	)

177 #i‡
deföed
(
_MSC_VER
)

179 
	#SIMULATE_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

180 
	#SIMULATE_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

183 #ñi‡
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
)

184 
	#COMPILER_ID
 "GNU"

	)

185 #i‡
deföed
(
__GNUC__
)

186 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUC__
)

	)

188 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__GNUG__
)

	)

190 #i‡
deföed
(
__GNUC_MINOR__
)

191 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__GNUC_MINOR__
)

	)

193 #i‡
deföed
(
__GNUC_PATCHLEVEL__
)

194 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__GNUC_PATCHLEVEL__
)

	)

197 #ñi‡
deföed
(
_MSC_VER
)

198 
	#COMPILER_ID
 "MSVC"

	)

200 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_MSC_VER
 / 100)

	)

201 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_MSC_VER
 % 100)

	)

202 #i‡
deföed
(
_MSC_FULL_VER
)

203 #i‡
_MSC_VER
 >= 1400

205 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 100000)

	)

208 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_MSC_FULL_VER
 % 10000)

	)

211 #i‡
deföed
(
_MSC_BUILD
)

212 
	#COMPILER_VERSION_TWEAK
 
	`DEC
(
_MSC_BUILD
)

	)

215 #ñi‡
deföed
(
__VISUALDSPVERSION__
Ë|| deföed(
__ADSPBLACKFIN__
Ë|| deföed(
__ADSPTS__
Ë|| deföed(
__ADSP21000__
)

216 
	#COMPILER_ID
 "ADSP"

	)

217 #i‡
deföed
(
__VISUALDSPVERSION__
)

219 
	#COMPILER_VERSION_MAJOR
 
	`HEX
(
__VISUALDSPVERSION__
>>24)

	)

220 
	#COMPILER_VERSION_MINOR
 
	`HEX
(
__VISUALDSPVERSION__
>>16 & 0xFF)

	)

221 
	#COMPILER_VERSION_PATCH
 
	`HEX
(
__VISUALDSPVERSION__
>>8 & 0xFF)

	)

224 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

225 
	#COMPILER_ID
 "IAR"

	)

226 #i‡
deföed
(
__VER__
)

227 
	#COMPILER_VERSION_MAJOR
 
	`DEC
((
__VER__
Ë/ 1000000)

	)

228 
	#COMPILER_VERSION_MINOR
 
	`DEC
(((
__VER__
Ë/ 1000Ë% 1000)

	)

229 
	#COMPILER_VERSION_PATCH
 
	`DEC
((
__VER__
Ë% 1000)

	)

230 
	#COMPILER_VERSION_INTERNAL
 
	`DEC
(
__IAR_SYSTEMS_ICC__
)

	)

233 #ñi‡
deföed
(
__ARMCC_VERSION
)

234 
	#COMPILER_ID
 "ARMCC"

	)

235 #i‡
__ARMCC_VERSION
 >= 1000000

237 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/1000000)

	)

238 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 100)

	)

239 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

242 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
__ARMCC_VERSION
/100000)

	)

243 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
__ARMCC_VERSION
/10000 % 10)

	)

244 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
__ARMCC_VERSION
 % 10000)

	)

248 #ñi‡
deföed
(
_SGI_COMPILER_VERSION
Ë|| deföed(
_COMPILER_VERSION
)

249 
	#COMPILER_ID
 "MIPS¥o"

	)

250 #i‡
deföed
(
_SGI_COMPILER_VERSION
)

252 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/100)

	)

253 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_SGI_COMPILER_VERSION
/10 % 10)

	)

254 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_SGI_COMPILER_VERSION
 % 10)

	)

257 
	#COMPILER_VERSION_MAJOR
 
	`DEC
(
_COMPILER_VERSION
/100)

	)

258 
	#COMPILER_VERSION_MINOR
 
	`DEC
(
_COMPILER_VERSION
/10 % 10)

	)

259 
	#COMPILER_VERSION_PATCH
 
	`DEC
(
_COMPILER_VERSION
 % 10)

	)

266 #ñi‡
deföed
(
__sgi
)

267 
	#COMPILER_ID
 "MIPS¥o"

	)

269 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpua
)

270 
	#COMPILER_ID
 "HP"

	)

273 
	#COMPILER_ID
 ""

	)

280 c⁄°* 
	göfo_compûî
 = "INFO" ":" "compûî[" 
COMPILER_ID
 "]";

281 #ifde‡
SIMULATE_ID


282 c⁄°* 
	göfo_simuœã
 = "INFO" ":" "simuœã[" 
SIMULATE_ID
 "]";

285 #ifde‡
__QNXNTO__


286 c⁄°* 
	gqnx¡o
 = "INFO" ":" "qnxnto[]";

289 #i‡
deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

290 c⁄° *
	göfo_¸ay
 = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";

293 
	#STRINGIFY_HELPER
(
X
Ë#X

	)

294 
	#STRINGIFY
(
X
Ë
	`STRINGIFY_HELPER
(X)

	)

297 #i‡
deföed
(
__löux
Ë|| deföed(
__löux__
Ë|| deföed(
löux
)

298 
	#PLATFORM_ID
 "Löux"

	)

300 #ñi‡
deföed
(
__CYGWIN__
)

301 
	#PLATFORM_ID
 "Cygwö"

	)

303 #ñi‡
deföed
(
__MINGW32__
)

304 
	#PLATFORM_ID
 "MöGW"

	)

306 #ñi‡
deföed
(
__APPLE__
)

307 
	#PLATFORM_ID
 "D¨wö"

	)

309 #ñi‡
deföed
(
_WIN32
Ë|| deföed(
__WIN32__
Ë|| deföed(
WIN32
)

310 
	#PLATFORM_ID
 "Wödows"

	)

312 #ñi‡
deföed
(
__FªeBSD__
Ë|| deföed(
__FªeBSD
)

313 
	#PLATFORM_ID
 "FªeBSD"

	)

315 #ñi‡
deföed
(
__NëBSD__
Ë|| deföed(
__NëBSD
)

316 
	#PLATFORM_ID
 "NëBSD"

	)

318 #ñi‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__OPENBSD
)

319 
	#PLATFORM_ID
 "O≥nBSD"

	)

321 #ñi‡
deföed
(
__sun
Ë|| deföed(
sun
)

322 
	#PLATFORM_ID
 "SunOS"

	)

324 #ñi‡
deföed
(
_AIX
Ë|| deföed(
__AIX
Ë|| deföed(
__AIX__
Ë|| deföed(
__aix
Ë|| deföed(
__aix__
)

325 
	#PLATFORM_ID
 "AIX"

	)

327 #ñi‡
deföed
(
__sgi
Ë|| deföed(
__sgi__
Ë|| deföed(
_SGI
)

328 
	#PLATFORM_ID
 "IRIX"

	)

330 #ñi‡
deföed
(
__hpux
Ë|| deföed(
__hpux__
)

331 
	#PLATFORM_ID
 "HP-UX"

	)

333 #ñi‡
deföed
(
__HAIKU__
)

334 
	#PLATFORM_ID
 "Haiku"

	)

336 #ñi‡
deföed
(
__BeOS
Ë|| deföed(
__BEOS__
Ë|| deföed(
_BEOS
)

337 
	#PLATFORM_ID
 "BeOS"

	)

339 #ñi‡
deföed
(
__QNX__
Ë|| deföed(
__QNXNTO__
)

340 
	#PLATFORM_ID
 "QNX"

	)

342 #ñi‡
deföed
(
__åu64
Ë|| deföed(
_åu64
Ë|| deföed(
__TRU64__
)

343 
	#PLATFORM_ID
 "Tru64"

	)

345 #ñi‡
deföed
(
__riscos
Ë|| deföed(
__riscos__
)

346 
	#PLATFORM_ID
 "RISCos"

	)

348 #ñi‡
deföed
(
__söix
Ë|| deföed(
__söix__
Ë|| deföed(
__SINIX__
)

349 
	#PLATFORM_ID
 "SINIX"

	)

351 #ñi‡
deföed
(
__UNIX_SV__
)

352 
	#PLATFORM_ID
 "UNIX_SV"

	)

354 #ñi‡
deföed
(
__bsdos__
)

355 
	#PLATFORM_ID
 "BSDOS"

	)

357 #ñi‡
deföed
(
_MPRAS
Ë|| deföed(
MPRAS
)

358 
	#PLATFORM_ID
 "MP-RAS"

	)

360 #ñi‡
deföed
(
__osf
Ë|| deföed(
__osf__
)

361 
	#PLATFORM_ID
 "OSF1"

	)

363 #ñi‡
deföed
(
_SCO_SV
Ë|| deföed(
SCO_SV
Ë|| deföed(
sco_sv
)

364 
	#PLATFORM_ID
 "SCO_SV"

	)

366 #ñi‡
deföed
(
__u…rix
Ë|| deföed(
__u…rix__
Ë|| deföed(
_ULTRIX
)

367 
	#PLATFORM_ID
 "ULTRIX"

	)

369 #ñi‡
deföed
(
__XENIX__
Ë|| deföed(
_XENIX
Ë|| deföed(
XENIX
)

370 
	#PLATFORM_ID
 "Xíix"

	)

372 #ñi‡
deföed
(
__WATCOMC__
)

373 #i‡
deföed
(
__LINUX__
)

374 
	#PLATFORM_ID
 "Löux"

	)

376 #ñi‡
deföed
(
__DOS__
)

377 
	#PLATFORM_ID
 "DOS"

	)

379 #ñi‡
deföed
(
__OS2__
)

380 
	#PLATFORM_ID
 "OS2"

	)

382 #ñi‡
deföed
(
__WINDOWS__
)

383 
	#PLATFORM_ID
 "Wödows3x"

	)

386 
	#PLATFORM_ID


	)

390 
	#PLATFORM_ID


	)

399 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

400 #i‡
deföed
(
_M_IA64
)

401 
	#ARCHITECTURE_ID
 "IA64"

	)

403 #ñi‡
deföed
(
_M_X64
Ë|| deföed(
_M_AMD64
)

404 
	#ARCHITECTURE_ID
 "x64"

	)

406 #ñi‡
deföed
(
_M_IX86
)

407 
	#ARCHITECTURE_ID
 "X86"

	)

409 #ñi‡
deföed
(
_M_ARM64
)

410 
	#ARCHITECTURE_ID
 "ARM64"

	)

412 #ñi‡
deföed
(
_M_ARM
)

413 #i‡
_M_ARM
 == 4

414 
	#ARCHITECTURE_ID
 "ARMV4I"

	)

415 #ñi‡
_M_ARM
 == 5

416 
	#ARCHITECTURE_ID
 "ARMV5I"

	)

418 
	#ARCHITECTURE_ID
 "ARMV" 
	`STRINGIFY
(
_M_ARM
)

	)

421 #ñi‡
deföed
(
_M_MIPS
)

422 
	#ARCHITECTURE_ID
 "MIPS"

	)

424 #ñi‡
deföed
(
_M_SH
)

425 
	#ARCHITECTURE_ID
 "SHx"

	)

428 
	#ARCHITECTURE_ID
 ""

	)

431 #ñi‡
deföed
(
__WATCOMC__
)

432 #i‡
deföed
(
_M_I86
)

433 
	#ARCHITECTURE_ID
 "I86"

	)

435 #ñi‡
deföed
(
_M_IX86
)

436 
	#ARCHITECTURE_ID
 "X86"

	)

439 
	#ARCHITECTURE_ID
 ""

	)

442 #ñi‡
deföed
(
__IAR_SYSTEMS_ICC__
Ë|| deföed(
__IAR_SYSTEMS_ICC
)

443 #i‡
deföed
(
__ICCARM__
)

444 
	#ARCHITECTURE_ID
 "ARM"

	)

446 #ñi‡
deföed
(
__ICCAVR__
)

447 
	#ARCHITECTURE_ID
 "AVR"

	)

450 
	#ARCHITECTURE_ID
 ""

	)

453 
	#ARCHITECTURE_ID


	)

457 
	#DEC
(
n
) \

458 ('0' + (((
n
) / 10000000)%10)), \

459 ('0' + (((
n
) / 1000000)%10)), \

460 ('0' + (((
n
) / 100000)%10)), \

461 ('0' + (((
n
) / 10000)%10)), \

462 ('0' + (((
n
) / 1000)%10)), \

463 ('0' + (((
n
) / 100)%10)), \

464 ('0' + (((
n
) / 10)%10)), \

465 ('0' + ((
n
Ë% 10))

	)

468 
	#HEX
(
n
) \

469 ('0' + ((
n
)>>28 & 0xF)), \

470 ('0' + ((
n
)>>24 & 0xF)), \

471 ('0' + ((
n
)>>20 & 0xF)), \

472 ('0' + ((
n
)>>16 & 0xF)), \

473 ('0' + ((
n
)>>12 & 0xF)), \

474 ('0' + ((
n
)>>8 & 0xF)), \

475 ('0' + ((
n
)>>4 & 0xF)), \

476 ('0' + ((
n
Ë& 0xF))

	)

479 #ifde‡
COMPILER_VERSION_MAJOR


480 c⁄° 
	göfo_vîsi⁄
[] = {

483 
COMPILER_VERSION_MAJOR
,

484 #ifde‡
COMPILER_VERSION_MINOR


485 '.', 
COMPILER_VERSION_MINOR
,

486 #ifde‡
COMPILER_VERSION_PATCH


487 '.', 
COMPILER_VERSION_PATCH
,

488 #ifde‡
COMPILER_VERSION_TWEAK


489 '.', 
COMPILER_VERSION_TWEAK
,

497 #ifde‡
COMPILER_VERSION_INTERNAL


498 c⁄° 
	göfo_vîsi⁄_öã∫Æ
[] = {

502 
COMPILER_VERSION_INTERNAL
,']','\0'};

506 #ifde‡
SIMULATE_VERSION_MAJOR


507 c⁄° 
	göfo_simuœã_vîsi⁄
[] = {

510 
SIMULATE_VERSION_MAJOR
,

511 #ifde‡
SIMULATE_VERSION_MINOR


512 '.', 
SIMULATE_VERSION_MINOR
,

513 #ifde‡
SIMULATE_VERSION_PATCH


514 '.', 
SIMULATE_VERSION_PATCH
,

515 #ifde‡
SIMULATE_VERSION_TWEAK


516 '.', 
SIMULATE_VERSION_TWEAK
,

527 c⁄°* 
	göfo_∂©f‹m
 = "INFO" ":" "∂©f‹m[" 
PLATFORM_ID
 "]";

528 c⁄°* 
	göfo_¨ch
 = "INFO" ":" "¨ch[" 
ARCHITECTURE_ID
 "]";

533 #i‡
deföed
(
_MSC_VER
Ë&& deföed(
_MSVC_LANG
)

534 
	#CXX_STD
 
_MSVC_LANG


	)

536 
	#CXX_STD
 
__˝lu•lus


	)

539 c⁄° * 
	göfo_œnguage_düÀ˘_deÁu…
 = "INFO" ":" "dialect_default["

540 #i‡
CXX_STD
 > 201402L

542 #ñi‡
CXX_STD
 >= 201402L

544 #ñi‡
CXX_STD
 >= 201103L

553 
	$maö
(
¨gc
, * 
¨gv
[])

555 
ªquúe
 = 0;

556 
ªquúe
 +
öfo_compûî
[
¨gc
];

557 
ªquúe
 +
öfo_∂©f‹m
[
¨gc
];

558 #ifde‡
COMPILER_VERSION_MAJOR


559 
ªquúe
 +
öfo_vîsi⁄
[
¨gc
];

561 #ifde‡
COMPILER_VERSION_INTERNAL


562 
ªquúe
 +
öfo_vîsi⁄_öã∫Æ
[
¨gc
];

564 #ifde‡
SIMULATE_ID


565 
ªquúe
 +
öfo_simuœã
[
¨gc
];

567 #ifde‡
SIMULATE_VERSION_MAJOR


568 
ªquúe
 +
öfo_simuœã_vîsi⁄
[
¨gc
];

570 #i‡
	`deföed
(
__CRAYXE
Ë|| deföed(
__CRAYXC
)

571 
ªquúe
 +
öfo_¸ay
[
¨gc
];

573 
ªquúe
 +
öfo_œnguage_düÀ˘_deÁu…
[
¨gc
];

574 ()
¨gv
;

575  
ªquúe
;

576 
	}
}

	@test/server/CMakeFiles/feature_tests.c

2 c⁄° 
	g„©uªs
[] = {"\n"

4 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
) >= 304

11 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
Ë>304 && 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

18 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
Ë>406 && 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 201000L

25 #i‡(
__GNUC__
 * 100 + 
__GNUC_MINOR__
Ë>304 && 
deföed
(
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

34 
	$maö
(
¨gc
, ** 
¨gv
Ë{ (Ôrgv;  
„©uªs
[¨gc]; 
	}
}

	@
1
.
0
61
1505
Application.cpp
Application.h
base/Array.h
base/Buffer.cpp
base/Buffer.h
base/BufferPool.cpp
base/BufferPool.h
base/HashList.cpp
base/HashList.h
base/List.h
base/Logger.cpp
base/Logger.h
base/Queue.h
base/Ref.cpp
base/Ref.h
base/RefPool.cpp
base/RefPool.h
base/Singleton.h
base/Thread.cpp
base/Thread.h
base/base.h
base/debugfunc.h
base/kitsys.cpp
base/kitsys.h
gearkit.h
network/Client.cpp
network/Client.h
network/Packet.cpp
network/Packet.h
network/Server.cpp
network/Server.h
network/SockAddr.cpp
network/SockAddr.h
network/Socket.cpp
network/Socket.h
network/netsys.h
network/network.h
network/platform/linux/Client_linux.cpp
network/platform/linux/Client_linux.h
network/platform/linux/Server_linux.cpp
network/platform/linux/Server_linux.h
network/platform/linux/SockAddr_linux.cpp
network/platform/linux/SockAddr_linux.h
network/platform/linux/Socket_linux.cpp
network/platform/linux/Socket_linux.h
network/platform/win/Client.cpp
network/platform/win/Server.cpp
network/platform/win/SockAddr.cpp
network/platform/win/Socket.cpp
test/app_client.cpp
test/app_client.h
test/app_server.cpp
test/app_server.h
test/client/CMakeFiles/3.10.0-rc3/CompilerIdC/CMakeCCompilerId.c
test/client/CMakeFiles/3.10.0-rc3/CompilerIdCXX/CMakeCXXCompilerId.cpp
test/client/CMakeFiles/feature_tests.c
test/main_client.cpp
test/main_server.cpp
test/server/CMakeFiles/3.10.0-rc3/CompilerIdC/CMakeCCompilerId.c
test/server/CMakeFiles/3.10.0-rc3/CompilerIdCXX/CMakeCXXCompilerId.cpp
test/server/CMakeFiles/feature_tests.c
