!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALLONES	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define ALLONES	/;"	d	file:
ALPHABIT	.//script/lua/lua-5.3.4/src/lctype.h	/^#define ALPHABIT	/;"	d
ARRAY	.//network/Protocol.h	/^    ARRAY,$/;"	m	class:kit::PTType	access:private
AUXMARK	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define AUXMARK /;"	d	file:
Array	.//base/Array.h	/^    Array() : count_(0), head_(-1), tail_(-1)$/;"	f	class:kit::Array	access:public	signature:()
Array	.//base/Array.h	/^class Array$/;"	c	namespace:kit
AutoLock	.//kit/Thread.cpp	/^AutoLock::AutoLock(IMutex* mutex)$/;"	f	class:kit::AutoLock	signature:(IMutex* mutex)
AutoLock	.//kit/Thread.h	/^    AutoLock(IMutex* mutex);$/;"	p	class:kit::AutoLock	access:public	signature:(IMutex* mutex)
AutoLock	.//kit/Thread.h	/^class AutoLock$/;"	c	namespace:kit
BASIC_STACK_SIZE	.//script/lua/lua-5.3.4/src/lstate.h	/^#define BASIC_STACK_SIZE /;"	d
BITRK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define BITRK	/;"	d
BIT_ISCOLLECTABLE	.//script/lua/lua-5.3.4/src/lobject.h	/^#define BIT_ISCOLLECTABLE	/;"	d
BLACKBIT	.//script/lua/lua-5.3.4/src/lgc.h	/^#define BLACKBIT	/;"	d
BUFFER_POOL_SIZE	.//kit/BufferPool.h	/^#define BUFFER_POOL_SIZE /;"	d
BUFFER_QUEUE_CNT	.//kit/BufferPool.h	/^const int32_t BUFFER_QUEUE_CNT = 8;$/;"	m	namespace:kit
BinOpr	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	.//script/lua/lua-5.3.4/src/lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BlockCnt	.//script/lua/lua-5.3.4/src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	.//script/lua/lua-5.3.4/src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BlockCnt::firstgoto	.//script/lua/lua-5.3.4/src/lparser.c	/^  int firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:	access:public
BlockCnt::firstlabel	.//script/lua/lua-5.3.4/src/lparser.c	/^  int firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:	access:public
BlockCnt::isloop	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte isloop;  \/* true if 'block' is a loop *\/$/;"	m	struct:BlockCnt	file:	access:public
BlockCnt::nactvar	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:	access:public
BlockCnt::previous	.//script/lua/lua-5.3.4/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:	access:public
BlockCnt::upval	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:	access:public
Buffer	.//kit/Buffer.cpp	/^Buffer::Buffer()$/;"	f	class:kit::Buffer	signature:()
Buffer	.//kit/Buffer.h	/^    Buffer();$/;"	p	class:kit::Buffer	access:public	signature:()
Buffer	.//kit/Buffer.h	/^class Buffer : public Ref$/;"	c	namespace:kit	inherits:Ref
BufferPool	.//kit/BufferPool.cpp	/^BufferPool::BufferPool()$/;"	f	class:kit::BufferPool	signature:()
BufferPool	.//kit/BufferPool.h	/^    BufferPool();$/;"	p	class:kit::BufferPool	access:public	signature:()
BufferPool	.//kit/BufferPool.h	/^class BufferPool : public Ref$/;"	c	namespace:kit	inherits:Ref
BufferPoolManager	.//kit/BufferPool.cpp	/^BufferPoolManager::BufferPoolManager()$/;"	f	class:kit::BufferPoolManager	signature:()
BufferPoolManager	.//kit/BufferPool.h	/^    BufferPoolManager();$/;"	p	class:kit::BufferPoolManager	access:public	signature:()
BufferPoolManager	.//kit/BufferPool.h	/^class BufferPoolManager : public Ref$/;"	c	namespace:kit	inherits:Ref
BufferQue	.//kit/BufferPool.h	/^    typedef Queue<Buffer*, BUFFER_POOL_SIZE> BufferQue;$/;"	t	class:kit::BufferPool	access:private
CAP_POSITION	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define CAP_POSITION	/;"	d	file:
CAP_UNFINISHED	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define CAP_UNFINISHED	/;"	d	file:
CClosure	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	.//script/lua/lua-5.3.4/src/lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CClosure::ClosureHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure	access:public
CClosure::f	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure	access:public
CClosure::upvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure	access:public
CIST_FIN	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_FIN	/;"	d
CIST_FRESH	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_FRESH	/;"	d
CIST_HOOKED	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_HOOKED	/;"	d
CIST_HOOKYIELD	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_HOOKYIELD	/;"	d
CIST_LEQ	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_LEQ	/;"	d
CIST_LUA	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_LUA	/;"	d
CIST_OAH	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_OAH	/;"	d
CIST_TAIL	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_TAIL	/;"	d
CIST_YPCALL	.//script/lua/lua-5.3.4/src/lstate.h	/^#define CIST_YPCALL	/;"	d
CLIBS	.//script/lua/lua-5.3.4/src/loadlib.c	/^static const int CLIBS = 0;$/;"	v	file:
CLIENT_EVENT_CNT	.//network/Client.h	/^const uint16_t CLIENT_EVENT_CNT = 128;$/;"	m	namespace:kit
CONNECTION_LIMIT	.//network/Server.h	/^const uint16_t CONNECTION_LIMIT = 0x7FFF;$/;"	m	namespace:kit
CREATE_ABC	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define CREATE_ABC(/;"	d
CREATE_ABx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define CREATE_ABx(/;"	d
CREATE_Ax	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define CREATE_Ax(/;"	d
CallInfo	.//script/lua/lua-5.3.4/src/lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	.//script/lua/lua-5.3.4/src/lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallInfo::__anon18::__anon19::base	.//script/lua/lua-5.3.4/src/lstate.h	/^      StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo::__anon18::__anon19	access:public
CallInfo::__anon18::__anon19::savedpc	.//script/lua/lua-5.3.4/src/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon18::__anon19	access:public
CallInfo::__anon18::__anon20::ctx	.//script/lua/lua-5.3.4/src/lstate.h	/^      lua_KContext ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon18::__anon20	access:public
CallInfo::__anon18::__anon20::k	.//script/lua/lua-5.3.4/src/lstate.h	/^      lua_KFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon18::__anon20	access:public
CallInfo::__anon18::__anon20::old_errfunc	.//script/lua/lua-5.3.4/src/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon18::__anon20	access:public
CallInfo::__anon18::c	.//script/lua/lua-5.3.4/src/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon18	typeref:struct:CallInfo::__anon18::__anon20	access:public
CallInfo::__anon18::l	.//script/lua/lua-5.3.4/src/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon18	typeref:struct:CallInfo::__anon18::__anon19	access:public
CallInfo::callstatus	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short callstatus;$/;"	m	struct:CallInfo	access:public
CallInfo::extra	.//script/lua/lua-5.3.4/src/lstate.h	/^  ptrdiff_t extra;$/;"	m	struct:CallInfo	access:public
CallInfo::func	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo	access:public
CallInfo::next	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::	access:public
CallInfo::nresults	.//script/lua/lua-5.3.4/src/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo	access:public
CallInfo::previous	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo	access:public
CallInfo::top	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo	access:public
CallInfo::u	.//script/lua/lua-5.3.4/src/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon18	access:public
CallS	.//script/lua/lua-5.3.4/src/lapi.c	/^struct CallS {  \/* data to 'f_call' *\/$/;"	s	file:
CallS::func	.//script/lua/lua-5.3.4/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:	access:public
CallS::nresults	.//script/lua/lua-5.3.4/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:	access:public
Client	.//network/platform/linux/Client_linux.cpp	/^Client::Client()$/;"	f	class:kit::Client	signature:()
Client	.//network/platform/linux/Client_linux.h	/^	Client();$/;"	p	class:kit::Client	access:public	signature:()
Client	.//network/platform/linux/Client_linux.h	/^class Client : public IClient, ThreadHandler$/;"	c	namespace:kit	inherits:IClient,ThreadHandler
Closure	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef union Closure {$/;"	u
Closure	.//script/lua/lua-5.3.4/src/lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
Closure::c	.//script/lua/lua-5.3.4/src/lobject.h	/^  CClosure c;$/;"	m	union:Closure	access:public
Closure::l	.//script/lua/lua-5.3.4/src/lobject.h	/^  LClosure l;$/;"	m	union:Closure	access:public
ClosureHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:CClosure	access:public
ClosureHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure	access:public
ClosureHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ClosureHeader /;"	d
CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCObject	access:public
CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto	access:public
CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:TString	access:public
CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table	access:public
CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata	access:public
CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^#define CommonHeader	/;"	d
CommonHeader	.//script/lua/lua-5.3.4/src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State	access:public
ConsControl	.//script/lua/lua-5.3.4/src/lparser.c	/^struct ConsControl {$/;"	s	file:
ConsControl::na	.//script/lua/lua-5.3.4/src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:	access:public
ConsControl::nh	.//script/lua/lua-5.3.4/src/lparser.c	/^  int nh;  \/* total number of 'record' elements *\/$/;"	m	struct:ConsControl	file:	access:public
ConsControl::t	.//script/lua/lua-5.3.4/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:	access:public
ConsControl::tostore	.//script/lua/lua-5.3.4/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:	access:public
ConsControl::v	.//script/lua/lua-5.3.4/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:	access:public
DBG	.//kit/Logger.h	/^#define DBG /;"	d
DCHECK	.//kit/kitsys.h	/^#define DCHECK(/;"	d
DEBUG_INPUT_SIZE	.//debug/DebugInput.h	/^#define DEBUG_INPUT_SIZE /;"	d
DEFAULT_EVNET_LENGTH	.//kit/Emitter.h	/^#define DEFAULT_EVNET_LENGTH /;"	d
DEFAULT_FRAME_RATE	.//Gear.cpp	/^#define DEFAULT_FRAME_RATE /;"	d	file:
DIGITBIT	.//script/lua/lua-5.3.4/src/lctype.h	/^#define DIGITBIT	/;"	d
DLMSG	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define DLMSG	/;"	d	file:
DPART	.//kit/kitsys.h	/^#define DPART(/;"	d
DPROTOCOLERR	.//network/netsys.h	/^const ProtocolID DPROTOCOLERR = -1;$/;"	m	namespace:kit
DSESSIONERR	.//network/netsys.h	/^const SessionID DSESSIONERR = -1;$/;"	m	namespace:kit
DSOCKERR	.//network/netsys.h	/^const SocketID DSOCKERR = -1;$/;"	m	namespace:kit
DebugCmdHandler	.//debug/DebugInput.h	/^typedef std::function<void(const std::string&)> DebugCmdHandler;$/;"	t	namespace:kit
DebugInput	.//debug/DebugInput.cpp	/^DebugInput::DebugInput()$/;"	f	class:kit::DebugInput	signature:()
DebugInput	.//debug/DebugInput.h	/^    DebugInput();$/;"	p	class:kit::DebugInput	access:public	signature:()
DebugInput	.//debug/DebugInput.h	/^class DebugInput : public Ref$/;"	c	namespace:kit	inherits:Ref
DumpBlock	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpBlock (const void *b, size_t size, DumpState *D) {$/;"	f	file:	signature:(const void *b, size_t size, DumpState *D)
DumpByte	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpByte (int y, DumpState *D) {$/;"	f	file:	signature:(int y, DumpState *D)
DumpCode	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpCode (const Proto *f, DumpState *D) {$/;"	f	file:	signature:(const Proto *f, DumpState *D)
DumpConstants	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpConstants (const Proto *f, DumpState *D) {$/;"	f	file:	signature:(const Proto *f, DumpState *D)
DumpDebug	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpDebug (const Proto *f, DumpState *D) {$/;"	f	file:	signature:(const Proto *f, DumpState *D)
DumpFunction	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpFunction (const Proto *f, TString *psource, DumpState *D) {$/;"	f	file:	signature:(const Proto *f, TString *psource, DumpState *D)
DumpFunction	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpFunction(const Proto *f, TString *psource, DumpState *D);$/;"	p	file:	signature:(const Proto *f, TString *psource, DumpState *D)
DumpHeader	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpHeader (DumpState *D) {$/;"	f	file:	signature:(DumpState *D)
DumpInt	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpInt (int x, DumpState *D) {$/;"	f	file:	signature:(int x, DumpState *D)
DumpInteger	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpInteger (lua_Integer x, DumpState *D) {$/;"	f	file:	signature:(lua_Integer x, DumpState *D)
DumpLiteral	.//script/lua/lua-5.3.4/src/ldump.c	/^#define DumpLiteral(/;"	d	file:
DumpNumber	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpNumber (lua_Number x, DumpState *D) {$/;"	f	file:	signature:(lua_Number x, DumpState *D)
DumpProtos	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpProtos (const Proto *f, DumpState *D) {$/;"	f	file:	signature:(const Proto *f, DumpState *D)
DumpState	.//script/lua/lua-5.3.4/src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon4	file:
DumpString	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpString (const TString *s, DumpState *D) {$/;"	f	file:	signature:(const TString *s, DumpState *D)
DumpUpvalues	.//script/lua/lua-5.3.4/src/ldump.c	/^static void DumpUpvalues (const Proto *f, DumpState *D) {$/;"	f	file:	signature:(const Proto *f, DumpState *D)
DumpVar	.//script/lua/lua-5.3.4/src/ldump.c	/^#define DumpVar(/;"	d	file:
DumpVector	.//script/lua/lua-5.3.4/src/ldump.c	/^#define DumpVector(/;"	d	file:
Dyndata	.//script/lua/lua-5.3.4/src/lparser.h	/^typedef struct Dyndata {$/;"	s
Dyndata	.//script/lua/lua-5.3.4/src/lparser.h	/^} Dyndata;$/;"	t	typeref:struct:Dyndata
Dyndata::__anon17::arr	.//script/lua/lua-5.3.4/src/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon17	access:public
Dyndata::__anon17::n	.//script/lua/lua-5.3.4/src/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon17	access:public
Dyndata::__anon17::size	.//script/lua/lua-5.3.4/src/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon17	access:public
Dyndata::actvar	.//script/lua/lua-5.3.4/src/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon17	access:public
Dyndata::gt	.//script/lua/lua-5.3.4/src/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata	access:public
Dyndata::label	.//script/lua/lua-5.3.4/src/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata	access:public
EMIT	.//kit/Emitter.h	/^#define EMIT(/;"	d
EMITTER	.//kit/Emitter.h	/^#define EMITTER(/;"	d
EOFMARK	.//script/lua/lua-5.3.4/src/lua.c	/^#define EOFMARK	/;"	d	file:
EOZ	.//script/lua/lua-5.3.4/src/lzio.h	/^#define EOZ	/;"	d
ERR	.//kit/Logger.h	/^#define ERR /;"	d
ERRFUNC	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define ERRFUNC	/;"	d	file:
ERRLIB	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define ERRLIB	/;"	d	file:
ERRORSTACKSIZE	.//script/lua/lua-5.3.4/src/ldo.c	/^#define ERRORSTACKSIZE	/;"	d	file:
EXTRA_STACK	.//script/lua/lua-5.3.4/src/lstate.h	/^#define EXTRA_STACK /;"	d
Emitter	.//kit/Emitter.h	/^    Emitter()$/;"	f	class:kit::Emitter	access:public	signature:()
Emitter	.//kit/Emitter.h	/^class Emitter$/;"	c	namespace:kit
Event	.//kit/Emitter.h	/^class Event : public Ref$/;"	c	namespace:kit	inherits:Ref
EventQue	.//network/Client.h	/^    typedef Queue<PollEvent, CLIENT_EVENT_CNT> EventQue;$/;"	t	class:kit::IClient	access:protected
EventQue	.//network/Server.h	/^    typedef Queue<PollEvent, SERVER_EVENT_CNT> EventQue;$/;"	t	class:kit::IServer	access:protected
FINALIZEDBIT	.//script/lua/lua-5.3.4/src/lgc.h	/^#define FINALIZEDBIT	/;"	d
FIRST_RESERVED	.//script/lua/lua-5.3.4/src/llex.h	/^#define FIRST_RESERVED	/;"	d
FLAGS	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define FLAGS	/;"	d	file:
FUNCTION	.//script/lua/lua-5.3.4/src/luac.c	/^#define FUNCTION /;"	d	file:
Ftypes	.//script/lua/lua-5.3.4/src/lstrlib.c	/^typedef union Ftypes {$/;"	u	file:
Ftypes	.//script/lua/lua-5.3.4/src/lstrlib.c	/^} Ftypes;$/;"	t	typeref:union:Ftypes	file:
Ftypes::buff	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  char buff[5 * sizeof(lua_Number)];  \/* enough for any float type *\/$/;"	m	union:Ftypes	file:	access:public
Ftypes::d	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  double d;$/;"	m	union:Ftypes	file:	access:public
Ftypes::f	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  float f;$/;"	m	union:Ftypes	file:	access:public
Ftypes::n	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  lua_Number n;$/;"	m	union:Ftypes	file:	access:public
FuncState	.//script/lua/lua-5.3.4/src/lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	.//script/lua/lua-5.3.4/src/lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
FuncState::bl	.//script/lua/lua-5.3.4/src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt	access:public
FuncState::f	.//script/lua/lua-5.3.4/src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState	access:public
FuncState::firstlocal	.//script/lua/lua-5.3.4/src/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState	access:public
FuncState::freereg	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState	access:public
FuncState::jpc	.//script/lua/lua-5.3.4/src/lparser.h	/^  int jpc;  \/* list of pending jumps to 'pc' *\/$/;"	m	struct:FuncState	access:public
FuncState::lasttarget	.//script/lua/lua-5.3.4/src/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState	access:public
FuncState::ls	.//script/lua/lua-5.3.4/src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState	access:public
FuncState::nactvar	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState	access:public
FuncState::nk	.//script/lua/lua-5.3.4/src/lparser.h	/^  int nk;  \/* number of elements in 'k' *\/$/;"	m	struct:FuncState	access:public
FuncState::nlocvars	.//script/lua/lua-5.3.4/src/lparser.h	/^  short nlocvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState	access:public
FuncState::np	.//script/lua/lua-5.3.4/src/lparser.h	/^  int np;  \/* number of elements in 'p' *\/$/;"	m	struct:FuncState	access:public
FuncState::nups	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState	access:public
FuncState::pc	.//script/lua/lua-5.3.4/src/lparser.h	/^  int pc;  \/* next position to code (equivalent to 'ncode') *\/$/;"	m	struct:FuncState	access:public
FuncState::prev	.//script/lua/lua-5.3.4/src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState	access:public
G	.//script/lua/lua-5.3.4/src/lstate.h	/^#define G(/;"	d
GCFINALIZECOST	.//script/lua/lua-5.3.4/src/lgc.c	/^#define GCFINALIZECOST	/;"	d	file:
GCObject	.//script/lua/lua-5.3.4/src/lobject.h	/^struct GCObject {$/;"	s
GCObject	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct GCObject GCObject;$/;"	t	typeref:struct:GCObject
GCObject::CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:GCObject	access:public
GCSTEPSIZE	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSTEPSIZE	/;"	d
GCSWEEPCOST	.//script/lua/lua-5.3.4/src/lgc.c	/^#define GCSWEEPCOST	/;"	d	file:
GCSWEEPMAX	.//script/lua/lua-5.3.4/src/lgc.c	/^#define GCSWEEPMAX	/;"	d	file:
GCSatomic	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSatomic	/;"	d
GCScallfin	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCScallfin	/;"	d
GCSinsideatomic	.//script/lua/lua-5.3.4/src/lgc.c	/^#define GCSinsideatomic	/;"	d	file:
GCSpause	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSpause	/;"	d
GCSpropagate	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSpropagate	/;"	d
GCSswpallgc	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSswpallgc	/;"	d
GCSswpend	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSswpend	/;"	d
GCSswpfinobj	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSswpfinobj	/;"	d
GCSswptobefnz	.//script/lua/lua-5.3.4/src/lgc.h	/^#define GCSswptobefnz	/;"	d
GCTM	.//script/lua/lua-5.3.4/src/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:	signature:(lua_State *L, int propagateerrors)
GCUnion	.//script/lua/lua-5.3.4/src/lstate.h	/^union GCUnion {$/;"	u
GCUnion::cl	.//script/lua/lua-5.3.4/src/lstate.h	/^  union Closure cl;$/;"	m	union:GCUnion	typeref:union:GCUnion::Closure	access:public
GCUnion::gc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject gc;  \/* common header *\/$/;"	m	union:GCUnion	access:public
GCUnion::h	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Table h;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Table	access:public
GCUnion::p	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Proto p;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Proto	access:public
GCUnion::th	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCUnion	typeref:struct:GCUnion::lua_State	access:public
GCUnion::ts	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct TString ts;$/;"	m	union:GCUnion	typeref:struct:GCUnion::TString	access:public
GCUnion::u	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Udata u;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Udata	access:public
GCdebt	.//script/lua/lua-5.3.4/src/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State	access:public
GCestimate	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State	access:public
GCmemtrav	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_mem GCmemtrav;  \/* memory traversed by the GC *\/$/;"	m	struct:global_State	access:public
GETARG_A	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GETARG_A(/;"	d
GETARG_Ax	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GETARG_Ax(/;"	d
GETARG_B	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GETARG_B(/;"	d
GETARG_Bx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GETARG_Bx(/;"	d
GETARG_C	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GETARG_C(/;"	d
GETARG_sBx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GETARG_sBx(/;"	d
GET_OPCODE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define GET_OPCODE(/;"	d
GMatchState	.//script/lua/lua-5.3.4/src/lstrlib.c	/^typedef struct GMatchState {$/;"	s	file:
GMatchState	.//script/lua/lua-5.3.4/src/lstrlib.c	/^} GMatchState;$/;"	t	typeref:struct:GMatchState	file:
GMatchState::lastmatch	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *lastmatch;  \/* end of last match *\/$/;"	m	struct:GMatchState	file:	access:public
GMatchState::ms	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  MatchState ms;  \/* match state *\/$/;"	m	struct:GMatchState	file:	access:public
GMatchState::p	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *p;  \/* pattern *\/$/;"	m	struct:GMatchState	file:	access:public
GMatchState::src	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *src;  \/* current position *\/$/;"	m	struct:GMatchState	file:	access:public
Gear	.//Gear.cpp	/^Gear::Gear()$/;"	f	class:kit::Gear	signature:()
Gear	.//Gear.h	/^    Gear();$/;"	p	class:kit::Gear	access:public	signature:()
Gear	.//Gear.h	/^class Gear : public Ref$/;"	c	namespace:kit	inherits:Ref
HOOKKEY	.//script/lua/lua-5.3.4/src/ldblib.c	/^static const int HOOKKEY = 0;$/;"	v	file:
Handler	.//kit/Emitter.h	/^    typedef std::function<void (const Event*)> Handler;$/;"	t	class:kit::Emitter	access:public
HandlerID	.//kit/Emitter.h	/^    typedef int HandlerID;$/;"	t	class:kit::Emitter	access:public
HandlerItem	.//kit/Emitter.h	/^    } HandlerItem;$/;"	t	class:kit::Emitter	typeref:struct:kit::Emitter::__anon1	access:public
HandlerVec	.//kit/Emitter.h	/^    typedef std::vector<HandlerItem> HandlerVec;$/;"	t	class:kit::Emitter	access:private
Header	.//script/lua/lua-5.3.4/src/lstrlib.c	/^typedef struct Header {$/;"	s	file:
Header	.//script/lua/lua-5.3.4/src/lstrlib.c	/^} Header;$/;"	t	typeref:struct:Header	file:
Header::L	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:Header	file:	access:public
Header::islittle	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int islittle;$/;"	m	struct:Header	file:	access:public
Header::maxalign	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int maxalign;$/;"	m	struct:Header	file:	access:public
IClient	.//network/Client.cpp	/^IClient::IClient()$/;"	f	class:kit::IClient	signature:()
IClient	.//network/Client.h	/^	IClient();$/;"	p	class:kit::IClient	access:public	signature:()
IClient	.//network/Client.h	/^class IClient : public Terminal$/;"	c	namespace:kit	inherits:Terminal
IMutex	.//kit/Thread.h	/^    IMutex() {}$/;"	f	class:kit::IMutex	access:public	signature:()
IMutex	.//kit/Thread.h	/^class IMutex : public Ref$/;"	c	namespace:kit	inherits:Ref
INDEXK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define INDEXK(/;"	d
INT16	.//network/Protocol.h	/^    INT16,$/;"	m	class:kit::PTType	access:private
INT32	.//network/Protocol.h	/^    INT32,$/;"	m	class:kit::PTType	access:private
INT64	.//network/Protocol.h	/^    INT64,$/;"	m	class:kit::PTType	access:private
INT8	.//network/Protocol.h	/^    INT8,$/;"	m	class:kit::PTType	access:private
IOPREF_LEN	.//script/lua/lua-5.3.4/src/liolib.c	/^#define IOPREF_LEN	/;"	d	file:
IO_INPUT	.//script/lua/lua-5.3.4/src/liolib.c	/^#define IO_INPUT	/;"	d	file:
IO_OUTPUT	.//script/lua/lua-5.3.4/src/liolib.c	/^#define IO_OUTPUT	/;"	d	file:
IO_PREFIX	.//script/lua/lua-5.3.4/src/liolib.c	/^#define IO_PREFIX	/;"	d	file:
IS	.//script/lua/lua-5.3.4/src/luac.c	/^#define IS(/;"	d	file:
ISK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define ISK(/;"	d
IServer	.//network/Server.cpp	/^IServer::IServer()$/;"	f	class:kit::IServer	signature:()
IServer	.//network/Server.h	/^	IServer();$/;"	p	class:kit::IServer	access:public	signature:()
IServer	.//network/Server.h	/^class IServer : public Terminal$/;"	c	namespace:kit	inherits:Terminal
ISockAddr	.//network/SockAddr.cpp	/^ISockAddr::ISockAddr()$/;"	f	class:kit::ISockAddr	signature:()
ISockAddr	.//network/SockAddr.h	/^    ISockAddr();$/;"	p	class:kit::ISockAddr	access:public	signature:()
ISockAddr	.//network/SockAddr.h	/^class ISockAddr : public Ref$/;"	c	namespace:kit	inherits:Ref
ISocket	.//network/Socket.cpp	/^ISocket::ISocket()$/;"	f	class:kit::ISocket	signature:()
ISocket	.//network/Socket.h	/^	ISocket();$/;"	p	class:kit::ISocket	access:public	signature:()
ISocket	.//network/Socket.h	/^class ISocket : public Ref$/;"	c	namespace:kit	inherits:Ref
IThread	.//kit/Thread.cpp	/^IThread::IThread()$/;"	f	class:kit::IThread	signature:()
IThread	.//kit/Thread.h	/^    IThread();$/;"	p	class:kit::IThread	access:public	signature:()
IThread	.//kit/Thread.h	/^class  IThread : public Ref$/;"	c	namespace:kit	inherits:Ref
IdxT	.//script/lua/lua-5.3.4/src/ltablib.c	/^typedef unsigned int IdxT;$/;"	t	file:
Instruction	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef unsigned int Instruction;$/;"	t
Instruction	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef unsigned long Instruction;$/;"	t
Item	.//base/Array.h	/^    struct Item$/;"	s	class:kit::Array	access:private
Item	.//base/List.h	/^    struct Item $/;"	s	class:kit::List	access:private
Item	.//base/Map.h	/^        Item(KeyType k, const ValueType& v, Item* n): key(k), value(v), next(n) {}$/;"	f	struct:kit::Map::Item	access:public	signature:(KeyType k, const ValueType& v, Item* n)
Item	.//base/Map.h	/^    typedef struct Item$/;"	s	class:kit::Map	access:private
ItemList	.//base/Map.h	/^    } *ItemList;$/;"	t	class:kit::Map	typeref:struct:kit::Map::Item	access:private
Iterator	.//base/Array.h	/^        Iterator(Item* array, int index) $/;"	f	class:kit::Array::Iterator	access:public	signature:(Item* array, int index)
Iterator	.//base/Array.h	/^    class Iterator$/;"	c	class:kit::Array	access:public
Iterator	.//base/List.h	/^        Iterator(Item* node) : node_(node)$/;"	f	class:kit::List::Iterator	access:public	signature:(Item* node)
Iterator	.//base/List.h	/^    class Iterator$/;"	c	class:kit::List	access:public
JSCore	.//script/js/JSCore.cpp	/^JSCore::JSCore()$/;"	f	class:JSCore	signature:()
JSCore	.//script/js/JSCore.h	/^    JSCore();$/;"	p	class:JSCore	access:public	signature:()
JSCore	.//script/js/JSCore.h	/^class JSCore : public kit::ScriptProtocol$/;"	c	inherits:kit::ScriptProtocol
JSCore::JSCore	.//script/js/JSCore.cpp	/^JSCore::JSCore()$/;"	f	class:JSCore	signature:()
JSCore::JSCore	.//script/js/JSCore.h	/^    JSCore();$/;"	p	class:JSCore	access:public	signature:()
JSCore::destroy	.//script/js/JSCore.cpp	/^void JSCore::destroy()$/;"	f	class:JSCore	signature:()
JSCore::destroy	.//script/js/JSCore.h	/^    virtual void destroy();$/;"	p	class:JSCore	access:public	signature:()
JSCore::executeFile	.//script/js/JSCore.cpp	/^int JSCore::executeFile(const char* filename)$/;"	f	class:JSCore	signature:(const char* filename)
JSCore::executeFile	.//script/js/JSCore.h	/^    virtual int executeFile(const char* filename);$/;"	p	class:JSCore	access:public	signature:(const char* filename)
JSCore::executeFunction	.//script/js/JSCore.cpp	/^int JSCore::executeFunction(const char* function_name)$/;"	f	class:JSCore	signature:(const char* function_name)
JSCore::executeFunction	.//script/js/JSCore.h	/^    virtual int executeFunction(const char* function_name);$/;"	p	class:JSCore	access:public	signature:(const char* function_name)
JSCore::executeString	.//script/js/JSCore.cpp	/^int JSCore::executeString(const char* codes)$/;"	f	class:JSCore	signature:(const char* codes)
JSCore::executeString	.//script/js/JSCore.h	/^    virtual int executeString(const char* codes);$/;"	p	class:JSCore	access:public	signature:(const char* codes)
JSCore::getScriptType	.//script/js/JSCore.h	/^    virtual ScriptType getScriptType() const { return SCRIPT_TYPE_JAVASCRIPT; }$/;"	f	class:JSCore	access:public	signature:() const
JSCore::init	.//script/js/JSCore.cpp	/^void JSCore::init()$/;"	f	class:JSCore	signature:()
JSCore::init	.//script/js/JSCore.h	/^    virtual void init();$/;"	p	class:JSCore	access:public	signature:()
JSCore::~JSCore	.//script/js/JSCore.cpp	/^JSCore::~JSCore()$/;"	f	class:JSCore	signature:()
JSCore::~JSCore	.//script/js/JSCore.h	/^    virtual ~JSCore();$/;"	p	class:JSCore	access:public	signature:()
KGC_EMERGENCY	.//script/lua/lua-5.3.4/src/lstate.h	/^#define KGC_EMERGENCY	/;"	d
KGC_NORMAL	.//script/lua/lua-5.3.4/src/lstate.h	/^#define KGC_NORMAL	/;"	d
KIT_AF_INET	.//network/netsys.h	/^#define KIT_AF_INET /;"	d
KIT_BEGIN	.//debug/debugfunc.h	/^#define KIT_BEGIN(/;"	d
KIT_CREATE_FUNC	.//kit/Buffer.h	/^    KIT_CREATE_FUNC(Buffer);$/;"	p	class:kit::Buffer	access:public	signature:(Buffer)
KIT_CREATE_FUNC	.//kit/Ref.h	/^#define KIT_CREATE_FUNC(/;"	d
KIT_CREATE_FUNC	.//network/Protocol.h	/^    KIT_CREATE_FUNC(PTVarint);$/;"	p	class:kit::PTVarint	access:public	signature:(PTVarint)
KIT_END	.//debug/debugfunc.h	/^#define KIT_END(/;"	d
KIT_POLLERR	.//network/netsys.h	/^#define KIT_POLLERR /;"	d
KIT_POLLIN	.//network/netsys.h	/^#define KIT_POLLIN /;"	d
KIT_POLLOUT	.//network/netsys.h	/^#define KIT_POLLOUT /;"	d
KIT_RUN	.//debug/debugfunc.h	/^#define KIT_RUN(/;"	d
KIT_SAFE_RELEASE	.//kit/Ref.h	/^#define KIT_SAFE_RELEASE(/;"	d
KIT_SAFE_RETAIN	.//kit/Ref.h	/^#define KIT_SAFE_RETAIN(/;"	d
KIT_SOCKERR	.//network/netsys.h	/^#define KIT_SOCKERR /;"	d
KIT_SOCK_STREAM	.//network/netsys.h	/^#define KIT_SOCK_STREAM /;"	d
KIT_WOULDBLOCK	.//network/netsys.h	/^#define KIT_WOULDBLOCK /;"	d
KOption	.//script/lua/lua-5.3.4/src/lstrlib.c	/^typedef enum KOption {$/;"	g	file:
KOption	.//script/lua/lua-5.3.4/src/lstrlib.c	/^} KOption;$/;"	t	typeref:enum:KOption	file:
Kchar	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kchar,	\/* fixed-length strings *\/$/;"	e	enum:KOption	file:
Kfloat	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kfloat,	\/* floating-point numbers *\/$/;"	e	enum:KOption	file:
Kint	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kint,		\/* signed integers *\/$/;"	e	enum:KOption	file:
Knop	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Knop		\/* no-op (configuration or spaces) *\/$/;"	e	enum:KOption	file:
Kpaddalign	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kpaddalign,	\/* padding for alignment *\/$/;"	e	enum:KOption	file:
Kpadding	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kpadding,	\/* padding *\/$/;"	e	enum:KOption	file:
Kstring	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kstring,	\/* strings with prefixed length *\/$/;"	e	enum:KOption	file:
Kuint	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kuint,	\/* unsigned integers *\/$/;"	e	enum:KOption	file:
Kzstr	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  Kzstr,	\/* zero-terminated strings *\/$/;"	e	enum:KOption	file:
L	.//script/lua/LuaCore.h	/^    lua_State* L;$/;"	m	class:LuaCore	access:private
L	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	access:public
L	.//script/lua/lua-5.3.4/src/ldump.c	/^  lua_State *L;$/;"	m	struct:__anon4	file:	access:public
L	.//script/lua/lua-5.3.4/src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State	access:public
L	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:Header	file:	access:public
L	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:	access:public
L	.//script/lua/lua-5.3.4/src/lundump.c	/^  lua_State *L;$/;"	m	struct:__anon25	file:	access:public
L	.//script/lua/lua-5.3.4/src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio	access:public
LClosure	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	.//script/lua/lua-5.3.4/src/lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LClosure::ClosureHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  ClosureHeader;$/;"	m	struct:LClosure	access:public
LClosure::p	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto	access:public
LClosure::upvals	.//script/lua/lua-5.3.4/src/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure	access:public
LEVELS1	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define LEVELS1	/;"	d	file:
LEVELS2	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define LEVELS2	/;"	d	file:
LEintfloat	.//script/lua/lua-5.3.4/src/lvm.c	/^static int LEintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:	signature:(lua_Integer i, lua_Number f)
LEnum	.//script/lua/lua-5.3.4/src/lvm.c	/^static int LEnum (const TValue *l, const TValue *r) {$/;"	f	file:	signature:(const TValue *l, const TValue *r)
LFIELDS_PER_FLUSH	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define LFIELDS_PER_FLUSH	/;"	d
LG	.//script/lua/lua-5.3.4/src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	.//script/lua/lua-5.3.4/src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LG::g	.//script/lua/lua-5.3.4/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:	access:public
LG::l	.//script/lua/lua-5.3.4/src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:	access:public
LHS_assign	.//script/lua/lua-5.3.4/src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LHS_assign::prev	.//script/lua/lua-5.3.4/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:	access:public
LHS_assign::v	.//script/lua/lua-5.3.4/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:	access:public
LIB_FAIL	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LIB_FAIL	/;"	d	file:
LIB_FAIL	.//script/lua/lua-5.3.4/src/loadlib.c	/^#undef LIB_FAIL$/;"	d	file:
LINUX_TIME_HIGH_PRECISION	.//kit/kitsys.h	/^#define LINUX_TIME_HIGH_PRECISION /;"	d
LL	.//script/lua/lua-5.3.4/src/lobject.c	/^#define LL(/;"	d	file:
LOG	.//kit/Logger.h	/^#define LOG /;"	d
LOG_TYPE_DBG	.//kit/Logger.h	/^    LOG_TYPE_DBG,   \/\/调试日志$/;"	e	enum:kit::__anon2
LOG_TYPE_ERR	.//kit/Logger.h	/^    LOG_TYPE_ERR,   \/\/错误日志$/;"	e	enum:kit::__anon2
LOG_TYPE_LOG	.//kit/Logger.h	/^    LOG_TYPE_LOG,   \/\/普通日志$/;"	e	enum:kit::__anon2
LOG_TYPE_SQL	.//kit/Logger.h	/^    LOG_TYPE_SQL,   \/\/数据库日志$/;"	e	enum:kit::__anon2
LStream	.//script/lua/lua-5.3.4/src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LTintfloat	.//script/lua/lua-5.3.4/src/lvm.c	/^static int LTintfloat (lua_Integer i, lua_Number f) {$/;"	f	file:	signature:(lua_Integer i, lua_Number f)
LTnum	.//script/lua/lua-5.3.4/src/lvm.c	/^static int LTnum (const TValue *l, const TValue *r) {$/;"	f	file:	signature:(const TValue *l, const TValue *r)
LUAC_DATA	.//script/lua/lua-5.3.4/src/lundump.h	/^#define LUAC_DATA	/;"	d
LUAC_FORMAT	.//script/lua/lua-5.3.4/src/lundump.h	/^#define LUAC_FORMAT	/;"	d
LUAC_INT	.//script/lua/lua-5.3.4/src/lundump.h	/^#define LUAC_INT	/;"	d
LUAC_NUM	.//script/lua/lua-5.3.4/src/lundump.h	/^#define LUAC_NUM	/;"	d
LUAC_VERSION	.//script/lua/lua-5.3.4/src/lundump.h	/^#define LUAC_VERSION	/;"	d
LUAI_BITSINT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_BITSINT	/;"	d
LUAI_DDEC	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_DDEC	/;"	d
LUAI_DDEF	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_DDEF	/;"	d
LUAI_FUNC	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_FUNC	/;"	d
LUAI_GCMUL	.//script/lua/lua-5.3.4/src/lstate.c	/^#define LUAI_GCMUL	/;"	d	file:
LUAI_GCPAUSE	.//script/lua/lua-5.3.4/src/lstate.c	/^#define LUAI_GCPAUSE	/;"	d	file:
LUAI_HASHLIMIT	.//script/lua/lua-5.3.4/src/lstring.c	/^#define LUAI_HASHLIMIT	/;"	d	file:
LUAI_MAXCCALLS	.//script/lua/lua-5.3.4/src/llimits.h	/^#define LUAI_MAXCCALLS	/;"	d
LUAI_MAXSHORTLEN	.//script/lua/lua-5.3.4/src/llimits.h	/^#define LUAI_MAXSHORTLEN	/;"	d
LUAI_MAXSTACK	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_MAXSTACK	/;"	d
LUAI_THROW	.//script/lua/lua-5.3.4/src/ldo.c	/^#define LUAI_THROW(/;"	d	file:
LUAI_TRY	.//script/lua/lua-5.3.4/src/ldo.c	/^#define LUAI_TRY(/;"	d	file:
LUAI_UACINT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_UACINT	/;"	d
LUAI_UACNUMBER	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAI_UACNUMBER	/;"	d
LUALIB_API	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUALIB_API	/;"	d
LUAL_BUFFERSIZE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAL_BUFFERSIZE	/;"	d
LUAL_BUFFERSIZE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAL_BUFFERSIZE /;"	d
LUAL_NUMSIZES	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUAL_NUMSIZES	/;"	d
LUAL_PACKPADBYTE	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define LUAL_PACKPADBYTE	/;"	d	file:
LUAMOD_API	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUAMOD_API	/;"	d
LUA_API	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_API	/;"	d
LUA_API	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_API /;"	d
LUA_AUTHORS	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_AUTHORS	/;"	d
LUA_BITLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_BITLIBNAME	/;"	d
LUA_C89_NUMBERS	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_C89_NUMBERS$/;"	d
LUA_CDIR	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_CDIR	/;"	d
LUA_COLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_COLIBNAME	/;"	d
LUA_COMPAT_APIINTCASTS	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_APIINTCASTS$/;"	d
LUA_COMPAT_BITLIB	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_BITLIB$/;"	d
LUA_COMPAT_IPAIRS	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_IPAIRS$/;"	d
LUA_COMPAT_LOADERS	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_LOADERS$/;"	d
LUA_COMPAT_LOADSTRING	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_LOADSTRING$/;"	d
LUA_COMPAT_LOG10	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_LOG10$/;"	d
LUA_COMPAT_MATHLIB	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_MATHLIB$/;"	d
LUA_COMPAT_MAXN	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_MAXN$/;"	d
LUA_COMPAT_MODULE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_MODULE$/;"	d
LUA_COMPAT_UNPACK	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_COMPAT_UNPACK$/;"	d
LUA_COPYRIGHT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_COPYRIGHT	/;"	d
LUA_CORE	.//script/lua/lua-5.3.4/src/lapi.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lcode.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lctype.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/ldebug.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/ldo.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/ldump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lfunc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lgc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/llex.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lmem.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lobject.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lopcodes.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lparser.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lstate.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lstring.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/ltable.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/ltm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/luac.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lundump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lvm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	.//script/lua/lua-5.3.4/src/lzio.c	/^#define LUA_CORE$/;"	d	file:
LUA_CPATH_DEFAULT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_CPATH_DEFAULT /;"	d
LUA_CPATH_VAR	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_CPATH_VAR /;"	d	file:
LUA_CSUBSEP	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_CSUBSEP	/;"	d	file:
LUA_DBLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_DBLIBNAME	/;"	d
LUA_DIRSEP	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_DIRSEP	/;"	d
LUA_DL_DLL	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_DL_DLL	/;"	d
LUA_ENV	.//script/lua/lua-5.3.4/src/llex.h	/^#define LUA_ENV	/;"	d
LUA_ERRERR	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_ERRERR	/;"	d
LUA_ERRFILE	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUA_ERRFILE /;"	d
LUA_ERRGCMM	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_ERRGCMM	/;"	d
LUA_ERRMEM	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_ERRMEM	/;"	d
LUA_ERRRUN	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_ERRRUN	/;"	d
LUA_ERRSYNTAX	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_ERRSYNTAX	/;"	d
LUA_EXEC_DIR	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_EXEC_DIR /;"	d
LUA_EXTRASPACE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_EXTRASPACE	/;"	d
LUA_FILEHANDLE	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUA_FILEHANDLE /;"	d
LUA_FLOAT_DOUBLE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_FLOAT_DOUBLE	/;"	d
LUA_FLOAT_FLOAT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_FLOAT_FLOAT	/;"	d
LUA_FLOAT_LONGDOUBLE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_FLOAT_LONGDOUBLE	/;"	d
LUA_FLOAT_TYPE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_FLOAT_TYPE	/;"	d
LUA_FLOORN2I	.//script/lua/lua-5.3.4/src/lvm.h	/^#define LUA_FLOORN2I	/;"	d
LUA_GCCOLLECT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCCOLLECT	/;"	d
LUA_GCCOUNT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCCOUNT	/;"	d
LUA_GCCOUNTB	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCCOUNTB	/;"	d
LUA_GCISRUNNING	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCISRUNNING	/;"	d
LUA_GCRESTART	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCRESTART	/;"	d
LUA_GCSETPAUSE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCSETPAUSE	/;"	d
LUA_GCSETSTEPMUL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCSETSTEPMUL	/;"	d
LUA_GCSTEP	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCSTEP	/;"	d
LUA_GCSTOP	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_GCSTOP	/;"	d
LUA_HOOKCALL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_HOOKCALL	/;"	d
LUA_HOOKCOUNT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_HOOKCOUNT	/;"	d
LUA_HOOKLINE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_HOOKLINE	/;"	d
LUA_HOOKRET	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_HOOKRET	/;"	d
LUA_HOOKTAILCALL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_HOOKTAILCALL /;"	d
LUA_IDSIZE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_IDSIZE	/;"	d
LUA_IGMARK	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_IGMARK	/;"	d	file:
LUA_INITVARVERSION	.//script/lua/lua-5.3.4/src/lua.c	/^#define LUA_INITVARVERSION	/;"	d	file:
LUA_INIT_VAR	.//script/lua/lua-5.3.4/src/lua.c	/^#define LUA_INIT_VAR	/;"	d	file:
LUA_INTEGER	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INTEGER	/;"	d
LUA_INTEGER_FMT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INTEGER_FMT	/;"	d
LUA_INTEGER_FRMLEN	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INTEGER_FRMLEN	/;"	d
LUA_INT_INT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INT_INT	/;"	d
LUA_INT_LONG	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INT_LONG	/;"	d
LUA_INT_LONGLONG	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INT_LONGLONG	/;"	d
LUA_INT_TYPE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_INT_TYPE	/;"	d
LUA_IOLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_IOLIBNAME	/;"	d
LUA_KCONTEXT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_KCONTEXT	/;"	d
LUA_KCONTEXT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#undef LUA_KCONTEXT$/;"	d
LUA_LDIR	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_LDIR	/;"	d
LUA_LIB	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/lbaselib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/lcorolib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/ldblib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/linit.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/liolib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/loslib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LLE_FLAGS	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_LLE_FLAGS	/;"	d	file:
LUA_LOADED_TABLE	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUA_LOADED_TABLE	/;"	d
LUA_LOADLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_LOADLIBNAME	/;"	d
LUA_LSUBSEP	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_LSUBSEP	/;"	d	file:
LUA_MASKCALL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_MASKCALL	/;"	d
LUA_MASKCOUNT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_MASKCOUNT	/;"	d
LUA_MASKLINE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_MASKLINE	/;"	d
LUA_MASKRET	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_MASKRET	/;"	d
LUA_MATHLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_MATHLIBNAME	/;"	d
LUA_MAXCAPTURES	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define LUA_MAXCAPTURES	/;"	d	file:
LUA_MAXINPUT	.//script/lua/lua-5.3.4/src/lua.c	/^#define LUA_MAXINPUT	/;"	d	file:
LUA_MAXINTEGER	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_MAXINTEGER	/;"	d
LUA_MINBUFFER	.//script/lua/lua-5.3.4/src/llimits.h	/^#define LUA_MINBUFFER	/;"	d
LUA_MININTEGER	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_MININTEGER	/;"	d
LUA_MINSTACK	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_MINSTACK	/;"	d
LUA_MULTRET	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_MULTRET	/;"	d
LUA_NBITS	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define LUA_NBITS	/;"	d	file:
LUA_NOREF	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUA_NOREF /;"	d
LUA_NUMBER	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_NUMBER	/;"	d
LUA_NUMBER_FMT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_NUMBER_FMT	/;"	d
LUA_NUMBER_FRMLEN	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_NUMBER_FRMLEN	/;"	d
LUA_NUMTAGS	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_NUMTAGS	/;"	d
LUA_OFSEP	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_OFSEP	/;"	d	file:
LUA_OK	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OK	/;"	d
LUA_OPADD	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPADD	/;"	d
LUA_OPBAND	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPBAND	/;"	d
LUA_OPBNOT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPBNOT	/;"	d
LUA_OPBOR	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPBOR	/;"	d
LUA_OPBXOR	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPBXOR	/;"	d
LUA_OPDIV	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPDIV	/;"	d
LUA_OPEQ	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPEQ	/;"	d
LUA_OPIDIV	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPIDIV	/;"	d
LUA_OPLE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPLE	/;"	d
LUA_OPLT	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPLT	/;"	d
LUA_OPMOD	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPMOD	/;"	d
LUA_OPMUL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPMUL	/;"	d
LUA_OPPOW	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPPOW	/;"	d
LUA_OPSHL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPSHL	/;"	d
LUA_OPSHR	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPSHR	/;"	d
LUA_OPSUB	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPSUB	/;"	d
LUA_OPUNM	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_OPUNM	/;"	d
LUA_OSLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_OSLIBNAME	/;"	d
LUA_PATH_DEFAULT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_PATH_DEFAULT /;"	d
LUA_PATH_MARK	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_PATH_MARK /;"	d
LUA_PATH_SEP	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_PATH_SEP /;"	d
LUA_PATH_VAR	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_PATH_VAR /;"	d	file:
LUA_POF	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define LUA_POF	/;"	d	file:
LUA_PRELOAD_TABLE	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUA_PRELOAD_TABLE	/;"	d
LUA_PROGNAME	.//script/lua/lua-5.3.4/src/lua.c	/^#define LUA_PROGNAME	/;"	d	file:
LUA_PROMPT	.//script/lua/lua-5.3.4/src/lua.c	/^#define LUA_PROMPT	/;"	d	file:
LUA_PROMPT2	.//script/lua/lua-5.3.4/src/lua.c	/^#define LUA_PROMPT2	/;"	d	file:
LUA_QL	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_QL(/;"	d
LUA_QS	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_QS	/;"	d
LUA_REFNIL	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define LUA_REFNIL /;"	d
LUA_REGISTRYINDEX	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_REGISTRYINDEX	/;"	d
LUA_RELEASE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_RELEASE	/;"	d
LUA_RIDX_GLOBALS	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_RIDX_GLOBALS	/;"	d
LUA_RIDX_LAST	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_RIDX_LAST	/;"	d
LUA_RIDX_MAINTHREAD	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_RIDX_MAINTHREAD	/;"	d
LUA_ROOT	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_ROOT	/;"	d
LUA_SHRDIR	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_SHRDIR	/;"	d
LUA_SIGNATURE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_SIGNATURE	/;"	d
LUA_STRFTIMEOPTIONS	.//script/lua/lua-5.3.4/src/loslib.c	/^#define LUA_STRFTIMEOPTIONS	/;"	d	file:
LUA_STRLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_STRLIBNAME	/;"	d
LUA_TABLIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_TABLIBNAME	/;"	d
LUA_TBOOLEAN	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TBOOLEAN	/;"	d
LUA_TCCL	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TCCL	/;"	d
LUA_TDEADKEY	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TDEADKEY	/;"	d
LUA_TFUNCTION	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TFUNCTION	/;"	d
LUA_TLCF	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TLCF	/;"	d
LUA_TLCL	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TLCL	/;"	d
LUA_TLIGHTUSERDATA	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TLIGHTUSERDATA	/;"	d
LUA_TLNGSTR	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TLNGSTR	/;"	d
LUA_TMPNAMBUFSIZE	.//script/lua/lua-5.3.4/src/loslib.c	/^#define LUA_TMPNAMBUFSIZE	/;"	d	file:
LUA_TMPNAMTEMPLATE	.//script/lua/lua-5.3.4/src/loslib.c	/^#define LUA_TMPNAMTEMPLATE	/;"	d	file:
LUA_TNIL	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TNIL	/;"	d
LUA_TNONE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TNONE	/;"	d
LUA_TNUMBER	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TNUMBER	/;"	d
LUA_TNUMFLT	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TNUMFLT	/;"	d
LUA_TNUMINT	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TNUMINT	/;"	d
LUA_TOTALTAGS	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TOTALTAGS	/;"	d
LUA_TPROTO	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TPROTO	/;"	d
LUA_TSHRSTR	.//script/lua/lua-5.3.4/src/lobject.h	/^#define LUA_TSHRSTR	/;"	d
LUA_TSTRING	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TSTRING	/;"	d
LUA_TTABLE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TTABLE	/;"	d
LUA_TTHREAD	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TTHREAD	/;"	d
LUA_TUSERDATA	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_TUSERDATA	/;"	d
LUA_UNSIGNED	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_UNSIGNED	/;"	d
LUA_USE_C89	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_USE_C89	/;"	d
LUA_USE_CTYPE	.//script/lua/lua-5.3.4/src/lctype.h	/^#define LUA_USE_CTYPE	/;"	d
LUA_USE_DLOPEN	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_USE_DLOPEN	/;"	d
LUA_USE_POSIX	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_USE_POSIX$/;"	d
LUA_USE_READLINE	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_USE_READLINE	/;"	d
LUA_USE_WINDOWS	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_USE_WINDOWS /;"	d
LUA_UTF8LIBNAME	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_UTF8LIBNAME	/;"	d
LUA_VDIR	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define LUA_VDIR	/;"	d
LUA_VERSION	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_VERSION	/;"	d
LUA_VERSION_MAJOR	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_VERSION_MAJOR	/;"	d
LUA_VERSION_MINOR	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_VERSION_MINOR	/;"	d
LUA_VERSION_NUM	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_VERSION_NUM	/;"	d
LUA_VERSION_RELEASE	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_VERSION_RELEASE	/;"	d
LUA_VERSUFFIX	.//script/lua/lua-5.3.4/src/lualib.h	/^#define LUA_VERSUFFIX /;"	d
LUA_YIELD	.//script/lua/lua-5.3.4/src/lua.h	/^#define LUA_YIELD	/;"	d
LX	.//script/lua/lua-5.3.4/src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	.//script/lua/lua-5.3.4/src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
LX::extra_	.//script/lua/lua-5.3.4/src/lstate.c	/^  lu_byte extra_[LUA_EXTRASPACE];$/;"	m	struct:LX	file:	access:public
LX::l	.//script/lua/lua-5.3.4/src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:	access:public
L_ESC	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define L_ESC	/;"	d	file:
L_MAXDATEFIELD	.//script/lua/lua-5.3.4/src/loslib.c	/^#define L_MAXDATEFIELD	/;"	d	file:
L_MAXLENNUM	.//script/lua/lua-5.3.4/src/liolib.c	/^#define L_MAXLENNUM /;"	d	file:
L_MAXLENNUM	.//script/lua/lua-5.3.4/src/lobject.c	/^#define L_MAXLENNUM	/;"	d	file:
L_MODEEXT	.//script/lua/lua-5.3.4/src/liolib.c	/^#define L_MODEEXT	/;"	d	file:
L_NBFD	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define L_NBFD	/;"	d	file:
L_RANDMAX	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#define L_RANDMAX	/;"	d	file:
L_STRFTIMEC89	.//script/lua/lua-5.3.4/src/loslib.c	/^#define L_STRFTIMEC89	/;"	d	file:
L_STRFTIMEC99	.//script/lua/lua-5.3.4/src/loslib.c	/^#define L_STRFTIMEC99 /;"	d	file:
L_STRFTIMEWIN	.//script/lua/lua-5.3.4/src/loslib.c	/^#define L_STRFTIMEWIN /;"	d	file:
L_Umaxalign	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t
L_Umaxalign	.//script/lua/lua-5.3.4/src/llimits.h	/^} L_Umaxalign;$/;"	t	typeref:union:__anon9
Labeldesc	.//script/lua/lua-5.3.4/src/lparser.h	/^typedef struct Labeldesc {$/;"	s
Labeldesc	.//script/lua/lua-5.3.4/src/lparser.h	/^} Labeldesc;$/;"	t	typeref:struct:Labeldesc
Labeldesc::line	.//script/lua/lua-5.3.4/src/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc	access:public
Labeldesc::nactvar	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte nactvar;  \/* local level where it appears in current block *\/$/;"	m	struct:Labeldesc	access:public
Labeldesc::name	.//script/lua/lua-5.3.4/src/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc	access:public
Labeldesc::pc	.//script/lua/lua-5.3.4/src/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc	access:public
Labellist	.//script/lua/lua-5.3.4/src/lparser.h	/^typedef struct Labellist {$/;"	s
Labellist	.//script/lua/lua-5.3.4/src/lparser.h	/^} Labellist;$/;"	t	typeref:struct:Labellist
Labellist::arr	.//script/lua/lua-5.3.4/src/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist	access:public
Labellist::n	.//script/lua/lua-5.3.4/src/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist	access:public
Labellist::size	.//script/lua/lua-5.3.4/src/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist	access:public
LexState	.//script/lua/lua-5.3.4/src/llex.h	/^typedef struct LexState {$/;"	s
LexState	.//script/lua/lua-5.3.4/src/llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LexState::L	.//script/lua/lua-5.3.4/src/llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:LexState::lua_State	access:public
LexState::buff	.//script/lua/lua-5.3.4/src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState	access:public
LexState::current	.//script/lua/lua-5.3.4/src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState	access:public
LexState::dyd	.//script/lua/lua-5.3.4/src/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata	access:public
LexState::envn	.//script/lua/lua-5.3.4/src/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState	access:public
LexState::fs	.//script/lua/lua-5.3.4/src/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState	access:public
LexState::h	.//script/lua/lua-5.3.4/src/llex.h	/^  Table *h;  \/* to avoid collection\/reuse strings *\/$/;"	m	struct:LexState	access:public
LexState::lastline	.//script/lua/lua-5.3.4/src/llex.h	/^  int lastline;  \/* line of last token 'consumed' *\/$/;"	m	struct:LexState	access:public
LexState::linenumber	.//script/lua/lua-5.3.4/src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState	access:public
LexState::lookahead	.//script/lua/lua-5.3.4/src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState	access:public
LexState::source	.//script/lua/lua-5.3.4/src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState	access:public
LexState::t	.//script/lua/lua-5.3.4/src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState	access:public
LexState::z	.//script/lua/lua-5.3.4/src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState	access:public
List	.//base/List.h	/^    List(): head_(0), tail_(0), count_(0)$/;"	f	class:kit::List	access:public	signature:()
List	.//base/List.h	/^class List$/;"	c	namespace:kit
LoadBlock	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadBlock (LoadState *S, void *b, size_t size) {$/;"	f	file:	signature:(LoadState *S, void *b, size_t size)
LoadByte	.//script/lua/lua-5.3.4/src/lundump.c	/^static lu_byte LoadByte (LoadState *S) {$/;"	f	file:	signature:(LoadState *S)
LoadCode	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadCode (LoadState *S, Proto *f) {$/;"	f	file:	signature:(LoadState *S, Proto *f)
LoadConstants	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadConstants (LoadState *S, Proto *f) {$/;"	f	file:	signature:(LoadState *S, Proto *f)
LoadDebug	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadDebug (LoadState *S, Proto *f) {$/;"	f	file:	signature:(LoadState *S, Proto *f)
LoadF	.//script/lua/lua-5.3.4/src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	.//script/lua/lua-5.3.4/src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadF::buff	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  char buff[BUFSIZ];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:	access:public
LoadF::f	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:	access:public
LoadF::n	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:	access:public
LoadFunction	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadFunction (LoadState *S, Proto *f, TString *psource) {$/;"	f	file:	signature:(LoadState *S, Proto *f, TString *psource)
LoadFunction	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadFunction(LoadState *S, Proto *f, TString *psource);$/;"	p	file:	signature:(LoadState *S, Proto *f, TString *psource)
LoadInt	.//script/lua/lua-5.3.4/src/lundump.c	/^static int LoadInt (LoadState *S) {$/;"	f	file:	signature:(LoadState *S)
LoadInteger	.//script/lua/lua-5.3.4/src/lundump.c	/^static lua_Integer LoadInteger (LoadState *S) {$/;"	f	file:	signature:(LoadState *S)
LoadNumber	.//script/lua/lua-5.3.4/src/lundump.c	/^static lua_Number LoadNumber (LoadState *S) {$/;"	f	file:	signature:(LoadState *S)
LoadProtos	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadProtos (LoadState *S, Proto *f) {$/;"	f	file:	signature:(LoadState *S, Proto *f)
LoadS	.//script/lua/lua-5.3.4/src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	.//script/lua/lua-5.3.4/src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadS::s	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:	access:public
LoadS::size	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:	access:public
LoadState	.//script/lua/lua-5.3.4/src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon25	file:
LoadString	.//script/lua/lua-5.3.4/src/lundump.c	/^static TString *LoadString (LoadState *S) {$/;"	f	file:	signature:(LoadState *S)
LoadUpvalues	.//script/lua/lua-5.3.4/src/lundump.c	/^static void LoadUpvalues (LoadState *S, Proto *f) {$/;"	f	file:	signature:(LoadState *S, Proto *f)
LoadVar	.//script/lua/lua-5.3.4/src/lundump.c	/^#define LoadVar(/;"	d	file:
LoadVector	.//script/lua/lua-5.3.4/src/lundump.c	/^#define LoadVector(/;"	d	file:
LocVar	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	.//script/lua/lua-5.3.4/src/lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
LocVar::endpc	.//script/lua/lua-5.3.4/src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar	access:public
LocVar::startpc	.//script/lua/lua-5.3.4/src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar	access:public
LocVar::varname	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar	access:public
Logger	.//kit/Logger.cpp	/^Logger::Logger()$/;"	f	class:kit::Logger	signature:()
Logger	.//kit/Logger.h	/^    Logger();$/;"	p	class:kit::Logger	access:public	signature:()
Logger	.//kit/Logger.h	/^class Logger : public Ref$/;"	c	namespace:kit	inherits:Ref
LoggerAPI	.//kit/Logger.h	/^    typedef void (Logger::* LoggerAPI)(const char* format, ...);$/;"	t	class:kit::Logger	access:public
LuaBuffer	.//script/lua/LuaBuffer.h	/^class LuaBuffer : public kit::Buffer$/;"	c	inherits:kit::Buffer
LuaBuffer::luaReadFormat	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaReadFormat(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
LuaBuffer::luaReadFormat	.//script/lua/LuaBuffer.h	/^    int32_t luaReadFormat(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
LuaBuffer::luaReadVector	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaReadVector(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
LuaBuffer::luaReadVector	.//script/lua/LuaBuffer.h	/^    int32_t luaReadVector(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
LuaBuffer::luaWriteFormat	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaWriteFormat(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
LuaBuffer::luaWriteFormat	.//script/lua/LuaBuffer.h	/^    int32_t luaWriteFormat(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
LuaBuffer::luaWriteVector	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaWriteVector(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
LuaBuffer::luaWriteVector	.//script/lua/LuaBuffer.h	/^    int32_t luaWriteVector(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
LuaCore	.//script/lua/LuaCore.cpp	/^LuaCore::LuaCore()$/;"	f	class:LuaCore	signature:()
LuaCore	.//script/lua/LuaCore.h	/^    LuaCore();$/;"	p	class:LuaCore	access:public	signature:()
LuaCore	.//script/lua/LuaCore.h	/^class LuaCore : public kit::ScriptCore$/;"	c	inherits:kit::ScriptCore
LuaCore::L	.//script/lua/LuaCore.h	/^    lua_State* L;$/;"	m	class:LuaCore	access:private
LuaCore::LuaCore	.//script/lua/LuaCore.cpp	/^LuaCore::LuaCore()$/;"	f	class:LuaCore	signature:()
LuaCore::LuaCore	.//script/lua/LuaCore.h	/^    LuaCore();$/;"	p	class:LuaCore	access:public	signature:()
LuaCore::baseInit	.//script/lua/LuaCore.cpp	/^bool LuaCore::baseInit()$/;"	f	class:LuaCore	signature:()
LuaCore::baseInit	.//script/lua/LuaCore.h	/^    virtual bool baseInit();$/;"	p	class:LuaCore	access:public	signature:()
LuaCore::destroy	.//script/lua/LuaCore.cpp	/^void LuaCore::destroy()$/;"	f	class:LuaCore	signature:()
LuaCore::destroy	.//script/lua/LuaCore.h	/^    virtual void destroy();$/;"	p	class:LuaCore	access:public	signature:()
LuaCore::executeFile	.//script/lua/LuaCore.cpp	/^int LuaCore::executeFile(const char* file_name)$/;"	f	class:LuaCore	signature:(const char* file_name)
LuaCore::executeFile	.//script/lua/LuaCore.h	/^    virtual int executeFile(const char* filename);$/;"	p	class:LuaCore	access:public	signature:(const char* filename)
LuaCore::executeFunc	.//script/lua/LuaCore.cpp	/^int LuaCore::executeFunc(int arg_num)$/;"	f	class:LuaCore	signature:(int arg_num)
LuaCore::executeFunc	.//script/lua/LuaCore.h	/^    int executeFunc(int arg_num);$/;"	p	class:LuaCore	access:protected	signature:(int arg_num)
LuaCore::executeFunction	.//script/lua/LuaCore.cpp	/^int LuaCore::executeFunction(const char* function_name)$/;"	f	class:LuaCore	signature:(const char* function_name)
LuaCore::executeFunction	.//script/lua/LuaCore.h	/^    virtual int executeFunction(const char* function_name);$/;"	p	class:LuaCore	access:public	signature:(const char* function_name)
LuaCore::executeString	.//script/lua/LuaCore.cpp	/^int LuaCore::executeString(const char* codes)$/;"	f	class:LuaCore	signature:(const char* codes)
LuaCore::executeString	.//script/lua/LuaCore.h	/^    virtual int executeString(const char* codes);$/;"	p	class:LuaCore	access:public	signature:(const char* codes)
LuaCore::getScriptType	.//script/lua/LuaCore.h	/^    virtual kit::ScriptType getScriptType() const { return kit::SCRIPT_TYPE_JAVASCRIPT; }$/;"	f	class:LuaCore	access:public	signature:() const
LuaCore::~LuaCore	.//script/lua/LuaCore.cpp	/^LuaCore::~LuaCore()$/;"	f	class:LuaCore	signature:()
LuaCore::~LuaCore	.//script/lua/LuaCore.h	/^    virtual ~LuaCore();$/;"	p	class:LuaCore	access:public	signature:()
LuaIntf	.//script/lua/LuaProtocol.h	/^namespace LuaIntf {$/;"	n
LuaPTCreator	.//script/lua/LuaProtocol.cpp	/^LuaPTCreator::LuaPTCreator()$/;"	f	class:LuaPTCreator	signature:()
LuaPTCreator	.//script/lua/LuaProtocol.h	/^    LuaPTCreator();$/;"	p	class:LuaPTCreator	access:public	signature:()
LuaPTCreator	.//script/lua/LuaProtocol.h	/^class LuaPTCreator : public kit::PTDataCreator$/;"	c	inherits:kit::PTDataCreator
LuaPTCreator::LuaPTCreator	.//script/lua/LuaProtocol.cpp	/^LuaPTCreator::LuaPTCreator()$/;"	f	class:LuaPTCreator	signature:()
LuaPTCreator::LuaPTCreator	.//script/lua/LuaProtocol.h	/^    LuaPTCreator();$/;"	p	class:LuaPTCreator	access:public	signature:()
LuaPTCreator::PTValueAPI	.//script/lua/LuaProtocol.h	/^    typedef void (LuaPTCreator::* PTValueAPI)(kit::PTData*, const LuaIntf::LuaRef*);$/;"	t	class:LuaPTCreator	access:private
LuaPTCreator::setDataValue	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::setDataValue(kit::PTData* data, const LuaIntf::LuaRef* t)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
LuaPTCreator::setDataValue	.//script/lua/LuaProtocol.h	/^    void setDataValue(kit::PTData* data, const LuaIntf::LuaRef* t);$/;"	p	class:LuaPTCreator	access:public	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
LuaPTCreator::unsArray	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::unsArray(kit::PTData* data, const LuaIntf::LuaRef* table)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
LuaPTCreator::unsArray	.//script/lua/LuaProtocol.h	/^    void unsArray(kit::PTData* data, const LuaIntf::LuaRef* table);$/;"	p	class:LuaPTCreator	access:private	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
LuaPTCreator::unsTable	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::unsTable(kit::PTData* data, const LuaIntf::LuaRef* table)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
LuaPTCreator::unsTable	.//script/lua/LuaProtocol.h	/^    void unsTable(kit::PTData* data, const LuaIntf::LuaRef* table);$/;"	p	class:LuaPTCreator	access:private	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
LuaPTCreator::unsValue	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::unsValue(kit::PTData* data, const LuaIntf::LuaRef* t)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
LuaPTCreator::unsValue	.//script/lua/LuaProtocol.h	/^    void unsValue(kit::PTData* data, const LuaIntf::LuaRef* t);$/;"	p	class:LuaPTCreator	access:private	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
LuaPTCreator::value_apis_	.//script/lua/LuaProtocol.h	/^    PTValueAPI value_apis_[toint(kit::PTType::MAX)];$/;"	m	class:LuaPTCreator	access:private
LuaPTCreator::~LuaPTCreator	.//script/lua/LuaProtocol.cpp	/^LuaPTCreator::~LuaPTCreator()$/;"	f	class:LuaPTCreator	signature:()
LuaPTCreator::~LuaPTCreator	.//script/lua/LuaProtocol.h	/^    virtual ~LuaPTCreator();$/;"	p	class:LuaPTCreator	access:public	signature:()
LuaProtocol	.//script/lua/LuaProtocol.cpp	/^LuaProtocol::LuaProtocol()$/;"	f	class:LuaProtocol	signature:()
LuaProtocol	.//script/lua/LuaProtocol.h	/^    LuaProtocol();$/;"	p	class:LuaProtocol	access:public	signature:()
LuaProtocol	.//script/lua/LuaProtocol.h	/^class LuaProtocol : public kit::Protocol$/;"	c	inherits:kit::Protocol
LuaProtocol::LuaProtocol	.//script/lua/LuaProtocol.cpp	/^LuaProtocol::LuaProtocol()$/;"	f	class:LuaProtocol	signature:()
LuaProtocol::LuaProtocol	.//script/lua/LuaProtocol.h	/^    LuaProtocol();$/;"	p	class:LuaProtocol	access:public	signature:()
LuaProtocol::baseInit	.//script/lua/LuaProtocol.cpp	/^bool LuaProtocol::baseInit()$/;"	f	class:LuaProtocol	signature:()
LuaProtocol::baseInit	.//script/lua/LuaProtocol.h	/^    virtual bool baseInit();$/;"	p	class:LuaProtocol	access:public	signature:()
LuaProtocol::buildFromTable	.//script/lua/LuaProtocol.cpp	/^void LuaProtocol::buildFromTable(lua_State* L)$/;"	f	class:LuaProtocol	signature:(lua_State* L)
LuaProtocol::buildFromTable	.//script/lua/LuaProtocol.h	/^    void buildFromTable(lua_State* L);$/;"	p	class:LuaProtocol	access:public	signature:(lua_State* L)
LuaProtocol::creator_	.//script/lua/LuaProtocol.h	/^    LuaPTCreator* creator_ = nullptr;$/;"	m	class:LuaProtocol	access:private
LuaProtocol::registerTable	.//script/lua/LuaProtocol.cpp	/^bool LuaProtocol::registerTable(kit::PTTable* p, const LuaIntf::LuaRef* table)$/;"	f	class:LuaProtocol	signature:(kit::PTTable* p, const LuaIntf::LuaRef* table)
LuaProtocol::registerTable	.//script/lua/LuaProtocol.h	/^    bool registerTable(kit::PTTable* p, const LuaIntf::LuaRef* table);$/;"	p	class:LuaProtocol	access:private	signature:(kit::PTTable* p, const LuaIntf::LuaRef* table)
LuaProtocol::serializeToTable	.//script/lua/LuaProtocol.cpp	/^int32_t LuaProtocol::serializeToTable(lua_State* L)$/;"	f	class:LuaProtocol	signature:(lua_State* L)
LuaProtocol::serializeToTable	.//script/lua/LuaProtocol.h	/^    int32_t serializeToTable(lua_State* L);$/;"	p	class:LuaProtocol	access:public	signature:(lua_State* L)
LuaProtocol::unserializeFromTable	.//script/lua/LuaProtocol.cpp	/^void LuaProtocol::unserializeFromTable(lua_State* L)$/;"	f	class:LuaProtocol	signature:(lua_State* L)
LuaProtocol::unserializeFromTable	.//script/lua/LuaProtocol.h	/^    void unserializeFromTable(lua_State* L);$/;"	p	class:LuaProtocol	access:public	signature:(lua_State* L)
LuaProtocol::~LuaProtocol	.//script/lua/LuaProtocol.cpp	/^LuaProtocol::~LuaProtocol()$/;"	f	class:LuaProtocol	signature:()
LuaProtocol::~LuaProtocol	.//script/lua/LuaProtocol.h	/^    virtual ~LuaProtocol();$/;"	p	class:LuaProtocol	access:public	signature:()
MASK	.//script/lua/lua-5.3.4/src/lctype.h	/^#define MASK(/;"	d
MASK0	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MASK0(/;"	d
MASK1	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MASK1(/;"	d
MAX	.//network/Protocol.h	/^    MAX,$/;"	m	class:kit::PTType	access:private
MAXABITS	.//script/lua/lua-5.3.4/src/ltable.c	/^#define MAXABITS	/;"	d	file:
MAXALIGN	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAXALIGN	/;"	d	file:
MAXARGLINE	.//script/lua/lua-5.3.4/src/liolib.c	/^#define MAXARGLINE	/;"	d	file:
MAXARG_A	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXARG_A /;"	d
MAXARG_Ax	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXARG_Ax	/;"	d
MAXARG_B	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXARG_B /;"	d
MAXARG_Bx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXARG_Bx /;"	d
MAXARG_C	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXARG_C /;"	d
MAXARG_sBx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXARG_sBx /;"	d
MAXASIZE	.//script/lua/lua-5.3.4/src/ltable.c	/^#define MAXASIZE	/;"	d	file:
MAXBY10	.//script/lua/lua-5.3.4/src/lobject.c	/^#define MAXBY10	/;"	d	file:
MAXCCALLS	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAXCCALLS	/;"	d	file:
MAXHBITS	.//script/lua/lua-5.3.4/src/ltable.c	/^#define MAXHBITS	/;"	d	file:
MAXINDEXRK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define MAXINDEXRK	/;"	d
MAXINTSIZE	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAXINTSIZE	/;"	d	file:
MAXLASTD	.//script/lua/lua-5.3.4/src/lobject.c	/^#define MAXLASTD	/;"	d	file:
MAXNUMBER2STR	.//script/lua/lua-5.3.4/src/lobject.c	/^#define MAXNUMBER2STR	/;"	d	file:
MAXREGS	.//script/lua/lua-5.3.4/src/lcode.c	/^#define MAXREGS	/;"	d	file:
MAXSIGDIG	.//script/lua/lua-5.3.4/src/lobject.c	/^#define MAXSIGDIG	/;"	d	file:
MAXSIZE	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAXSIZE /;"	d	file:
MAXTAGLOOP	.//script/lua/lua-5.3.4/src/lvm.c	/^#define MAXTAGLOOP	/;"	d	file:
MAXUNICODE	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^#define MAXUNICODE	/;"	d	file:
MAXUPVAL	.//script/lua/lua-5.3.4/src/lfunc.h	/^#define MAXUPVAL	/;"	d
MAXVARS	.//script/lua/lua-5.3.4/src/lparser.c	/^#define MAXVARS	/;"	d	file:
MAX_FORMAT	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAX_FORMAT	/;"	d	file:
MAX_INT	.//script/lua/lua-5.3.4/src/llimits.h	/^#define MAX_INT	/;"	d
MAX_ITEM	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAX_ITEM /;"	d	file:
MAX_LISTEN	.//network/Client.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
MAX_LISTEN	.//network/Server.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
MAX_LISTEN	.//network/platform/linux/Client_linux.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
MAX_LISTEN	.//network/platform/linux/Server_linux.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
MAX_LISTEN	.//network/platform/win/Server.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
MAX_LMEM	.//script/lua/lua-5.3.4/src/llimits.h	/^#define MAX_LMEM	/;"	d
MAX_LOG_BUFFER_LEN	.//kit/Logger.h	/^const int MAX_LOG_BUFFER_LEN = 1024 * 16;$/;"	m	namespace:kit
MAX_LOG_TYPE	.//kit/Logger.h	/^    MAX_LOG_TYPE,$/;"	e	enum:kit::__anon2
MAX_LUMEM	.//script/lua/lua-5.3.4/src/llimits.h	/^#define MAX_LUMEM	/;"	d
MAX_SIZE	.//script/lua/lua-5.3.4/src/llimits.h	/^#define MAX_SIZE	/;"	d
MAX_SIZET	.//script/lua/lua-5.3.4/src/llimits.h	/^#define MAX_SIZET	/;"	d
MAX_SIZET	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MAX_SIZET	/;"	d	file:
MC	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define MC	/;"	d	file:
MEMERRMSG	.//script/lua/lua-5.3.4/src/lstring.c	/^#define MEMERRMSG /;"	d	file:
MINSIZEARRAY	.//script/lua/lua-5.3.4/src/lmem.c	/^#define MINSIZEARRAY	/;"	d	file:
MINSTRTABSIZE	.//script/lua/lua-5.3.4/src/llimits.h	/^#define MINSTRTABSIZE	/;"	d
MYINT	.//script/lua/lua-5.3.4/src/lundump.h	/^#define MYINT(/;"	d
MYK	.//script/lua/lua-5.3.4/src/luac.c	/^#define MYK(/;"	d	file:
Map	.//base/Map.h	/^    Map()$/;"	f	class:kit::Map	access:public	signature:()
Map	.//base/Map.h	/^class Map$/;"	c	namespace:kit
MatchState	.//script/lua/lua-5.3.4/src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	.//script/lua/lua-5.3.4/src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MatchState::L	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:	access:public
MatchState::__anon21::init	.//script/lua/lua-5.3.4/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon21	file:	access:public
MatchState::__anon21::len	.//script/lua/lua-5.3.4/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon21	file:	access:public
MatchState::capture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon21	file:	access:public
MatchState::level	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  unsigned char level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:	access:public
MatchState::matchdepth	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:	access:public
MatchState::p_end	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:	access:public
MatchState::src_end	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:	access:public
MatchState::src_init	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:	access:public
MaxQueue	.//base/Queue.h	/^class MaxQueue : public MinQueue<Type, Length>$/;"	c	namespace:kit	inherits:MinQueue
Mbuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
Mbuffer::buffer	.//script/lua/lua-5.3.4/src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer	access:public
Mbuffer::buffsize	.//script/lua/lua-5.3.4/src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer	access:public
Mbuffer::n	.//script/lua/lua-5.3.4/src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer	access:public
MinQueue	.//base/Queue.h	/^    MinQueue(): count_(0)$/;"	f	class:kit::MinQueue	access:public	signature:()
MinQueue	.//base/Queue.h	/^class MinQueue$/;"	c	namespace:kit
Mutex	.//kit/platform/linux/Thread_linux.cpp	/^Mutex::Mutex()$/;"	f	class:kit::Mutex	signature:()
Mutex	.//kit/platform/linux/Thread_linux.h	/^    Mutex();$/;"	p	class:kit::Mutex	access:public	signature:()
Mutex	.//kit/platform/linux/Thread_linux.h	/^class Mutex : public IMutex$/;"	c	namespace:kit	inherits:IMutex
NB	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define NB	/;"	d	file:
NBITS	.//script/lua/lua-5.3.4/src/lvm.c	/^#define NBITS	/;"	d	file:
NBM	.//script/lua/lua-5.3.4/src/lvm.c	/^#define NBM	/;"	d	file:
NILCONSTANT	.//script/lua/lua-5.3.4/src/lobject.h	/^#define NILCONSTANT	/;"	d
NONE	.//network/Protocol.h	/^    NONE,$/;"	m	class:kit::PTType	access:private
NONVALIDVALUE	.//script/lua/lua-5.3.4/src/lapi.c	/^#define NONVALIDVALUE	/;"	d	file:
NO_JUMP	.//script/lua/lua-5.3.4/src/lcode.h	/^#define NO_JUMP /;"	d
NO_REG	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define NO_REG	/;"	d
NULL	.//kit/kitsys.h	/^#define NULL /;"	d
NUM_OPCODES	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define NUM_OPCODES	/;"	d
NUM_RESERVED	.//script/lua/lua-5.3.4/src/llex.h	/^#define NUM_RESERVED	/;"	d
Node	.//kit/Timer.h	/^    Node(uint32_t _id, uint32_t _delay, uint32_t _cycle = 0)$/;"	f	struct:kit::Timer::Node	access:public	signature:(uint32_t _id, uint32_t _delay, uint32_t _cycle = 0)
Node	.//kit/Timer.h	/^struct Node $/;"	s	class:kit::Timer	access:private
Node	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct Node {$/;"	s
Node	.//script/lua/lua-5.3.4/src/lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Node::i_key	.//script/lua/lua-5.3.4/src/lobject.h	/^  TKey i_key;$/;"	m	struct:Node	access:public
Node::i_val	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue i_val;$/;"	m	struct:Node	access:public
OPR_ADD	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_AND	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_BAND	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BNOT	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_BOR	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_BXOR	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_BAND, OPR_BOR, OPR_BXOR,$/;"	e	enum:BinOpr
OPR_CONCAT	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr
OPR_DIV	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_DIV,$/;"	e	enum:BinOpr
OPR_EQ	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_GE	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_GT	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_IDIV	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_IDIV,$/;"	e	enum:BinOpr
OPR_LE	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_LEN	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_LT	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_EQ, OPR_LT, OPR_LE,$/;"	e	enum:BinOpr
OPR_MINUS	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_MOD	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_MUL	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_NE	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_NE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr
OPR_NOBINOPR	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr
OPR_NOT	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_NOUNOPR	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr
OPR_OR	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr
OPR_POW	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OPR_SHL	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SHR	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_SHL, OPR_SHR,$/;"	e	enum:BinOpr
OPR_SUB	.//script/lua/lua-5.3.4/src/lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr
OP_ADD	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon12
OP_BAND	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_BAND,\/*	A B C	R(A) := RK(B) & RK(C)				*\/$/;"	e	enum:__anon12
OP_BNOT	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_BNOT,\/*	A B	R(A) := ~R(B)					*\/$/;"	e	enum:__anon12
OP_BOR	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_BOR,\/*	A B C	R(A) := RK(B) | RK(C)				*\/$/;"	e	enum:__anon12
OP_BXOR	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_BXOR,\/*	A B C	R(A) := RK(B) ~ RK(C)				*\/$/;"	e	enum:__anon12
OP_CALL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon12
OP_CLOSURE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx])			*\/$/;"	e	enum:__anon12
OP_CONCAT	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon12
OP_DIV	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon12
OP_EQ	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon12
OP_EXTRAARG	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_EXTRAARG\/*	Ax	extra (larger) argument for previous opcode	*\/$/;"	e	enum:__anon12
OP_FORLOOP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon12
OP_FORPREP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon12
OP_GETTABLE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon12
OP_GETTABUP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_GETTABUP,\/*	A B C	R(A) := UpValue[B][RK(C)]			*\/$/;"	e	enum:__anon12
OP_GETUPVAL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon12
OP_IDIV	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_IDIV,\/*	A B C	R(A) := RK(B) \/\/ RK(C)				*\/$/;"	e	enum:__anon12
OP_JMP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_JMP,\/*	A sBx	pc+=sBx; if (A) close all upvalues >= R(A - 1)	*\/$/;"	e	enum:__anon12
OP_LE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon12
OP_LEN	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon12
OP_LOADBOOL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon12
OP_LOADK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon12
OP_LOADKX	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LOADKX,\/*	A 	R(A) := Kst(extra arg)				*\/$/;"	e	enum:__anon12
OP_LOADNIL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A), R(A+1), ..., R(A+B) := nil		*\/$/;"	e	enum:__anon12
OP_LT	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon12
OP_MOD	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon12
OP_MOVE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon12
OP_MUL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon12
OP_NEWTABLE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon12
OP_NOT	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon12
OP_POW	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon12
OP_RETURN	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon12
OP_SELF	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon12
OP_SETLIST	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon12
OP_SETTABLE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon12
OP_SETTABUP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SETTABUP,\/*	A B C	UpValue[A][RK(B)] := RK(C)			*\/$/;"	e	enum:__anon12
OP_SETUPVAL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon12
OP_SHL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SHL,\/*	A B C	R(A) := RK(B) << RK(C)				*\/$/;"	e	enum:__anon12
OP_SHR	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SHR,\/*	A B C	R(A) := RK(B) >> RK(C)				*\/$/;"	e	enum:__anon12
OP_SUB	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon12
OP_TAILCALL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon12
OP_TEST	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/$/;"	e	enum:__anon12
OP_TESTSET	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/$/;"	e	enum:__anon12
OP_TFORCALL	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_TFORCALL,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2));	*\/$/;"	e	enum:__anon12
OP_TFORLOOP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_TFORLOOP,\/*	A sBx	if R(A+1) ~= nil then { R(A)=R(A+1); pc += sBx }*\/$/;"	e	enum:__anon12
OP_UNM	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon12
OP_VARARG	.//script/lua/lua-5.3.4/src/lopcodes.h	/^OP_VARARG,\/*	A B	R(A), R(A+1), ..., R(A+B-2) = vararg		*\/$/;"	e	enum:__anon12
OUTPUT	.//script/lua/lua-5.3.4/src/luac.c	/^#define OUTPUT	/;"	d	file:
OpArgK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask
OpArgMask	.//script/lua/lua-5.3.4/src/lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	.//script/lua/lua-5.3.4/src/lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask
OpArgR	.//script/lua/lua-5.3.4/src/lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask
OpArgU	.//script/lua/lua-5.3.4/src/lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask
OpCode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon12
OpMode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	g
Output	.//script/lua/lua-5.3.4/src/luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	file:
PACKET_HEADER_SIZE	.//network/Packet.h	/^const uint32_t PACKET_HEADER_SIZE = sizeof(PacketHeader);$/;"	m	namespace:kit
PACKET_MAX_SIZE	.//network/Packet.h	/^const uint32_t PACKET_MAX_SIZE = 0xFFFF;$/;"	m	namespace:kit
PACKET_QUEUE_LENGTH	.//network/Socket.h	/^#define PACKET_QUEUE_LENGTH /;"	d
PACKET_SIZE	.//network/netsys.h	/^const uint32_t PACKET_SIZE = 512;$/;"	m	namespace:kit
PAUSEADJ	.//script/lua/lua-5.3.4/src/lgc.c	/^#define PAUSEADJ	/;"	d	file:
PI	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#define PI	/;"	d	file:
PI	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#undef PI$/;"	d	file:
PIDNULL	.//network/netsys.h	/^const ProtocolID PIDNULL = 0;$/;"	m	namespace:kit
POS	.//script/lua/lua-5.3.4/src/lobject.c	/^#define POS	/;"	d	file:
POS_A	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define POS_A	/;"	d
POS_Ax	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define POS_Ax	/;"	d
POS_B	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define POS_B	/;"	d
POS_Bx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define POS_Bx	/;"	d
POS_C	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define POS_C	/;"	d
POS_OP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define POS_OP	/;"	d
PRE	.//script/lua/lua-5.3.4/src/lobject.c	/^#define PRE	/;"	d	file:
PRINTBIT	.//script/lua/lua-5.3.4/src/lctype.h	/^#define PRINTBIT	/;"	d
PROGNAME	.//script/lua/lua-5.3.4/src/luac.c	/^#define PROGNAME	/;"	d	file:
PROTOCOL_LENGTH	.//network/Terminal.h	/^#define PROTOCOL_LENGTH /;"	d
PTArray	.//network/Protocol.cpp	/^PTArray::PTArray()$/;"	f	class:kit::PTArray	signature:()
PTArray	.//network/Protocol.h	/^    PTArray();$/;"	p	class:kit::PTArray	access:public	signature:()
PTArray	.//network/Protocol.h	/^class PTArray : public PTData$/;"	c	namespace:kit	inherits:PTData
PTData	.//network/Protocol.h	/^class PTData : public Ref$/;"	c	namespace:kit	inherits:Ref
PTDataAPI	.//network/Protocol.h	/^    typedef PTData* (PTDataCreator::* PTDataAPI)();$/;"	t	class:kit::PTDataCreator	access:private
PTDataCreator	.//network/Protocol.cpp	/^PTDataCreator::PTDataCreator()$/;"	f	class:kit::PTDataCreator	signature:()
PTDataCreator	.//network/Protocol.h	/^    PTDataCreator();$/;"	p	class:kit::PTDataCreator	access:public	signature:()
PTDataCreator	.//network/Protocol.h	/^class PTDataCreator : public Ref$/;"	c	namespace:kit	inherits:Ref
PTDataVec	.//network/Protocol.h	/^typedef std::vector<PTData*> PTDataVec;$/;"	t	namespace:kit
PTTable	.//network/Protocol.h	/^class PTTable : public PTData$/;"	c	namespace:kit	inherits:PTData
PTType	.//network/Protocol.h	/^enum class PTType : uint8_t$/;"	c	namespace:kit	inherits:uint8_t
PTValue	.//network/Protocol.h	/^class PTValue : public PTData$/;"	c	namespace:kit	inherits:PTData
PTValueAPI	.//script/lua/LuaProtocol.h	/^    typedef void (LuaPTCreator::* PTValueAPI)(kit::PTData*, const LuaIntf::LuaRef*);$/;"	t	class:LuaPTCreator	access:private
PTVarint	.//network/Protocol.h	/^class PTVarint : public PTValue<uint32_t>$/;"	c	namespace:kit	inherits:PTValue
PT_CONNECT	.//network/msg.h	/^const uint16_t PT_CONNECT = 1;  \/\/ 每个client连接上了$/;"	m	namespace:kit
PT_KEEP_ALIVE	.//network/msg.h	/^const uint16_t PT_KEEP_ALIVE = 2; \/\/ 心跳包$/;"	m	namespace:kit
PT_PACKET_ID_MAX	.//network/msg.h	/^const uint16_t PT_PACKET_ID_MAX = 0xFFFF;$/;"	m	namespace:kit
Packet	.//network/Packet.cpp	/^Packet::Packet()$/;"	f	class:kit::Packet	signature:()
Packet	.//network/Packet.h	/^    Packet();$/;"	p	class:kit::Packet	access:public	signature:()
Packet	.//network/Packet.h	/^class Packet : public Ref$/;"	c	namespace:kit	inherits:Ref
PacketHeader	.//network/Packet.h	/^struct PacketHeader$/;"	s	namespace:kit
PacketQue	.//network/Socket.h	/^typedef QList<Packet*, PACKET_QUEUE_LENGTH> PacketQue;$/;"	t	namespace:kit
Pfunc	.//script/lua/lua-5.3.4/src/ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t
PollEvent	.//network/netsys.h	/^struct PollEvent {$/;"	s	namespace:kit
PoolVec	.//kit/RefPool.h	/^    typedef std::vector<RefPool*> PoolVec;$/;"	t	class:kit::RefPoolManager	access:private
PrintCode	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintCode(const Proto* f)$/;"	f	file:	signature:(const Proto* f)
PrintConstant	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	file:	signature:(const Proto* f, int i)
PrintDebug	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintDebug(const Proto* f)$/;"	f	file:	signature:(const Proto* f)
PrintFunction	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintFunction(const Proto* f, int full)$/;"	f	file:	signature:(const Proto* f, int full)
PrintFunction	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintFunction(const Proto* f, int full);$/;"	p	file:	signature:(const Proto* f, int full)
PrintHeader	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintHeader(const Proto* f)$/;"	f	file:	signature:(const Proto* f)
PrintString	.//script/lua/lua-5.3.4/src/luac.c	/^static void PrintString(const TString* ts)$/;"	f	file:	signature:(const TString* ts)
Protect	.//script/lua/lua-5.3.4/src/lvm.c	/^#define Protect(/;"	d	file:
Proto	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct Proto {$/;"	s
Proto	.//script/lua/lua-5.3.4/src/lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
Proto::CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Proto	access:public
Proto::cache	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct LClosure *cache;  \/* last-created closure with this prototype *\/$/;"	m	struct:Proto	typeref:struct:Proto::LClosure	access:public
Proto::code	.//script/lua/lua-5.3.4/src/lobject.h	/^  Instruction *code;  \/* opcodes *\/$/;"	m	struct:Proto	access:public
Proto::gclist	.//script/lua/lua-5.3.4/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto	access:public
Proto::is_vararg	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto	access:public
Proto::k	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto	access:public
Proto::lastlinedefined	.//script/lua/lua-5.3.4/src/lobject.h	/^  int lastlinedefined;  \/* debug information  *\/$/;"	m	struct:Proto	access:public
Proto::linedefined	.//script/lua/lua-5.3.4/src/lobject.h	/^  int linedefined;  \/* debug information  *\/$/;"	m	struct:Proto	access:public
Proto::lineinfo	.//script/lua/lua-5.3.4/src/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines (debug information) *\/$/;"	m	struct:Proto	access:public
Proto::locvars	.//script/lua/lua-5.3.4/src/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto	access:public
Proto::maxstacksize	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte maxstacksize;  \/* number of registers needed by this function *\/$/;"	m	struct:Proto	access:public
Proto::numparams	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte numparams;  \/* number of fixed parameters *\/$/;"	m	struct:Proto	access:public
Proto::p	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto	access:public
Proto::sizecode	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto	access:public
Proto::sizek	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizek;  \/* size of 'k' *\/$/;"	m	struct:Proto	access:public
Proto::sizelineinfo	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto	access:public
Proto::sizelocvars	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto	access:public
Proto::sizep	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizep;  \/* size of 'p' *\/$/;"	m	struct:Proto	access:public
Proto::sizeupvalues	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto	access:public
Proto::source	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto	access:public
Proto::upvalues	.//script/lua/lua-5.3.4/src/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto	access:public
Protocol	.//network/Protocol.cpp	/^Protocol::Protocol()$/;"	f	class:kit::Protocol	signature:()
Protocol	.//network/Protocol.h	/^    Protocol();$/;"	p	class:kit::Protocol	access:public	signature:()
Protocol	.//network/Protocol.h	/^class Protocol : public PTTable$/;"	c	namespace:kit	inherits:PTTable
ProtocolID	.//network/netsys.h	/^typedef int32_t ProtocolID;$/;"	t	namespace:kit
ProtocolMap	.//network/Terminal.h	/^    typedef Map<ProtocolID, Protocol*, PROTOCOL_LENGTH> ProtocolMap;$/;"	t	class:kit::Terminal	access:protected
QList	.//base/QList.h	/^    QList(): count_(0)$/;"	f	class:kit::QList	access:public	signature:()
QList	.//base/QList.h	/^class QList$/;"	c	namespace:kit
Queue	.//base/Queue.h	/^    Queue(): count_(0), head_(0), tail_(0)$/;"	f	class:kit::Queue	access:public	signature:()
Queue	.//base/Queue.h	/^class Queue$/;"	c	namespace:kit
RA	.//script/lua/lua-5.3.4/src/lvm.c	/^#define RA(/;"	d	file:
RANLIMIT	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define RANLIMIT	/;"	d	file:
RB	.//script/lua/lua-5.3.4/src/lvm.c	/^#define RB(/;"	d	file:
RC	.//script/lua/lua-5.3.4/src/lvm.c	/^#define RC(/;"	d	file:
RESERVED	.//script/lua/lua-5.3.4/src/llex.h	/^enum RESERVED {$/;"	g
RESERVEDSLOT	.//script/lua/lua-5.3.4/src/lbaselib.c	/^#define RESERVEDSLOT	/;"	d	file:
RETS	.//script/lua/lua-5.3.4/src/lobject.c	/^#define RETS	/;"	d	file:
RKASK	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define RKASK(/;"	d
RKB	.//script/lua/lua-5.3.4/src/lvm.c	/^#define RKB(/;"	d	file:
RKC	.//script/lua/lua-5.3.4/src/lvm.c	/^#define RKC(/;"	d	file:
RN	.//script/lua/lua-5.3.4/src/liolib.c	/^} RN;$/;"	t	typeref:struct:__anon7	file:
Ref	.//kit/Ref.cpp	/^Ref::Ref()$/;"	f	class:kit::Ref	signature:()
Ref	.//kit/Ref.h	/^    Ref();$/;"	p	class:kit::Ref	access:protected	signature:()
Ref	.//kit/Ref.h	/^class Ref$/;"	c	namespace:kit
RefPool	.//kit/RefPool.cpp	/^RefPool::RefPool()$/;"	f	class:kit::RefPool	signature:()
RefPool	.//kit/RefPool.h	/^    RefPool();$/;"	p	class:kit::RefPool	access:public	signature:()
RefPool	.//kit/RefPool.h	/^class RefPool : public Ref$/;"	c	namespace:kit	inherits:Ref
RefPoolManager	.//kit/RefPool.cpp	/^RefPoolManager::RefPoolManager()$/;"	f	class:kit::RefPoolManager	signature:()
RefPoolManager	.//kit/RefPool.h	/^    RefPoolManager();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
RefPoolManager	.//kit/RefPool.h	/^class RefPoolManager : public Ref$/;"	c	namespace:kit	inherits:Ref
RefVec	.//kit/Ref.h	/^    typedef std::vector<Ref*> RefVec;$/;"	t	class:kit::Ref	access:private
RefVec	.//kit/RefPool.h	/^    typedef std::vector<Ref*> RefVec;$/;"	t	class:kit::RefPool	access:private
S	.//script/lua/lua-5.3.4/src/luac.c	/^#define S(/;"	d	file:
SCRIPT_TYPE_JAVASCRIPT	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_JAVASCRIPT,$/;"	e	enum:kit::ScriptType
SCRIPT_TYPE_LUA	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_LUA,$/;"	e	enum:kit::ScriptType
SCRIPT_TYPE_MAX	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_MAX,$/;"	e	enum:kit::ScriptType
SCRIPT_TYPE_NONE	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_NONE = 0,$/;"	e	enum:kit::ScriptType
SCRIPT_TYPE_PYTHON	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_PYTHON,$/;"	e	enum:kit::ScriptType
SENDER_EMIT	.//kit/Emitter.h	/^#define SENDER_EMIT(/;"	d
SERVER_EVENT_CNT	.//network/Server.h	/^const uint16_t SERVER_EVENT_CNT = 512;$/;"	m	namespace:kit
SESSION_LENGTH	.//network/Terminal.h	/^#define SESSION_LENGTH /;"	d
SETARG_A	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SETARG_A(/;"	d
SETARG_Ax	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SETARG_Ax(/;"	d
SETARG_B	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SETARG_B(/;"	d
SETARG_Bx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SETARG_Bx(/;"	d
SETARG_C	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SETARG_C(/;"	d
SETARG_sBx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SETARG_sBx(/;"	d
SET_OPCODE	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SET_OPCODE(/;"	d
SIDNULL	.//network/netsys.h	/^const SessionID SIDNULL = 0;$/;"	m	namespace:kit
SIZELENMOD	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define SIZELENMOD	/;"	d	file:
SIZETIMEFMT	.//script/lua/lua-5.3.4/src/loslib.c	/^#define SIZETIMEFMT	/;"	d	file:
SIZE_A	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SIZE_A	/;"	d
SIZE_Ax	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SIZE_Ax	/;"	d
SIZE_B	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SIZE_B	/;"	d
SIZE_Bx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SIZE_Bx	/;"	d
SIZE_C	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SIZE_C	/;"	d
SIZE_OP	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define SIZE_OP	/;"	d
SLOT	.//kit/Emitter.h	/^#define SLOT(/;"	d
SLOT_ONCE	.//kit/Emitter.h	/^#define SLOT_ONCE(/;"	d
SPACEBIT	.//script/lua/lua-5.3.4/src/lctype.h	/^#define SPACEBIT	/;"	d
SPACECHARS	.//script/lua/lua-5.3.4/src/lbaselib.c	/^#define SPACECHARS	/;"	d	file:
SPECIALS	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define SPECIALS	/;"	d	file:
SParser	.//script/lua/lua-5.3.4/src/ldo.c	/^struct SParser {  \/* data to 'f_parser' *\/$/;"	s	file:
SParser::buff	.//script/lua/lua-5.3.4/src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:	access:public
SParser::dyd	.//script/lua/lua-5.3.4/src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:	access:public
SParser::mode	.//script/lua/lua-5.3.4/src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:	access:public
SParser::name	.//script/lua/lua-5.3.4/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:	access:public
SParser::z	.//script/lua/lua-5.3.4/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:	access:public
SQL	.//kit/Logger.h	/^#define SQL /;"	d
SS	.//script/lua/lua-5.3.4/src/luac.c	/^#define SS(/;"	d	file:
STEPMULADJ	.//script/lua/lua-5.3.4/src/lgc.c	/^#define STEPMULADJ	/;"	d	file:
STRCACHE_M	.//script/lua/lua-5.3.4/src/llimits.h	/^#define STRCACHE_M	/;"	d
STRCACHE_N	.//script/lua/lua-5.3.4/src/llimits.h	/^#define STRCACHE_N	/;"	d
STRING	.//network/Protocol.h	/^    STRING,$/;"	m	class:kit::PTType	access:private
SZINT	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define SZINT	/;"	d	file:
ScriptCore	.//script/ScriptSupport.h	/^    ScriptCore() {}$/;"	f	class:kit::ScriptCore	access:public	signature:()
ScriptCore	.//script/ScriptSupport.h	/^class ScriptCore : public Ref$/;"	c	namespace:kit	inherits:Ref
ScriptManager	.//script/ScriptSupport.cpp	/^ScriptManager::ScriptManager()$/;"	f	class:kit::ScriptManager	signature:()
ScriptManager	.//script/ScriptSupport.h	/^    ScriptManager();$/;"	p	class:kit::ScriptManager	access:public	signature:()
ScriptManager	.//script/ScriptSupport.h	/^class ScriptManager$/;"	c	namespace:kit
ScriptType	.//script/ScriptSupport.h	/^enum ScriptType {$/;"	g	namespace:kit
SemInfo	.//script/lua/lua-5.3.4/src/llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anon8
Server	.//network/platform/linux/Server_linux.cpp	/^Server::Server()$/;"	f	class:kit::Server	signature:()
Server	.//network/platform/linux/Server_linux.h	/^	Server();$/;"	p	class:kit::Server	access:public	signature:()
Server	.//network/platform/linux/Server_linux.h	/^class Server : public IServer, public ThreadHandler$/;"	c	namespace:kit	inherits:IServer,ThreadHandler
Server	.//network/platform/win/Server.cpp	/^Server::Server()$/;"	f	class:kit::Server	signature:()
Session	.//network/Session.cpp	/^Session::Session()$/;"	f	class:kit::Session	signature:()
Session	.//network/Session.h	/^    Session();$/;"	p	class:kit::Session	access:public	signature:()
Session	.//network/Session.h	/^class Session : public Ref$/;"	c	namespace:kit	inherits:Ref
SessionID	.//network/netsys.h	/^typedef int32_t SessionID;$/;"	t	namespace:kit
SessionMap	.//network/Terminal.h	/^    typedef Map<SessionID, Session*, SESSION_LENGTH> SessionMap;$/;"	t	class:kit::Terminal	access:protected
Singleton	.//base/Singleton.h	/^class Singleton$/;"	c	namespace:kit
SockAddr	.//network/platform/linux/SockAddr_linux.h	/^class SockAddr : public ISockAddr$/;"	c	namespace:kit	inherits:ISockAddr
SockAddr	.//network/platform/win/SockAddr.cpp	/^SockAddr::SockAddr()$/;"	f	class:kit::SockAddr	signature:()
Socket	.//network/platform/linux/Socket_linux.h	/^class Socket : public ISocket$/;"	c	namespace:kit	inherits:ISocket
Socket	.//network/platform/win/Socket.cpp	/^Socket::Socket()$/;"	f	class:kit::Socket	signature:()
SocketID	.//network/netsys.h	/^typedef int32_t SocketID;$/;"	t	namespace:kit
SpinMutex	.//kit/platform/linux/Thread_linux.cpp	/^SpinMutex::SpinMutex()$/;"	f	class:kit::SpinMutex	signature:()
SpinMutex	.//kit/platform/linux/Thread_linux.h	/^    SpinMutex();$/;"	p	class:kit::SpinMutex	access:public	signature:()
SpinMutex	.//kit/platform/linux/Thread_linux.h	/^class SpinMutex : public IMutex$/;"	c	namespace:kit	inherits:IMutex
StkId	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t
TABLE	.//network/Protocol.h	/^    TABLE,$/;"	m	class:kit::PTType	access:private
TAB_L	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define TAB_L	/;"	d	file:
TAB_R	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define TAB_R	/;"	d	file:
TAB_RW	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define TAB_RW	/;"	d	file:
TAB_W	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define TAB_W	/;"	d	file:
TIMER_MAP_SIZE	.//kit/Timer.h	/^#define TIMER_MAP_SIZE /;"	d
TK_AND	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_BREAK	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED
TK_CONCAT	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_DBCOLON	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_DO	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_DOTS	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_ELSE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_ELSEIF	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_END	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_EOS	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DBCOLON, TK_EOS,$/;"	e	enum:RESERVED
TK_EQ	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_FALSE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FLT	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_FOR	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_FUNCTION	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED
TK_GE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_GOTO	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IDIV	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_IF	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_IN	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_INT	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_LE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_LOCAL	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NAME	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_NE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_IDIV, TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE,$/;"	e	enum:RESERVED
TK_NIL	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_NOT	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_OR	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_REPEAT	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_GOTO, TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED
TK_RETURN	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_SHL	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_SHR	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_SHL, TK_SHR,$/;"	e	enum:RESERVED
TK_STRING	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_FLT, TK_INT, TK_NAME, TK_STRING$/;"	e	enum:RESERVED
TK_THEN	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_TRUE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_UNTIL	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TK_WHILE	.//script/lua/lua-5.3.4/src/llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED
TKey	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef union TKey {$/;"	u
TKey	.//script/lua/lua-5.3.4/src/lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TKey::__anon11::TValuefields	.//script/lua/lua-5.3.4/src/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon11	access:public
TKey::__anon11::next	.//script/lua/lua-5.3.4/src/lobject.h	/^    int next;  \/* for chaining (offset for next node) *\/$/;"	m	struct:TKey::__anon11	access:public
TKey::nk	.//script/lua/lua-5.3.4/src/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon11	access:public
TKey::tvk	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue tvk;$/;"	m	union:TKey	access:public
TMS	.//script/lua/lua-5.3.4/src/ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon24
TM_ADD	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_ADD,$/;"	e	enum:__anon24
TM_BAND	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_BAND,$/;"	e	enum:__anon24
TM_BNOT	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_BNOT,$/;"	e	enum:__anon24
TM_BOR	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_BOR,$/;"	e	enum:__anon24
TM_BXOR	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_BXOR,$/;"	e	enum:__anon24
TM_CALL	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_CALL,$/;"	e	enum:__anon24
TM_CONCAT	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon24
TM_DIV	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_DIV,$/;"	e	enum:__anon24
TM_EQ	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_EQ,  \/* last tag method with fast access *\/$/;"	e	enum:__anon24
TM_GC	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_GC,$/;"	e	enum:__anon24
TM_IDIV	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_IDIV,$/;"	e	enum:__anon24
TM_INDEX	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon24
TM_LE	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_LE,$/;"	e	enum:__anon24
TM_LEN	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_LEN,$/;"	e	enum:__anon24
TM_LT	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_LT,$/;"	e	enum:__anon24
TM_MOD	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_MOD,$/;"	e	enum:__anon24
TM_MODE	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_MODE,$/;"	e	enum:__anon24
TM_MUL	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_MUL,$/;"	e	enum:__anon24
TM_N	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon24
TM_NEWINDEX	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon24
TM_POW	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_POW,$/;"	e	enum:__anon24
TM_SHL	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_SHL,$/;"	e	enum:__anon24
TM_SHR	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_SHR,$/;"	e	enum:__anon24
TM_SUB	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_SUB,$/;"	e	enum:__anon24
TM_UNM	.//script/lua/lua-5.3.4/src/ltm.h	/^  TM_UNM,$/;"	e	enum:__anon24
TString	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct TString {$/;"	s
TString	.//script/lua/lua-5.3.4/src/lobject.h	/^} TString;$/;"	t	typeref:struct:TString
TString::CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:TString	access:public
TString::__anon10::hnext	.//script/lua/lua-5.3.4/src/lobject.h	/^    struct TString *hnext;  \/* linked list for hash table *\/$/;"	m	union:TString::__anon10	typeref:struct:TString::__anon10::TString	access:public
TString::__anon10::lnglen	.//script/lua/lua-5.3.4/src/lobject.h	/^    size_t lnglen;  \/* length for long strings *\/$/;"	m	union:TString::__anon10	access:public
TString::extra	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString	access:public
TString::hash	.//script/lua/lua-5.3.4/src/lobject.h	/^  unsigned int hash;$/;"	m	struct:TString	access:public
TString::shrlen	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte shrlen;  \/* length for short strings *\/$/;"	m	struct:TString	access:public
TString::u	.//script/lua/lua-5.3.4/src/lobject.h	/^  } u;$/;"	m	struct:TString	typeref:union:TString::__anon10	access:public
TValue	.//script/lua/lua-5.3.4/src/lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	.//script/lua/lua-5.3.4/src/lobject.h	/^    TValuefields;$/;"	m	struct:TKey::__anon11	access:public
TValuefields	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue	access:public
TValuefields	.//script/lua/lua-5.3.4/src/lobject.h	/^#define TValuefields	/;"	d
Table	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct Table {$/;"	s
Table	.//script/lua/lua-5.3.4/src/lobject.h	/^} Table;$/;"	t	typeref:struct:Table
Table::CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Table	access:public
Table::array	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table	access:public
Table::flags	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table	access:public
Table::gclist	.//script/lua/lua-5.3.4/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table	access:public
Table::lastfree	.//script/lua/lua-5.3.4/src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table	access:public
Table::lsizenode	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of 'node' array *\/$/;"	m	struct:Table	access:public
Table::metatable	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table	access:public
Table::node	.//script/lua/lua-5.3.4/src/lobject.h	/^  Node *node;$/;"	m	struct:Table	access:public
Table::sizearray	.//script/lua/lua-5.3.4/src/lobject.h	/^  unsigned int sizearray;  \/* size of 'array' array *\/$/;"	m	struct:Table	access:public
Terminal	.//network/Terminal.cpp	/^Terminal::Terminal()$/;"	f	class:kit::Terminal	signature:()
Terminal	.//network/Terminal.h	/^	Terminal();$/;"	p	class:kit::Terminal	access:public	signature:()
Terminal	.//network/Terminal.h	/^class Terminal : public Ref$/;"	c	namespace:kit	inherits:Ref
Thread	.//kit/platform/linux/Thread_linux.cpp	/^Thread::Thread()$/;"	f	class:kit::Thread	signature:()
Thread	.//kit/platform/linux/Thread_linux.h	/^    Thread();$/;"	p	class:kit::Thread	access:public	signature:()
Thread	.//kit/platform/linux/Thread_linux.h	/^class Thread : public IThread$/;"	c	namespace:kit	inherits:IThread
ThreadHandler	.//kit/Thread.h	/^struct ThreadHandler$/;"	s	namespace:kit
Timer	.//kit/Timer.cpp	/^Timer::Timer()$/;"	f	class:kit::Timer	signature:()
Timer	.//kit/Timer.h	/^    Timer();$/;"	p	class:kit::Timer	access:public	signature:()
Timer	.//kit/Timer.h	/^class Timer : public Ref$/;"	c	namespace:kit	inherits:Ref
TimerHandler	.//kit/Timer.h	/^typedef std::function<bool(uint32_t)> TimerHandler;$/;"	t	namespace:kit
Token	.//script/lua/lua-5.3.4/src/llex.h	/^typedef struct Token {$/;"	s
Token	.//script/lua/lua-5.3.4/src/llex.h	/^} Token;$/;"	t	typeref:struct:Token
Token::seminfo	.//script/lua/lua-5.3.4/src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token	access:public
Token::token	.//script/lua/lua-5.3.4/src/llex.h	/^  int token;$/;"	m	struct:Token	access:public
UBox	.//script/lua/lua-5.3.4/src/lauxlib.c	/^typedef struct UBox {$/;"	s	file:
UBox	.//script/lua/lua-5.3.4/src/lauxlib.c	/^} UBox;$/;"	t	typeref:struct:UBox	file:
UBox::box	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  void *box;$/;"	m	struct:UBox	file:	access:public
UBox::bsize	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  size_t bsize;$/;"	m	struct:UBox	file:	access:public
UINT16	.//network/Protocol.h	/^    UINT16,$/;"	m	class:kit::PTType	access:private
UINT32	.//network/Protocol.h	/^    UINT32,$/;"	m	class:kit::PTType	access:private
UINT64	.//network/Protocol.h	/^    UINT64,$/;"	m	class:kit::PTType	access:private
UINT8	.//network/Protocol.h	/^    UINT8,$/;"	m	class:kit::PTType	access:private
UNARY_PRIORITY	.//script/lua/lua-5.3.4/src/lparser.c	/^#define UNARY_PRIORITY	/;"	d	file:
UNSLOT	.//kit/Emitter.h	/^#define UNSLOT(/;"	d
UNUSED	.//script/lua/lua-5.3.4/src/llimits.h	/^#define UNUSED(/;"	d
UPVALNAME	.//script/lua/lua-5.3.4/src/luac.c	/^#define UPVALNAME(/;"	d	file:
UTF8BUFFSZ	.//script/lua/lua-5.3.4/src/lobject.h	/^#define UTF8BUFFSZ	/;"	d
UTF8PATT	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^#define UTF8PATT	/;"	d	file:
UTString	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef union UTString {$/;"	u
UTString	.//script/lua/lua-5.3.4/src/lobject.h	/^} UTString;$/;"	t	typeref:union:UTString
UTString::dummy	.//script/lua/lua-5.3.4/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:UTString	access:public
UTString::tsv	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString tsv;$/;"	m	union:UTString	access:public
UUdata	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef union UUdata {$/;"	u
UUdata	.//script/lua/lua-5.3.4/src/lobject.h	/^} UUdata;$/;"	t	typeref:union:UUdata
UUdata::dummy	.//script/lua/lua-5.3.4/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for 'local' udata *\/$/;"	m	union:UUdata	access:public
UUdata::uv	.//script/lua/lua-5.3.4/src/lobject.h	/^  Udata uv;$/;"	m	union:UUdata	access:public
Udata	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct Udata {$/;"	s
Udata	.//script/lua/lua-5.3.4/src/lobject.h	/^} Udata;$/;"	t	typeref:struct:Udata
Udata::CommonHeader	.//script/lua/lua-5.3.4/src/lobject.h	/^  CommonHeader;$/;"	m	struct:Udata	access:public
Udata::len	.//script/lua/lua-5.3.4/src/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata	access:public
Udata::metatable	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata	typeref:struct:Udata::Table	access:public
Udata::ttuv_	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte ttuv_;  \/* user value's tag *\/$/;"	m	struct:Udata	access:public
Udata::user_	.//script/lua/lua-5.3.4/src/lobject.h	/^  union Value user_;  \/* user value *\/$/;"	m	struct:Udata	typeref:union:Udata::Value	access:public
UnOpr	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	.//script/lua/lua-5.3.4/src/lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_BNOT, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UpVal	.//script/lua/lua-5.3.4/src/lfunc.h	/^struct UpVal {$/;"	s
UpVal	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct UpVal UpVal;$/;"	t	typeref:struct:UpVal
UpVal::__anon5::__anon6::next	.//script/lua/lua-5.3.4/src/lfunc.h	/^      UpVal *next;  \/* linked list *\/$/;"	m	struct:UpVal::__anon5::__anon6	access:public
UpVal::__anon5::__anon6::touched	.//script/lua/lua-5.3.4/src/lfunc.h	/^      int touched;  \/* mark to avoid cycles with dead threads *\/$/;"	m	struct:UpVal::__anon5::__anon6	access:public
UpVal::__anon5::open	.//script/lua/lua-5.3.4/src/lfunc.h	/^    } open;$/;"	m	union:UpVal::__anon5	typeref:struct:UpVal::__anon5::__anon6	access:public
UpVal::__anon5::value	.//script/lua/lua-5.3.4/src/lfunc.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon5	access:public
UpVal::refcount	.//script/lua/lua-5.3.4/src/lfunc.h	/^  lu_mem refcount;  \/* reference counter *\/$/;"	m	struct:UpVal	access:public
UpVal::u	.//script/lua/lua-5.3.4/src/lfunc.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon5	access:public
UpVal::v	.//script/lua/lua-5.3.4/src/lfunc.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal	access:public
Upvaldesc	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct Upvaldesc {$/;"	s
Upvaldesc	.//script/lua/lua-5.3.4/src/lobject.h	/^} Upvaldesc;$/;"	t	typeref:struct:Upvaldesc
Upvaldesc::idx	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc	access:public
Upvaldesc::instack	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte instack;  \/* whether it is in stack (register) *\/$/;"	m	struct:Upvaldesc	access:public
Upvaldesc::name	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc	access:public
VARINT	.//network/Protocol.h	/^    VARINT,$/;"	m	class:kit::PTType	access:private
VCALL	.//script/lua/lua-5.3.4/src/lparser.h	/^  VCALL,  \/* expression is a function call; info = instruction pc *\/$/;"	e	enum:__anon14
VFALSE	.//script/lua/lua-5.3.4/src/lparser.h	/^  VFALSE,  \/* constant false *\/$/;"	e	enum:__anon14
VINDEXED	.//script/lua/lua-5.3.4/src/lparser.h	/^  VINDEXED,  \/* indexed variable;$/;"	e	enum:__anon14
VJMP	.//script/lua/lua-5.3.4/src/lparser.h	/^  VJMP,  \/* expression is a test\/comparison;$/;"	e	enum:__anon14
VK	.//script/lua/lua-5.3.4/src/lparser.h	/^  VK,  \/* constant in 'k'; info = index of constant in 'k' *\/$/;"	e	enum:__anon14
VKFLT	.//script/lua/lua-5.3.4/src/lparser.h	/^  VKFLT,  \/* floating constant; nval = numerical float value *\/$/;"	e	enum:__anon14
VKINT	.//script/lua/lua-5.3.4/src/lparser.h	/^  VKINT,  \/* integer constant; nval = numerical integer value *\/$/;"	e	enum:__anon14
VLOCAL	.//script/lua/lua-5.3.4/src/lparser.h	/^  VLOCAL,  \/* local variable; info = local register *\/$/;"	e	enum:__anon14
VNIL	.//script/lua/lua-5.3.4/src/lparser.h	/^  VNIL,  \/* constant nil *\/$/;"	e	enum:__anon14
VNONRELOC	.//script/lua/lua-5.3.4/src/lparser.h	/^  VNONRELOC,  \/* expression has its value in a fixed register;$/;"	e	enum:__anon14
VOID	.//script/lua/lua-5.3.4/src/luac.c	/^#define VOID(/;"	d	file:
VRELOCABLE	.//script/lua/lua-5.3.4/src/lparser.h	/^  VRELOCABLE,  \/* expression can put result in any register;$/;"	e	enum:__anon14
VTRUE	.//script/lua/lua-5.3.4/src/lparser.h	/^  VTRUE,  \/* constant true *\/$/;"	e	enum:__anon14
VUPVAL	.//script/lua/lua-5.3.4/src/lparser.h	/^  VUPVAL,  \/* upvalue variable; info = index of upvalue in 'upvalues' *\/$/;"	e	enum:__anon14
VVARARG	.//script/lua/lua-5.3.4/src/lparser.h	/^  VVARARG  \/* vararg expression; info = instruction pc *\/$/;"	e	enum:__anon14
VVOID	.//script/lua/lua-5.3.4/src/lparser.h	/^  VVOID,  \/* when 'expdesc' describes the last expression a list,$/;"	e	enum:__anon14
Value	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef union Value {$/;"	u
Value	.//script/lua/lua-5.3.4/src/lobject.h	/^} Value;$/;"	t	typeref:union:Value
Value::b	.//script/lua/lua-5.3.4/src/lobject.h	/^  int b;           \/* booleans *\/$/;"	m	union:Value	access:public
Value::f	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value	access:public
Value::gc	.//script/lua/lua-5.3.4/src/lobject.h	/^  GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value	access:public
Value::i	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_Integer i;   \/* integer numbers *\/$/;"	m	union:Value	access:public
Value::n	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_Number n;    \/* float numbers *\/$/;"	m	union:Value	access:public
Value::p	.//script/lua/lua-5.3.4/src/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value	access:public
Vardesc	.//script/lua/lua-5.3.4/src/lparser.h	/^typedef struct Vardesc {$/;"	s
Vardesc	.//script/lua/lua-5.3.4/src/lparser.h	/^} Vardesc;$/;"	t	typeref:struct:Vardesc
Vardesc::idx	.//script/lua/lua-5.3.4/src/lparser.h	/^  short idx;  \/* variable index in stack *\/$/;"	m	struct:Vardesc	access:public
WHITE0BIT	.//script/lua/lua-5.3.4/src/lgc.h	/^#define WHITE0BIT	/;"	d
WHITE1BIT	.//script/lua/lua-5.3.4/src/lgc.h	/^#define WHITE1BIT	/;"	d
WHITEBITS	.//script/lua/lua-5.3.4/src/lgc.h	/^#define WHITEBITS	/;"	d
Wheel	.//kit/Timer.cpp	/^Timer::Wheel::Wheel()$/;"	f	class:kit::Timer::Wheel	signature:()
Wheel	.//kit/Timer.h	/^    Wheel();$/;"	p	struct:kit::Timer::Wheel	access:public	signature:()
Wheel	.//kit/Timer.h	/^struct Wheel$/;"	s	class:kit::Timer	access:private
XDIGITBIT	.//script/lua/lua-5.3.4/src/lctype.h	/^#define XDIGITBIT	/;"	d
Z	.//script/lua/lua-5.3.4/src/lundump.c	/^  ZIO *Z;$/;"	m	struct:__anon25	file:	access:public
ZIO	.//script/lua/lua-5.3.4/src/lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	.//script/lua/lua-5.3.4/src/lzio.h	/^struct Zio {$/;"	s
Zio::L	.//script/lua/lua-5.3.4/src/lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio	access:public
Zio::data	.//script/lua/lua-5.3.4/src/lzio.h	/^  void *data;			\/* additional data *\/$/;"	m	struct:Zio	access:public
Zio::n	.//script/lua/lua-5.3.4/src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio	access:public
Zio::p	.//script/lua/lua-5.3.4/src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio	access:public
Zio::reader	.//script/lua/lua-5.3.4/src/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio	access:public
_CRT_SECURE_NO_WARNINGS	.//script/lua/lua-5.3.4/src/lprefix.h	/^#define _CRT_SECURE_NO_WARNINGS /;"	d
_FILE_OFFSET_BITS	.//script/lua/lua-5.3.4/src/lprefix.h	/^#define _FILE_OFFSET_BITS /;"	d
_LARGEFILE_SOURCE	.//script/lua/lua-5.3.4/src/lprefix.h	/^#define _LARGEFILE_SOURCE /;"	d
_XOPEN_SOURCE	.//script/lua/lua-5.3.4/src/lprefix.h	/^#define _XOPEN_SOURCE /;"	d
_XOPEN_SOURCE	.//script/lua/lua-5.3.4/src/lprefix.h	/^#undef _XOPEN_SOURCE /;"	d
__DEBUG_FUNC_H__	.//debug/debugfunc.h	/^#define __DEBUG_FUNC_H__$/;"	d
__GEAR_KIT_H__	.//gearkit.h	/^#define __GEAR_KIT_H__$/;"	d
__JS_CORE_H__	.//script/js/JSCore.h	/^#define __JS_CORE_H__$/;"	d
__KIT_ARRAY_H__	.//base/Array.h	/^#define __KIT_ARRAY_H__$/;"	d
__KIT_BASE_H__	.//base/base.h	/^#define __KIT_BASE_H__$/;"	d
__KIT_BUFFER_H__	.//kit/Buffer.h	/^#define __KIT_BUFFER_H__$/;"	d
__KIT_BUFFER_POOL_H__	.//kit/BufferPool.h	/^#define __KIT_BUFFER_POOL_H__$/;"	d
__KIT_CLIENT_H__	.//network/Client.h	/^#define __KIT_CLIENT_H__$/;"	d
__KIT_CLIENT_LINUX_H__	.//network/platform/linux/Client_linux.h	/^#define __KIT_CLIENT_LINUX_H__$/;"	d
__KIT_DEBUG_INPUT_H__	.//debug/DebugInput.h	/^#define __KIT_DEBUG_INPUT_H__$/;"	d
__KIT_EMITTER_H__	.//kit/Emitter.h	/^#define __KIT_EMITTER_H__$/;"	d
__KIT_FUNCTIONS_H__	.//kit/Functions.h	/^#define __KIT_FUNCTIONS_H__$/;"	d
__KIT_GEAR_H__	.//Gear.h	/^#define __KIT_GEAR_H__$/;"	d
__KIT_H__	.//kit/kit.h	/^#define __KIT_H__$/;"	d
__KIT_LIST_H__	.//base/List.h	/^#define __KIT_LIST_H__$/;"	d
__KIT_LOGGER_H__	.//kit/Logger.h	/^#define __KIT_LOGGER_H__$/;"	d
__KIT_MAP_H__	.//base/Map.h	/^#define __KIT_MAP_H__$/;"	d
__KIT_MSG_H__	.//network/msg.h	/^#define __KIT_MSG_H__$/;"	d
__KIT_NETWORK_H__	.//network/network.h	/^#define __KIT_NETWORK_H__$/;"	d
__KIT_NET_SYS_H__	.//network/netsys.h	/^#define __KIT_NET_SYS_H__$/;"	d
__KIT_PACKET_H__	.//network/Packet.h	/^#define __KIT_PACKET_H__$/;"	d
__KIT_QLIST_H__	.//base/QList.h	/^#define __KIT_QLIST_H__$/;"	d
__KIT_QUEUE_H__	.//base/Queue.h	/^#define __KIT_QUEUE_H__$/;"	d
__KIT_REF_H__	.//kit/Ref.h	/^#define __KIT_REF_H__$/;"	d
__KIT_REF_POLL_H__	.//kit/RefPool.h	/^#define __KIT_REF_POLL_H__$/;"	d
__KIT_SCRIPT_SUPPORT_H__	.//script/ScriptSupport.h	/^#define __KIT_SCRIPT_SUPPORT_H__$/;"	d
__KIT_SERVER_H__	.//network/Server.h	/^#define __KIT_SERVER_H__$/;"	d
__KIT_SERVER_LINUX_H__	.//network/platform/linux/Server_linux.h	/^#define __KIT_SERVER_LINUX_H__$/;"	d
__KIT_SESSION_H__	.//network/Session.h	/^#define __KIT_SESSION_H__$/;"	d
__KIT_SINGLETON_H__	.//base/Singleton.h	/^#define __KIT_SINGLETON_H__$/;"	d
__KIT_SOCKET_H__	.//network/Socket.h	/^#define __KIT_SOCKET_H__$/;"	d
__KIT_SOCKET_LINUX_H__	.//network/platform/linux/Socket_linux.h	/^#define __KIT_SOCKET_LINUX_H__$/;"	d
__KIT_SOCK_ADDR_H__	.//network/SockAddr.h	/^#define __KIT_SOCK_ADDR_H__$/;"	d
__KIT_SOCK_ADDR_LINUX_H__	.//network/platform/linux/SockAddr_linux.h	/^#define __KIT_SOCK_ADDR_LINUX_H__$/;"	d
__KIT_SYS_H__	.//kit/kitsys.h	/^#define __KIT_SYS_H__$/;"	d
__KIT_TERMINAL_H__	.//network/Terminal.h	/^#define __KIT_TERMINAL_H__$/;"	d
__KIT_THREAD_H__	.//kit/Thread.h	/^#define __KIT_THREAD_H__$/;"	d
__KIT_THREAD_LINUX_H__	.//kit/platform/linux/Thread_linux.h	/^#define __KIT_THREAD_LINUX_H__$/;"	d
__KIT_TIMER_H__	.//kit/Timer.h	/^#define __KIT_TIMER_H__$/;"	d
__LUA_BINDING_H__	.//script/lua/LuaBinding.h	/^#define __LUA_BINDING_H__$/;"	d
__LUA_BUFFER_H__	.//script/lua/LuaBuffer.h	/^#define __LUA_BUFFER_H__$/;"	d
__LUA_DEBUG_H__	.//script/lua/LuaDebug.h	/^#define __LUA_DEBUG_H__$/;"	d
__LUA_FUNCTIONS_H__	.//script/lua/LuaFunctions.h	/^#define __LUA_FUNCTIONS_H__$/;"	d
__LUA_PROTOCOL_H__	.//script/lua/LuaProtocol.h	/^#define __LUA_PROTOCOL_H__$/;"	d
__Lua_CORE_H__	.//script/lua/LuaCore.h	/^#define __Lua_CORE_H__$/;"	d
__PROTOCOL_H__	.//network/Protocol.h	/^#define __PROTOCOL_H__$/;"	d
__anon13::left	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon13	file:	access:public
__anon13::right	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon13	file:	access:public
__anon22::dummy	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int dummy;$/;"	m	union:__anon22	file:	access:public
__anon22::little	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  char little;  \/* true iff machine is little endian *\/$/;"	m	union:__anon22	file:	access:public
__anon25::L	.//script/lua/lua-5.3.4/src/lundump.c	/^  lua_State *L;$/;"	m	struct:__anon25	file:	access:public
__anon25::Z	.//script/lua/lua-5.3.4/src/lundump.c	/^  ZIO *Z;$/;"	m	struct:__anon25	file:	access:public
__anon25::name	.//script/lua/lua-5.3.4/src/lundump.c	/^  const char *name;$/;"	m	struct:__anon25	file:	access:public
__anon4::L	.//script/lua/lua-5.3.4/src/ldump.c	/^  lua_State *L;$/;"	m	struct:__anon4	file:	access:public
__anon4::data	.//script/lua/lua-5.3.4/src/ldump.c	/^  void *data;$/;"	m	struct:__anon4	file:	access:public
__anon4::status	.//script/lua/lua-5.3.4/src/ldump.c	/^  int status;$/;"	m	struct:__anon4	file:	access:public
__anon4::strip	.//script/lua/lua-5.3.4/src/ldump.c	/^  int strip;$/;"	m	struct:__anon4	file:	access:public
__anon4::writer	.//script/lua/lua-5.3.4/src/ldump.c	/^  lua_Writer writer;$/;"	m	struct:__anon4	file:	access:public
__anon7::buff	.//script/lua/lua-5.3.4/src/liolib.c	/^  char buff[L_MAXLENNUM + 1];  \/* +1 for ending '\\0' *\/$/;"	m	struct:__anon7	file:	access:public
__anon7::c	.//script/lua/lua-5.3.4/src/liolib.c	/^  int c;  \/* current character (look ahead) *\/$/;"	m	struct:__anon7	file:	access:public
__anon7::f	.//script/lua/lua-5.3.4/src/liolib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:__anon7	file:	access:public
__anon7::n	.//script/lua/lua-5.3.4/src/liolib.c	/^  int n;  \/* number of elements in buffer 'buff' *\/$/;"	m	struct:__anon7	file:	access:public
__anon8::i	.//script/lua/lua-5.3.4/src/llex.h	/^  lua_Integer i;$/;"	m	union:__anon8	access:public
__anon8::r	.//script/lua/lua-5.3.4/src/llex.h	/^  lua_Number r;$/;"	m	union:__anon8	access:public
__anon8::ts	.//script/lua/lua-5.3.4/src/llex.h	/^  TString *ts;$/;"	m	union:__anon8	access:public
__anon9::i	.//script/lua/lua-5.3.4/src/llimits.h	/^  lua_Integer i;$/;"	m	union:__anon9	access:public
__anon9::l	.//script/lua/lua-5.3.4/src/llimits.h	/^  long l;$/;"	m	union:__anon9	access:public
__anon9::n	.//script/lua/lua-5.3.4/src/llimits.h	/^  lua_Number n;$/;"	m	union:__anon9	access:public
__anon9::s	.//script/lua/lua-5.3.4/src/llimits.h	/^  void *s;$/;"	m	union:__anon9	access:public
__anon9::u	.//script/lua/lua-5.3.4/src/llimits.h	/^  double u;$/;"	m	union:__anon9	access:public
__swap	.//kit/Emitter.h	/^    void __swap(HandlerVec& vec, int ia, int ib)$/;"	f	class:kit::Emitter	access:private	signature:(HandlerVec& vec, int ia, int ib)
accept	.//network/Socket.cpp	/^int32_t ISocket::accept(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
accept	.//network/Socket.h	/^	int32_t accept(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
accept	.//network/platform/win/Socket.cpp	/^int32_t Socket::accept(sockaddr* addr)$/;"	f	class:kit::Socket	signature:(sockaddr* addr)
active_	.//kit/Thread.h	/^    bool active_;$/;"	m	class:kit::IThread	access:protected
active_	.//network/Client.h	/^    bool active_;$/;"	m	class:kit::IClient	access:protected
active_	.//network/Server.h	/^    bool active_;$/;"	m	class:kit::IServer	access:protected
actvar	.//script/lua/lua-5.3.4/src/lparser.h	/^  } actvar;$/;"	m	struct:Dyndata	typeref:struct:Dyndata::__anon17	access:public
addChild	.//kit/Ref.cpp	/^void Ref::addChild(Ref* child)$/;"	f	class:kit::Ref	signature:(Ref* child)
addChild	.//kit/Ref.h	/^    void addChild(Ref* obj);$/;"	p	class:kit::Ref	access:public	signature:(Ref* obj)
addCore	.//script/ScriptSupport.cpp	/^void ScriptManager::addCore(ScriptCore* core)$/;"	f	class:kit::ScriptManager	signature:(ScriptCore* core)
addCore	.//script/ScriptSupport.h	/^    virtual void addCore(ScriptCore* core);$/;"	p	class:kit::ScriptManager	access:public	signature:(ScriptCore* core)
addCtrl	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::addCtrl(int32_t fd, int32_t events)$/;"	f	class:kit::Client	signature:(int32_t fd, int32_t events)
addCtrl	.//network/platform/linux/Client_linux.h	/^    int32_t addCtrl(int32_t fd, int32_t events);$/;"	p	class:kit::Client	access:protected	signature:(int32_t fd, int32_t events)
addCtrl	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::addCtrl(int32_t fd, int32_t events)$/;"	f	class:kit::Server	signature:(int32_t fd, int32_t events)
addCtrl	.//network/platform/linux/Server_linux.h	/^    int32_t addCtrl(int32_t fd, int32_t events);$/;"	p	class:kit::Server	access:protected	signature:(int32_t fd, int32_t events)
addData	.//network/Protocol.cpp	/^void PTArray::addData(PTData* data)$/;"	f	class:kit::PTArray	signature:(PTData* data)
addData	.//network/Protocol.cpp	/^void PTTable::addData(PTData* data)$/;"	f	class:kit::PTTable	signature:(PTData* data)
addData	.//network/Protocol.h	/^    void addData(PTData* data);$/;"	p	class:kit::PTArray	access:public	signature:(PTData* data)
addData	.//network/Protocol.h	/^    void addData(PTData* data);$/;"	p	class:kit::PTTable	access:public	signature:(PTData* data)
addHandler	.//debug/DebugInput.cpp	/^void DebugInput::addHandler(DebugCmdHandler handler)$/;"	f	class:kit::DebugInput	signature:(DebugCmdHandler handler)
addHandler	.//debug/DebugInput.h	/^    virtual void addHandler(DebugCmdHandler handler);$/;"	p	class:kit::DebugInput	access:public	signature:(DebugCmdHandler handler)
addNode	.//kit/Timer.cpp	/^bool Timer::addNode(uint8_t index, Node* node)$/;"	f	class:kit::Timer	signature:(uint8_t index, Node* node)
addNode	.//kit/Timer.h	/^    bool addNode(uint8_t index, Node* node);$/;"	p	class:kit::Timer	access:private	signature:(uint8_t index, Node* node)
addProtocol	.//network/Terminal.cpp	/^void Terminal::addProtocol(ProtocolID pid, Protocol* pto)$/;"	f	class:kit::Terminal	signature:(ProtocolID pid, Protocol* pto)
addProtocol	.//network/Terminal.h	/^    void addProtocol(ProtocolID pid, Protocol* pto);$/;"	p	class:kit::Terminal	access:public	signature:(ProtocolID pid, Protocol* pto)
addRef	.//kit/RefPool.cpp	/^void RefPool::addRef(Ref* ref)$/;"	f	class:kit::RefPool	signature:(Ref* ref)
addRef	.//kit/RefPool.h	/^    void addRef(Ref* ref);$/;"	p	class:kit::RefPool	access:public	signature:(Ref* ref)
addSession	.//network/Terminal.cpp	/^void Terminal::addSession(Session* session)$/;"	f	class:kit::Terminal	signature:(Session* session)
addSession	.//network/Terminal.h	/^    void addSession(Session* session);$/;"	p	class:kit::Terminal	access:public	signature:(Session* session)
addSocket	.//network/Server.cpp	/^int32_t IServer::addSocket(SocketID fd, Socket* sock)$/;"	f	class:kit::IServer	signature:(SocketID fd, Socket* sock)
addSocket	.//network/Server.h	/^    virtual int32_t addSocket(SocketID fd, Socket* sock = NULL);$/;"	p	class:kit::IServer	access:protected	signature:(SocketID fd, Socket* sock = NULL)
addTimer	.//kit/Timer.cpp	/^uint32_t Timer::addTimer(uint32_t delay, TimerHandler handler, uint32_t cycle)$/;"	f	class:kit::Timer	signature:(uint32_t delay, TimerHandler handler, uint32_t cycle)
addTimer	.//kit/Timer.h	/^    uint32_t addTimer(uint32_t delay, TimerHandler handler, uint32_t cycle = 0);$/;"	p	class:kit::Timer	access:public	signature:(uint32_t delay, TimerHandler handler, uint32_t cycle = 0)
add_s	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:	signature:(MatchState *ms, luaL_Buffer *b, const char *s, const char *e)
add_value	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:	signature:(MatchState *ms, luaL_Buffer *b, const char *s, const char *e, int tr)
addbuff	.//script/lua/lua-5.3.4/src/lstate.c	/^#define addbuff(/;"	d	file:
adddigit	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static lua_Number adddigit (char *buff, int n, lua_Number x) {$/;"	f	file:	signature:(char *buff, int n, lua_Number x)
addfield	.//script/lua/lua-5.3.4/src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, lua_Integer i) {$/;"	f	file:	signature:(lua_State *L, luaL_Buffer *b, lua_Integer i)
addk	.//script/lua/lua-5.3.4/src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:	signature:(FuncState *fs, TValue *key, TValue *v)
addlenmod	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:	signature:(char *form, const char *lenmod)
addliteral	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void addliteral (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:	signature:(lua_State *L, luaL_Buffer *b, int arg)
addprototype	.//script/lua/lua-5.3.4/src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
addquoted	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void addquoted (luaL_Buffer *b, const char *s, size_t len) {$/;"	f	file:	signature:(luaL_Buffer *b, const char *s, size_t len)
addr_	.//network/SockAddr.h	/^    sockaddr* addr_;$/;"	m	class:kit::ISockAddr	access:protected
addr_	.//network/Socket.h	/^    SockAddr* addr_;$/;"	m	class:kit::ISocket	access:protected
addreturn	.//script/lua/lua-5.3.4/src/lua.c	/^static int addreturn (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
addstr	.//script/lua/lua-5.3.4/src/lobject.c	/^#define addstr(/;"	d	file:
addtoclib	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:	signature:(lua_State *L, const char *path, void *plib)
adjust	.//base/Queue.h	/^    void adjust(int index)$/;"	f	class:kit::MinQueue	access:protected	signature:(int index)
adjustDown	.//base/Queue.h	/^    bool adjustDown(int index)$/;"	f	class:kit::MinQueue	access:protected	signature:(int index)
adjust_assign	.//script/lua/lua-5.3.4/src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:	signature:(LexState *ls, int nvars, int nexps, expdesc *e)
adjust_varargs	.//script/lua/lua-5.3.4/src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:	signature:(lua_State *L, Proto *p, int actual)
adjustlocalvars	.//script/lua/lua-5.3.4/src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:	signature:(LexState *ls, int nvars)
adjustresults	.//script/lua/lua-5.3.4/src/lapi.h	/^#define adjustresults(/;"	d
allgc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State	access:public
allocsizenode	.//script/lua/lua-5.3.4/src/ltable.h	/^#define allocsizenode(/;"	d
allowhook	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State	access:public
allweak	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State	access:public
andaux	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static lua_Unsigned andaux (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
api_check	.//script/lua/lua-5.3.4/src/llimits.h	/^#define api_check(/;"	d
api_checknelems	.//script/lua/lua-5.3.4/src/lapi.h	/^#define api_checknelems(/;"	d
api_checkstackindex	.//script/lua/lua-5.3.4/src/lapi.c	/^#define api_checkstackindex(/;"	d	file:
api_checkvalidindex	.//script/lua/lua-5.3.4/src/lapi.c	/^#define api_checkvalidindex(/;"	d	file:
api_incr_top	.//script/lua/lua-5.3.4/src/lapi.h	/^#define api_incr_top(/;"	d
api_table_	.//kit/Logger.h	/^    LoggerAPI api_table_[MAX_LOG_TYPE];$/;"	m	class:kit::Logger	access:private
api_table_	.//network/Protocol.h	/^    PTDataAPI api_table_[toint(PTType::MAX)];$/;"	m	class:kit::PTDataCreator	access:private
arr	.//script/lua/lua-5.3.4/src/lparser.h	/^    Vardesc *arr;$/;"	m	struct:Dyndata::__anon17	access:public
arr	.//script/lua/lua-5.3.4/src/lparser.h	/^  Labeldesc *arr;  \/* array *\/$/;"	m	struct:Labellist	access:public
array	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table	access:public
array_	.//base/Array.h	/^        Item* array_;$/;"	m	class:kit::Array::Iterator	access:private
array_	.//base/Array.h	/^    Item array_[Length];$/;"	m	class:kit::Array	access:private
arrayindex	.//script/lua/lua-5.3.4/src/ltable.c	/^static unsigned int arrayindex (const TValue *key) {$/;"	f	file:	signature:(const TValue *key)
assignment	.//script/lua/lua-5.3.4/src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:	signature:(LexState *ls, struct LHS_assign *lh, int nvars)
atomic	.//script/lua/lua-5.3.4/src/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
autoRelease	.//kit/Ref.cpp	/^Ref* Ref::autoRelease()$/;"	f	class:kit::Ref	signature:()
autoRelease	.//kit/Ref.h	/^    Ref* autoRelease();$/;"	p	class:kit::Ref	access:public	signature:()
aux_close	.//script/lua/lua-5.3.4/src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
aux_getn	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define aux_getn(/;"	d	file:
aux_lines	.//script/lua/lua-5.3.4/src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:	signature:(lua_State *L, int toclose)
aux_upvalue	.//script/lua/lua-5.3.4/src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:	signature:(StkId fi, int n, TValue **val, CClosure **owner, UpVal **uv)
auxgetinfo	.//script/lua/lua-5.3.4/src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:	signature:(lua_State *L, const char *what, lua_Debug *ar, Closure *f, CallInfo *ci)
auxgetstr	.//script/lua/lua-5.3.4/src/lapi.c	/^static int auxgetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:	signature:(lua_State *L, const TValue *t, const char *k)
auxresume	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:	signature:(lua_State *L, lua_State *co, int narg)
auxsetstr	.//script/lua/lua-5.3.4/src/lapi.c	/^static void auxsetstr (lua_State *L, const TValue *t, const char *k) {$/;"	f	file:	signature:(lua_State *L, const TValue *t, const char *k)
auxsort	.//script/lua/lua-5.3.4/src/ltablib.c	/^static void auxsort (lua_State *L, IdxT lo, IdxT up,$/;"	f	file:	signature:(lua_State *L, IdxT lo, IdxT up, unsigned int rnd)
auxupvalue	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:	signature:(lua_State *L, int get)
b	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer	access:public
b	.//script/lua/lua-5.3.4/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:	access:public
b	.//script/lua/lua-5.3.4/src/lobject.h	/^  int b;           \/* booleans *\/$/;"	m	union:Value	access:public
b_and	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_arshift	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_extract	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_lrot	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_lshift	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_not	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_or	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_replace	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_rot	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_rot (lua_State *L, lua_Integer d) {$/;"	f	file:	signature:(lua_State *L, lua_Integer d)
b_rrot	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_rshift	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_shift	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_shift (lua_State *L, lua_Unsigned r, lua_Integer i) {$/;"	f	file:	signature:(lua_State *L, lua_Unsigned r, lua_Integer i)
b_str2int	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static const char *b_str2int (const char *s, int base, lua_Integer *pn) {$/;"	f	file:	signature:(const char *s, int base, lua_Integer *pn)
b_test	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
b_xor	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
base	.//script/lua/lua-5.3.4/src/lstate.h	/^      StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo::__anon18::__anon19	access:public
baseInit	.//Gear.cpp	/^bool Gear::baseInit()$/;"	f	class:kit::Gear	signature:()
baseInit	.//Gear.h	/^    virtual bool baseInit();$/;"	p	class:kit::Gear	access:public	signature:()
baseInit	.//debug/DebugInput.cpp	/^bool DebugInput::baseInit()$/;"	f	class:kit::DebugInput	signature:()
baseInit	.//debug/DebugInput.h	/^    virtual bool baseInit();$/;"	p	class:kit::DebugInput	access:public	signature:()
baseInit	.//kit/BufferPool.cpp	/^bool BufferPoolManager::baseInit()$/;"	f	class:kit::BufferPoolManager	signature:()
baseInit	.//kit/BufferPool.h	/^    virtual bool baseInit();$/;"	p	class:kit::BufferPoolManager	access:public	signature:()
baseInit	.//kit/Logger.cpp	/^bool Logger::baseInit()$/;"	f	class:kit::Logger	signature:()
baseInit	.//kit/Logger.h	/^    virtual bool baseInit();$/;"	p	class:kit::Logger	access:public	signature:()
baseInit	.//kit/Ref.h	/^    virtual bool baseInit(void) { return true; }$/;"	f	class:kit::Ref	access:protected	signature:(void)
baseInit	.//kit/RefPool.cpp	/^bool RefPoolManager::baseInit()$/;"	f	class:kit::RefPoolManager	signature:()
baseInit	.//kit/RefPool.h	/^    virtual bool baseInit();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
baseInit	.//kit/Thread.cpp	/^bool IThread::baseInit()$/;"	f	class:kit::IThread	signature:()
baseInit	.//kit/Thread.h	/^    virtual bool baseInit();$/;"	p	class:kit::IThread	access:public	signature:()
baseInit	.//kit/platform/linux/Thread_linux.cpp	/^bool Mutex::baseInit()$/;"	f	class:kit::Mutex	signature:()
baseInit	.//kit/platform/linux/Thread_linux.cpp	/^bool SpinMutex::baseInit()$/;"	f	class:kit::SpinMutex	signature:()
baseInit	.//kit/platform/linux/Thread_linux.h	/^    virtual bool baseInit();$/;"	p	class:kit::Mutex	access:protected	signature:()
baseInit	.//kit/platform/linux/Thread_linux.h	/^    virtual bool baseInit();$/;"	p	class:kit::SpinMutex	access:protected	signature:()
baseInit	.//network/Server.cpp	/^bool IServer::baseInit()$/;"	f	class:kit::IServer	signature:()
baseInit	.//network/Server.h	/^    virtual bool baseInit();$/;"	p	class:kit::IServer	access:protected	signature:()
baseInit	.//network/Socket.cpp	/^bool ISocket::baseInit()$/;"	f	class:kit::ISocket	signature:()
baseInit	.//network/Socket.h	/^    virtual bool baseInit();$/;"	p	class:kit::ISocket	access:public	signature:()
baseInit	.//network/Terminal.cpp	/^bool Terminal::baseInit()$/;"	f	class:kit::Terminal	signature:()
baseInit	.//network/Terminal.h	/^    virtual bool baseInit();$/;"	p	class:kit::Terminal	access:protected	signature:()
baseInit	.//script/ScriptSupport.cpp	/^bool ScriptManager::baseInit()$/;"	f	class:kit::ScriptManager	signature:()
baseInit	.//script/ScriptSupport.h	/^    virtual bool baseInit();$/;"	p	class:kit::ScriptManager	access:public	signature:()
baseInit	.//script/lua/LuaCore.cpp	/^bool LuaCore::baseInit()$/;"	f	class:LuaCore	signature:()
baseInit	.//script/lua/LuaCore.h	/^    virtual bool baseInit();$/;"	p	class:LuaCore	access:public	signature:()
baseInit	.//script/lua/LuaProtocol.cpp	/^bool LuaProtocol::baseInit()$/;"	f	class:LuaProtocol	signature:()
baseInit	.//script/lua/LuaProtocol.h	/^    virtual bool baseInit();$/;"	p	class:LuaProtocol	access:public	signature:()
base_ci	.//script/lua/lua-5.3.4/src/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State	access:public
base_funcs	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
basehookcount	.//script/lua/lua-5.3.4/src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State	access:public
begin	.//Gear.cpp	/^void Gear::begin()$/;"	f	class:kit::Gear	signature:()
begin	.//Gear.h	/^    virtual void begin();$/;"	p	class:kit::Gear	access:public	signature:()
begin	.//base/Array.h	/^    Iterator begin()$/;"	f	class:kit::Array	access:public	signature:()
begin	.//base/List.h	/^    Iterator begin() const$/;"	f	class:kit::List	access:public	signature:() const
begine_time_	.//Gear.h	/^    uint32_t begine_time_;$/;"	m	class:kit::Gear	access:private
bind	.//network/Socket.cpp	/^int32_t ISocket::bind(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
bind	.//network/Socket.h	/^	int32_t bind(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
bind	.//network/platform/win/Socket.cpp	/^int32_t Socket::bind(const sockaddr* addr)$/;"	f	class:kit::Socket	signature:(const sockaddr* addr)
bit2mask	.//script/lua/lua-5.3.4/src/lgc.h	/^#define bit2mask(/;"	d
bitlib	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
bitmask	.//script/lua/lua-5.3.4/src/lgc.h	/^#define bitmask(/;"	d
bits	.//kit/Timer.h	/^        uint8_t bits[4];$/;"	m	union:kit::Timer::Node::__anon3	access:public
bl	.//script/lua/lua-5.3.4/src/lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::BlockCnt	access:public
black2gray	.//script/lua/lua-5.3.4/src/lgc.c	/^#define black2gray(/;"	d	file:
block	.//script/lua/lua-5.3.4/src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
block_follow	.//script/lua/lua-5.3.4/src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:	signature:(LexState *ls, int withuntil)
body	.//script/lua/lua-5.3.4/src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:	signature:(LexState *ls, expdesc *e, int ismethod, int line)
boolK	.//script/lua/lua-5.3.4/src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:	signature:(FuncState *fs, int b)
box	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  void *box;$/;"	m	struct:UBox	file:	access:public
boxgc	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int boxgc (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
breaklabel	.//script/lua/lua-5.3.4/src/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
bsize	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  size_t bsize;$/;"	m	struct:UBox	file:	access:public
budget_size_	.//network/Protocol.h	/^    size_t budget_size_ = 64;$/;"	m	class:kit::Protocol	access:protected
buf_	.//debug/DebugInput.h	/^    char buf_[DEBUG_INPUT_SIZE];$/;"	m	class:kit::DebugInput	access:private
buf_	.//network/Packet.h	/^    Buffer* buf_;$/;"	m	class:kit::Packet	access:public
buff	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  char buff[BUFSIZ];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:	access:public
buff	.//script/lua/lua-5.3.4/src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:	access:public
buff	.//script/lua/lua-5.3.4/src/liolib.c	/^  char buff[L_MAXLENNUM + 1];  \/* +1 for ending '\\0' *\/$/;"	m	struct:__anon7	file:	access:public
buff	.//script/lua/lua-5.3.4/src/llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState	access:public
buff	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  char buff[5 * sizeof(lua_Number)];  \/* enough for any float type *\/$/;"	m	union:Ftypes	file:	access:public
buffer	.//script/lua/lua-5.3.4/src/lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer	access:public
buffonstack	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define buffonstack(/;"	d	file:
buffsize	.//script/lua/lua-5.3.4/src/lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer	access:public
buildFromTable	.//script/lua/LuaProtocol.cpp	/^void LuaProtocol::buildFromTable(lua_State* L)$/;"	f	class:LuaProtocol	signature:(lua_State* L)
buildFromTable	.//script/lua/LuaProtocol.h	/^    void buildFromTable(lua_State* L);$/;"	p	class:LuaProtocol	access:public	signature:(lua_State* L)
bvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define bvalue(/;"	d
byteoffset	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static int byteoffset (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
c	.//script/lua/lua-5.3.4/src/liolib.c	/^  int c;  \/* current character (look ahead) *\/$/;"	m	struct:__anon7	file:	access:public
c	.//script/lua/lua-5.3.4/src/lobject.h	/^  CClosure c;$/;"	m	union:Closure	access:public
c	.//script/lua/lua-5.3.4/src/lstate.h	/^    } c;$/;"	m	union:CallInfo::__anon18	typeref:struct:CallInfo::__anon18::__anon20	access:public
c	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  char c;$/;"	m	struct:cD	file:	access:public
cD	.//script/lua/lua-5.3.4/src/lstrlib.c	/^struct cD {$/;"	s	file:
cD::__anon23::d	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
cD::__anon23::i	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
cD::__anon23::n	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
cD::__anon23::p	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
cD::c	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  char c;$/;"	m	struct:cD	file:	access:public
cD::u	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	struct:cD	typeref:union:cD::__anon23	file:	access:public
cache	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct LClosure *cache;  \/* last-created closure with this prototype *\/$/;"	m	struct:Proto	typeref:struct:Proto::LClosure	access:public
callallpendingfinalizers	.//script/lua/lua-5.3.4/src/lgc.c	/^static void callallpendingfinalizers (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
callhook	.//script/lua/lua-5.3.4/src/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:	signature:(lua_State *L, CallInfo *ci)
callstatus	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short callstatus;$/;"	m	struct:CallInfo	access:public
cannot	.//script/lua/lua-5.3.4/src/luac.c	/^static void cannot(const char* what)$/;"	f	file:	signature:(const char* what)
capacity_	.//kit/Buffer.h	/^    size_t capacity_;$/;"	m	class:kit::Buffer	access:protected
capture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon21	file:	access:public
capture_to_close	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:	signature:(MatchState *ms)
cast	.//script/lua/lua-5.3.4/src/llimits.h	/^#define cast(/;"	d
cast_byte	.//script/lua/lua-5.3.4/src/llimits.h	/^#define cast_byte(/;"	d
cast_func	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define cast_func(/;"	d	file:
cast_int	.//script/lua/lua-5.3.4/src/llimits.h	/^#define cast_int(/;"	d
cast_num	.//script/lua/lua-5.3.4/src/llimits.h	/^#define cast_num(/;"	d
cast_u	.//script/lua/lua-5.3.4/src/lstate.h	/^#define cast_u(/;"	d
cast_uchar	.//script/lua/lua-5.3.4/src/llimits.h	/^#define cast_uchar(/;"	d
cast_void	.//script/lua/lua-5.3.4/src/llimits.h	/^#define cast_void(/;"	d
changewhite	.//script/lua/lua-5.3.4/src/lgc.h	/^#define changewhite(/;"	d
check	.//script/lua/lua-5.3.4/src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:	signature:(LexState *ls, int c)
checkGC	.//script/lua/lua-5.3.4/src/lvm.c	/^#define checkGC(/;"	d	file:
checkHeader	.//script/lua/lua-5.3.4/src/lundump.c	/^static void checkHeader (LoadState *S) {$/;"	f	file:	signature:(LoadState *S)
checkSizes	.//script/lua/lua-5.3.4/src/lgc.c	/^static void checkSizes (lua_State *L, global_State *g) {$/;"	f	file:	signature:(lua_State *L, global_State *g)
check_capture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:	signature:(MatchState *ms, int l)
check_condition	.//script/lua/lua-5.3.4/src/lparser.c	/^#define check_condition(/;"	d	file:
check_conflict	.//script/lua/lua-5.3.4/src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, struct LHS_assign *lh, expdesc *v)
check_exp	.//script/lua/lua-5.3.4/src/llimits.h	/^#define check_exp(/;"	d
check_match	.//script/lua/lua-5.3.4/src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:	signature:(LexState *ls, int what, int who, int where)
check_next1	.//script/lua/lua-5.3.4/src/llex.c	/^static int check_next1 (LexState *ls, int c) {$/;"	f	file:	signature:(LexState *ls, int c)
check_next2	.//script/lua/lua-5.3.4/src/llex.c	/^static int check_next2 (LexState *ls, const char *set) {$/;"	f	file:	signature:(LexState *ls, const char *set)
checkclib	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void *checkclib (lua_State *L, const char *path) {$/;"	f	file:	signature:(lua_State *L, const char *path)
checkconsistency	.//script/lua/lua-5.3.4/src/lgc.c	/^#define checkconsistency(/;"	d	file:
checkdeadkey	.//script/lua/lua-5.3.4/src/lgc.c	/^#define checkdeadkey(/;"	d	file:
checkdp	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void checkdp (char *buff, int nb) {$/;"	f	file:	signature:(char *buff, int nb)
checkfield	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int checkfield (lua_State *L, const char *key, int n) {$/;"	f	file:	signature:(lua_State *L, const char *key, int n)
checklimit	.//script/lua/lua-5.3.4/src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:	signature:(FuncState *fs, int v, int l, const char *what)
checkliteral	.//script/lua/lua-5.3.4/src/lundump.c	/^static void checkliteral (LoadState *S, const char *s, const char *msg) {$/;"	f	file:	signature:(LoadState *S, const char *s, const char *msg)
checkliveness	.//script/lua/lua-5.3.4/src/lobject.h	/^#define checkliveness(/;"	d
checkload	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:	signature:(lua_State *L, int stat, const char *filename)
checkmode	.//script/lua/lua-5.3.4/src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:	signature:(lua_State *L, const char *mode, const char *x)
checkname	.//script/lua/lua-5.3.4/src/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:	signature:(LexState *ls, expdesc *e)
checknext	.//script/lua/lua-5.3.4/src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:	signature:(LexState *ls, int c)
checkoption	.//script/lua/lua-5.3.4/src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv,$/;"	f	file:	signature:(lua_State *L, const char *conv, ptrdiff_t convlen, char *buff)
checkrepeated	.//script/lua/lua-5.3.4/src/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:	signature:(FuncState *fs, Labellist *ll, TString *label)
checkresults	.//script/lua/lua-5.3.4/src/lapi.c	/^#define checkresults(/;"	d	file:
checksize	.//script/lua/lua-5.3.4/src/lundump.c	/^#define checksize(/;"	d	file:
checkstack	.//script/lua/lua-5.3.4/src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:	signature:(lua_State *L, lua_State *L1, int n)
checkstackp	.//script/lua/lua-5.3.4/src/ldo.c	/^#define checkstackp(/;"	d	file:
checktab	.//script/lua/lua-5.3.4/src/ltablib.c	/^static void checktab (lua_State *L, int arg, int what) {$/;"	f	file:	signature:(lua_State *L, int arg, int what)
checktag	.//script/lua/lua-5.3.4/src/lobject.h	/^#define checktag(/;"	d
checktype	.//script/lua/lua-5.3.4/src/lobject.h	/^#define checktype(/;"	d
checkunsigned	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define checkunsigned(/;"	d	file:
checkupval	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:	signature:(lua_State *L, int argf, int argnup)
chgfltvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define chgfltvalue(/;"	d
chgivalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define chgivalue(/;"	d
children_	.//kit/Ref.h	/^    RefVec children_;$/;"	m	class:kit::Ref	access:private
choosePivot	.//script/lua/lua-5.3.4/src/ltablib.c	/^static IdxT choosePivot (IdxT lo, IdxT up, unsigned int rnd) {$/;"	f	file:	signature:(IdxT lo, IdxT up, unsigned int rnd)
ci	.//script/lua/lua-5.3.4/src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State	access:public
ci_func	.//script/lua/lua-5.3.4/src/ldebug.c	/^#define ci_func(/;"	d	file:
cl	.//script/lua/lua-5.3.4/src/lstate.h	/^  union Closure cl;$/;"	m	union:GCUnion	typeref:union:GCUnion::Closure	access:public
clCvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define clCvalue(/;"	d
clLvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define clLvalue(/;"	d
classend	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:	signature:(MatchState *ms, const char *p)
clear	.//base/Array.h	/^    void clear()$/;"	f	class:kit::Array	access:public	signature:()
clear	.//base/List.h	/^    void clear()$/;"	f	class:kit::List	access:public	signature:()
clear	.//base/Map.h	/^    void clear(std::function<void(ValueType&)> del_callback = nullptr)$/;"	f	class:kit::Map	access:public	signature:(std::function<void(ValueType&)> del_callback = nullptr)
clear	.//kit/BufferPool.cpp	/^void BufferPool::clear()$/;"	f	class:kit::BufferPool	signature:()
clear	.//kit/BufferPool.h	/^    void clear();$/;"	p	class:kit::BufferPool	access:public	signature:()
clear	.//kit/Emitter.h	/^    void clear()$/;"	f	class:kit::Emitter	access:public	signature:()
clear	.//kit/RefPool.cpp	/^void RefPool::clear()$/;"	f	class:kit::RefPool	signature:()
clear	.//kit/RefPool.h	/^    void clear();$/;"	p	class:kit::RefPool	access:public	signature:()
clear	.//network/Protocol.cpp	/^void PTArray::clear()$/;"	f	class:kit::PTArray	signature:()
clear	.//network/Protocol.cpp	/^void PTTable::clear()$/;"	f	class:kit::PTTable	signature:()
clear	.//network/Protocol.h	/^    virtual void clear();$/;"	p	class:kit::PTTable	access:public	signature:()
clear	.//network/Protocol.h	/^    void clear();$/;"	p	class:kit::PTArray	access:public	signature:()
clearChildren	.//kit/Ref.cpp	/^void Ref::clearChildren()$/;"	f	class:kit::Ref	signature:()
clearChildren	.//kit/Ref.h	/^    void clearChildren();$/;"	p	class:kit::Ref	access:public	signature:()
clearProtocols	.//network/Terminal.cpp	/^void Terminal::clearProtocols()$/;"	f	class:kit::Terminal	signature:()
clearProtocols	.//network/Terminal.h	/^    void clearProtocols();$/;"	p	class:kit::Terminal	access:public	signature:()
clearSessions	.//network/Terminal.cpp	/^void Terminal::clearSessions()$/;"	f	class:kit::Terminal	signature:()
clearSessions	.//network/Terminal.h	/^    void clearSessions();$/;"	p	class:kit::Terminal	access:public	signature:()
clearkeys	.//script/lua/lua-5.3.4/src/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:	signature:(global_State *g, GCObject *l, GCObject *f)
clearvalues	.//script/lua/lua-5.3.4/src/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:	signature:(global_State *g, GCObject *l, GCObject *f)
clone	.//network/Protocol.cpp	/^PTData* PTArray::clone() const$/;"	f	class:kit::PTArray	signature:() const
clone	.//network/Protocol.cpp	/^PTData* PTTable::clone() const$/;"	f	class:kit::PTTable	signature:() const
clone	.//network/Protocol.cpp	/^PTData* PTValue<T>::clone() const$/;"	f	class:kit::PTValue	signature:() const
clone	.//network/Protocol.cpp	/^PTData* PTVarint::clone() const$/;"	f	class:kit::PTVarint	signature:() const
clone	.//network/Protocol.h	/^    virtual PTData* clone() const { return NULL; }$/;"	f	class:kit::PTData	access:public	signature:() const
clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTArray	access:public	signature:() const
clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTTable	access:public	signature:() const
clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTValue	access:public	signature:() const
clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTVarint	access:public	signature:() const
cloneItem	.//network/Protocol.cpp	/^PTData* PTArray::cloneItem()$/;"	f	class:kit::PTArray	signature:()
cloneItem	.//network/Protocol.h	/^    PTData* cloneItem();$/;"	p	class:kit::PTArray	access:public	signature:()
close	.//network/Socket.cpp	/^void ISocket::close()$/;"	f	class:kit::ISocket	signature:()
close	.//network/Socket.h	/^	void close();$/;"	p	class:kit::ISocket	access:public	signature:()
close	.//network/platform/win/Socket.cpp	/^void Socket::close()$/;"	f	class:kit::Socket	signature:()
close_func	.//script/lua/lua-5.3.4/src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
close_state	.//script/lua/lua-5.3.4/src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
closef	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream	access:public
closegoto	.//script/lua/lua-5.3.4/src/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:	signature:(LexState *ls, int g, Labeldesc *label)
closelistfield	.//script/lua/lua-5.3.4/src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:	signature:(FuncState *fs, struct ConsControl *cc)
clvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define clvalue(/;"	d
co_funcs	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code	.//script/lua/lua-5.3.4/src/lobject.h	/^  Instruction *code;  \/* opcodes *\/$/;"	m	struct:Proto	access:public
code_loadbool	.//script/lua/lua-5.3.4/src/lcode.c	/^static int code_loadbool (FuncState *fs, int A, int b, int jump) {$/;"	f	file:	signature:(FuncState *fs, int A, int b, int jump)
codebinexpval	.//script/lua/lua-5.3.4/src/lcode.c	/^static void codebinexpval (FuncState *fs, OpCode op,$/;"	f	file:	signature:(FuncState *fs, OpCode op, expdesc *e1, expdesc *e2, int line)
codeclosure	.//script/lua/lua-5.3.4/src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
codecomp	.//script/lua/lua-5.3.4/src/lcode.c	/^static void codecomp (FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2) {$/;"	f	file:	signature:(FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2)
codeextraarg	.//script/lua/lua-5.3.4/src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:	signature:(FuncState *fs, int a)
codenot	.//script/lua/lua-5.3.4/src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e)
codepoint	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static int codepoint (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
codestring	.//script/lua/lua-5.3.4/src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:	signature:(LexState *ls, expdesc *e, TString *s)
codeunexpval	.//script/lua/lua-5.3.4/src/lcode.c	/^static void codeunexpval (FuncState *fs, OpCode op, expdesc *e, int line) {$/;"	f	file:	signature:(FuncState *fs, OpCode op, expdesc *e, int line)
collectargs	.//script/lua/lua-5.3.4/src/lua.c	/^static int collectargs (char **argv, int *first) {$/;"	f	file:	signature:(char **argv, int *first)
collectvalidlines	.//script/lua/lua-5.3.4/src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:	signature:(lua_State *L, Closure *f)
combine	.//script/lua/lua-5.3.4/src/luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	file:	signature:(lua_State* L, int n)
compare	.//base/Queue.h	/^        virtual bool compare(const Type&a, const Type& b) const$/;"	f	class:kit::MaxQueue	access:protected	signature:(const Type&a, const Type& b) const
compare	.//base/Queue.h	/^    virtual bool compare(const Type& a, const Type& b) const$/;"	f	class:kit::MinQueue	access:protected	signature:(const Type& a, const Type& b) const
computesizes	.//script/lua/lua-5.3.4/src/ltable.c	/^static unsigned int computesizes (unsigned int nums[], unsigned int *pna) {$/;"	f	file:	signature:(unsigned int nums[], unsigned int *pna)
cond	.//script/lua/lua-5.3.4/src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
condchangemem	.//script/lua/lua-5.3.4/src/llimits.h	/^#define condchangemem(/;"	d
condjump	.//script/lua/lua-5.3.4/src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:	signature:(FuncState *fs, OpCode op, int A, int B, int C)
condmovestack	.//script/lua/lua-5.3.4/src/llimits.h	/^#define condmovestack(/;"	d
connect	.//network/Socket.cpp	/^int32_t ISocket::connect(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
connect	.//network/Socket.h	/^	int32_t connect(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
connect	.//network/platform/win/Socket.cpp	/^int32_t Socket::connect(const sockaddr* addr)$/;"	f	class:kit::Socket	signature:(const sockaddr* addr)
constfolding	.//script/lua/lua-5.3.4/src/lcode.c	/^static int constfolding (FuncState *fs, int op, expdesc *e1,$/;"	f	file:	signature:(FuncState *fs, int op, expdesc *e1, const expdesc *e2)
constructor	.//script/lua/lua-5.3.4/src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:	signature:(LexState *ls, expdesc *t)
convergeephemerons	.//script/lua/lua-5.3.4/src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:	signature:(global_State *g)
copy2buff	.//script/lua/lua-5.3.4/src/lvm.c	/^static void copy2buff (StkId top, int n, char *buff) {$/;"	f	file:	signature:(StkId top, int n, char *buff)
copywithendian	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void copywithendian (volatile char *dest, volatile const char *src,$/;"	f	file:	signature:(volatile char *dest, volatile const char *src, int size, int islittle)
cores_	.//script/ScriptSupport.h	/^    ScriptCore* cores_[SCRIPT_TYPE_MAX];$/;"	m	class:kit::ScriptManager	access:private
correctstack	.//script/lua/lua-5.3.4/src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:	signature:(lua_State *L, TValue *oldstack)
count	.//base/Array.h	/^    int count() const { return count_; }$/;"	f	class:kit::Array	access:public	signature:() const
count	.//base/List.h	/^    int count() const { return count_; }$/;"	f	class:kit::List	access:public	signature:() const
count	.//base/QList.h	/^    int count() const$/;"	f	class:kit::QList	access:public	signature:() const
count	.//base/Queue.h	/^    int count() const { return count_; }$/;"	f	class:kit::MinQueue	access:public	signature:() const
count	.//base/Queue.h	/^    int count()$/;"	f	class:kit::Queue	access:public	signature:()
count_	.//base/Array.h	/^    int count_;$/;"	m	class:kit::Array	access:private
count_	.//base/List.h	/^    int count_;$/;"	m	class:kit::List	access:private
count_	.//base/QList.h	/^    int count_;$/;"	m	class:kit::QList	access:private
count_	.//base/Queue.h	/^    int count_;$/;"	m	class:kit::MinQueue	access:private
count_	.//base/Queue.h	/^    int count_;$/;"	m	class:kit::Queue	access:private
countint	.//script/lua/lua-5.3.4/src/ltable.c	/^static int countint (const TValue *key, unsigned int *nums) {$/;"	f	file:	signature:(const TValue *key, unsigned int *nums)
createArray	.//network/Protocol.cpp	/^PTData* PTDataCreator::createArray()$/;"	f	class:kit::PTDataCreator	signature:()
createArray	.//network/Protocol.h	/^    PTData* createArray();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
createBuffer	.//kit/BufferPool.cpp	/^Buffer* BufferPool::createBuffer(size_t size)$/;"	f	class:kit::BufferPool	signature:(size_t size)
createBuffer	.//kit/BufferPool.h	/^    Buffer* createBuffer(size_t size);$/;"	p	class:kit::BufferPool	access:public	signature:(size_t size)
createPTData	.//network/Protocol.cpp	/^PTData* PTDataCreator::createPTData(PTType type)$/;"	f	class:kit::PTDataCreator	signature:(PTType type)
createPTData	.//network/Protocol.h	/^    PTData* createPTData(PTType type);$/;"	p	class:kit::PTDataCreator	access:public	signature:(PTType type)
createTable	.//network/Protocol.cpp	/^PTData* PTDataCreator::createTable()$/;"	f	class:kit::PTDataCreator	signature:()
createTable	.//network/Protocol.h	/^    PTData* createTable();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
createValue	.//network/Protocol.cpp	/^PTData* PTDataCreator::createValue()$/;"	f	class:kit::PTDataCreator	signature:()
createValue	.//network/Protocol.h	/^    PTData* createValue();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
createVarint	.//network/Protocol.cpp	/^PTData* PTDataCreator::createVarint()$/;"	f	class:kit::PTDataCreator	signature:()
createVarint	.//network/Protocol.h	/^    PTData* createVarint();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
createargtable	.//script/lua/lua-5.3.4/src/lua.c	/^static void createargtable (lua_State *L, char **argv, int argc, int script) {$/;"	f	file:	signature:(lua_State *L, char **argv, int argc, int script)
createclibstable	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void createclibstable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
createmeta	.//script/lua/lua-5.3.4/src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
createmetatable	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
createsearcherstable	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
createstdfile	.//script/lua/lua-5.3.4/src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:	signature:(lua_State *L, FILE *f, const char *k, const char *fname)
createstrobj	.//script/lua/lua-5.3.4/src/lstring.c	/^static TString *createstrobj (lua_State *L, size_t l, int tag, unsigned int h) {$/;"	f	file:	signature:(lua_State *L, size_t l, int tag, unsigned int h)
creator_	.//script/lua/LuaProtocol.h	/^    LuaPTCreator* creator_ = nullptr;$/;"	m	class:LuaProtocol	access:private
ctb	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ctb(/;"	d
ctx	.//script/lua/lua-5.3.4/src/lstate.h	/^      lua_KContext ctx;  \/* context info. in case of yields *\/$/;"	m	struct:CallInfo::__anon18::__anon20	access:public
cur_pool_	.//kit/RefPool.h	/^    RefPool* cur_pool_;$/;"	m	class:kit::RefPoolManager	access:private
currIsNewline	.//script/lua/lua-5.3.4/src/llex.c	/^#define currIsNewline(/;"	d	file:
current	.//script/lua/lua-5.3.4/src/llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState	access:public
currentline	.//script/lua/lua-5.3.4/src/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:	signature:(CallInfo *ci)
currentline	.//script/lua/lua-5.3.4/src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
currentpc	.//script/lua/lua-5.3.4/src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:	signature:(CallInfo *ci)
currentwhite	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State	access:public
cvt2num	.//script/lua/lua-5.3.4/src/lvm.h	/^#define cvt2num(/;"	d
cvt2str	.//script/lua/lua-5.3.4/src/lvm.h	/^#define cvt2str(/;"	d
cycle	.//kit/Timer.h	/^    uint32_t cycle;$/;"	m	struct:kit::Timer::Node	access:public
d	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  double d;$/;"	m	union:Ftypes	file:	access:public
d	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
data	.//script/lua/lua-5.3.4/src/ldump.c	/^  void *data;$/;"	m	struct:__anon4	file:	access:public
data	.//script/lua/lua-5.3.4/src/lzio.h	/^  void *data;			\/* additional data *\/$/;"	m	struct:Zio	access:public
datas_	.//network/Protocol.h	/^    PTDataVec datas_;$/;"	m	class:kit::PTArray	access:protected
datas_	.//network/Protocol.h	/^    PTDataVec datas_;$/;"	m	class:kit::PTTable	access:protected
db_debug	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_gethook	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_getinfo	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_getlocal	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_getmetatable	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_getregistry	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_getupvalue	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_getuservalue	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_sethook	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_setlocal	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_setmetatable	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_setupvalue	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_setuservalue	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_traceback	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_upvalueid	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
db_upvaluejoin	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
dblib	.//script/lua/lua-5.3.4/src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
deadvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define deadvalue(/;"	d
del	.//base/Array.h	/^    void del(int index)$/;"	f	class:kit::Array	access:public	signature:(int index)
del	.//base/Map.h	/^    bool del(KeyType key, std::function<void(ValueType&)> del_callback = nullptr)$/;"	f	class:kit::Map	access:public	signature:(KeyType key, std::function<void(ValueType&)> del_callback = nullptr)
delBuffer	.//network/Packet.cpp	/^void Packet::delBuffer()$/;"	f	class:kit::Packet	signature:()
delBuffer	.//network/Packet.h	/^    void delBuffer();$/;"	p	class:kit::Packet	access:public	signature:()
delChild	.//kit/Ref.cpp	/^void Ref::delChild(Ref* child)$/;"	f	class:kit::Ref	signature:(Ref* child)
delChild	.//kit/Ref.h	/^    void delChild(Ref* obj);$/;"	p	class:kit::Ref	access:public	signature:(Ref* obj)
delCtrl	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::delCtrl(int32_t fd)$/;"	f	class:kit::Client	signature:(int32_t fd)
delCtrl	.//network/platform/linux/Client_linux.h	/^    int32_t delCtrl(int32_t fd);$/;"	p	class:kit::Client	access:protected	signature:(int32_t fd)
delCtrl	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::delCtrl(int32_t fd)$/;"	f	class:kit::Server	signature:(int32_t fd)
delCtrl	.//network/platform/linux/Server_linux.h	/^    int32_t delCtrl(int32_t fd);$/;"	p	class:kit::Server	access:protected	signature:(int32_t fd)
delData	.//network/Protocol.cpp	/^void PTTable::delData(PTData* data)$/;"	f	class:kit::PTTable	signature:(PTData* data)
delData	.//network/Protocol.h	/^    void delData(PTData* data);$/;"	p	class:kit::PTTable	access:public	signature:(PTData* data)
delProtocol	.//network/Terminal.cpp	/^void Terminal::delProtocol(ProtocolID pid)$/;"	f	class:kit::Terminal	signature:(ProtocolID pid)
delProtocol	.//network/Terminal.h	/^    void delProtocol(ProtocolID pid);$/;"	p	class:kit::Terminal	access:public	signature:(ProtocolID pid)
delRef	.//kit/RefPool.cpp	/^void RefPool::delRef(Ref* ref)$/;"	f	class:kit::RefPool	signature:(Ref* ref)
delRef	.//kit/RefPool.h	/^    void delRef(Ref* ref);$/;"	p	class:kit::RefPool	access:public	signature:(Ref* ref)
delSession	.//network/Terminal.cpp	/^void Terminal::delSession(SessionID sid)$/;"	f	class:kit::Terminal	signature:(SessionID sid)
delSession	.//network/Terminal.h	/^    void delSession(SessionID sid);$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid)
delSocket	.//network/Server.cpp	/^int32_t IServer::delSocket(SocketID fd)$/;"	f	class:kit::IServer	signature:(SocketID fd)
delSocket	.//network/Server.h	/^    virtual int32_t delSocket(SocketID fd);$/;"	p	class:kit::IServer	access:protected	signature:(SocketID fd)
delTimer	.//kit/Timer.cpp	/^void Timer::delTimer(uint32_t id)$/;"	f	class:kit::Timer	signature:(uint32_t id)
delTimer	.//kit/Timer.h	/^    void delTimer(uint32_t id);$/;"	p	class:kit::Timer	access:public	signature:(uint32_t id)
del_socket_mutex_	.//network/Server.h	/^    Mutex* del_socket_mutex_;$/;"	m	class:kit::IServer	access:protected
delay	.//kit/Timer.h	/^        uint32_t delay;$/;"	m	union:kit::Timer::Node::__anon3	access:public
deleted	.//kit/Emitter.h	/^        bool deleted;$/;"	m	struct:kit::Emitter::__anon1	access:public
deleted	.//network/Socket.h	/^    bool deleted;$/;"	m	class:kit::ISocket	access:public
destroy	.//script/ScriptSupport.h	/^    virtual void destroy() {}$/;"	f	class:kit::ScriptCore	access:public	signature:()
destroy	.//script/js/JSCore.cpp	/^void JSCore::destroy()$/;"	f	class:JSCore	signature:()
destroy	.//script/js/JSCore.h	/^    virtual void destroy();$/;"	p	class:JSCore	access:public	signature:()
destroy	.//script/lua/LuaCore.cpp	/^void LuaCore::destroy()$/;"	f	class:LuaCore	signature:()
destroy	.//script/lua/LuaCore.h	/^    virtual void destroy();$/;"	p	class:LuaCore	access:public	signature:()
destroyBuffer	.//kit/BufferPool.cpp	/^void BufferPool::destroyBuffer(Buffer* buffer)$/;"	f	class:kit::BufferPool	signature:(Buffer* buffer)
destroyBuffer	.//kit/BufferPool.h	/^    void destroyBuffer(Buffer* buffer);$/;"	p	class:kit::BufferPool	access:public	signature:(Buffer* buffer)
destroyInstance	.//base/Singleton.h	/^    static void destroyInstance(void)$/;"	f	class:kit::Singleton	access:public	signature:(void)
digit	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int digit (int c) { return '0' <= c && c <= '9'; }$/;"	f	file:	signature:(int c)
discharge2anyreg	.//script/lua/lua-5.3.4/src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e)
discharge2reg	.//script/lua/lua-5.3.4/src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e, int reg)
dischargejpc	.//script/lua/lua-5.3.4/src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:	signature:(FuncState *fs)
doREPL	.//script/lua/lua-5.3.4/src/lua.c	/^static void doREPL (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
doRecv	.//network/Socket.cpp	/^int32_t ISocket::doRecv()$/;"	f	class:kit::ISocket	signature:()
doRecv	.//network/Socket.h	/^    int32_t doRecv();$/;"	p	class:kit::ISocket	access:protected	signature:()
doSend	.//network/Socket.cpp	/^int32_t ISocket::doSend()$/;"	f	class:kit::ISocket	signature:()
doSend	.//network/Socket.h	/^    int32_t doSend();$/;"	p	class:kit::ISocket	access:protected	signature:()
doargs	.//script/lua/lua-5.3.4/src/luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	file:	signature:(int argc, char* argv[])
docall	.//script/lua/lua-5.3.4/src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:	signature:(lua_State *L, int narg, int nres)
dochunk	.//script/lua/lua-5.3.4/src/lua.c	/^static int dochunk (lua_State *L, int status) {$/;"	f	file:	signature:(lua_State *L, int status)
dofile	.//script/lua/lua-5.3.4/src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:	signature:(lua_State *L, const char *name)
dofilecont	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int dofilecont (lua_State *L, int d1, lua_KContext d2) {$/;"	f	file:	signature:(lua_State *L, int d1, lua_KContext d2)
dojump	.//script/lua/lua-5.3.4/src/lvm.c	/^#define dojump(/;"	d	file:
dolibrary	.//script/lua/lua-5.3.4/src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:	signature:(lua_State *L, const char *name)
donextjump	.//script/lua/lua-5.3.4/src/lvm.c	/^#define donextjump(/;"	d	file:
dooptions	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:	signature:(lua_State *L, int n)
dostring	.//script/lua/lua-5.3.4/src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:	signature:(lua_State *L, const char *s, const char *name)
dothecall	.//script/lua/lua-5.3.4/src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
dummy	.//script/lua/lua-5.3.4/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for 'local' udata *\/$/;"	m	union:UUdata	access:public
dummy	.//script/lua/lua-5.3.4/src/lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:UTString	access:public
dummy	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int dummy;$/;"	m	union:__anon22	file:	access:public
dummynode	.//script/lua/lua-5.3.4/src/ltable.c	/^#define dummynode	/;"	d	file:
dummynode_	.//script/lua/lua-5.3.4/src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dumping	.//script/lua/lua-5.3.4/src/luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	file:
dyd	.//script/lua/lua-5.3.4/src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:	access:public
dyd	.//script/lua/lua-5.3.4/src/llex.h	/^  struct Dyndata *dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:LexState	typeref:struct:LexState::Dyndata	access:public
emit	.//kit/Emitter.h	/^    void emit(int event_id, const Event* event)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, const Event* event)
emptyItem	.//base/Array.h	/^    void emptyItem(Item& item)$/;"	f	class:kit::Array	access:private	signature:(Item& item)
end	.//Gear.cpp	/^void Gear::end()$/;"	f	class:kit::Gear	signature:()
end	.//Gear.h	/^    virtual void end();$/;"	p	class:kit::Gear	access:public	signature:()
end	.//base/Array.h	/^    Iterator end()$/;"	f	class:kit::Array	access:public	signature:()
end	.//base/List.h	/^    Iterator end() const$/;"	f	class:kit::List	access:public	signature:() const
end_capture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p)
endpc	.//script/lua/lua-5.3.4/src/lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar	access:public
enterblock	.//script/lua/lua-5.3.4/src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:	signature:(FuncState *fs, BlockCnt *bl, lu_byte isloop)
enterlevel	.//script/lua/lua-5.3.4/src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
entersweep	.//script/lua/lua-5.3.4/src/lgc.c	/^static void entersweep (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
envn	.//script/lua/lua-5.3.4/src/llex.h	/^  TString *envn;  \/* environment variable name *\/$/;"	m	struct:LexState	access:public
ephemeron	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State	access:public
eqshrstr	.//script/lua/lua-5.3.4/src/lstring.h	/^#define eqshrstr(/;"	d
eqstr	.//script/lua/lua-5.3.4/src/lparser.c	/^#define eqstr(/;"	d	file:
erase	.//base/List.h	/^    bool erase(int index)$/;"	f	class:kit::List	access:public	signature:(int index)
errfile	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:	signature:(lua_State *L, const char *what, int fnameindex)
errfunc	.//script/lua/lua-5.3.4/src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State	access:public
error	.//script/lua/lua-5.3.4/src/lundump.c	/^static l_noret error(LoadState *S, const char *why) {$/;"	f	file:	signature:(LoadState *S, const char *why)
errorJmp	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp	access:public
error_expected	.//script/lua/lua-5.3.4/src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:	signature:(LexState *ls, int token)
errorlimit	.//script/lua/lua-5.3.4/src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:	signature:(FuncState *fs, int limit, const char *what)
errorstatus	.//script/lua/lua-5.3.4/src/ldo.c	/^#define errorstatus(/;"	d	file:
esccheck	.//script/lua/lua-5.3.4/src/llex.c	/^static void esccheck (LexState *ls, int c, const char *msg) {$/;"	f	file:	signature:(LexState *ls, int c, const char *msg)
event	.//script/lua/lua-5.3.4/src/lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
event_id	.//kit/Emitter.h	/^    int event_id;$/;"	m	class:kit::Event	access:public
event_que_	.//network/Client.h	/^    EventQue event_que_;$/;"	m	class:kit::IClient	access:protected
event_que_	.//network/Server.h	/^    EventQue event_que_;$/;"	m	class:kit::IServer	access:protected
events	.//network/netsys.h	/^    int32_t events;$/;"	m	struct:kit::PollEvent	access:public
exchange	.//base/Queue.h	/^    void exchange(int index1, int index2)$/;"	f	class:kit::MinQueue	access:protected	signature:(int index1, int index2)
executeFile	.//script/ScriptSupport.h	/^    virtual int executeFile(const char* file_name) = 0;$/;"	p	class:kit::ScriptCore	access:public	signature:(const char* file_name)
executeFile	.//script/js/JSCore.cpp	/^int JSCore::executeFile(const char* filename)$/;"	f	class:JSCore	signature:(const char* filename)
executeFile	.//script/js/JSCore.h	/^    virtual int executeFile(const char* filename);$/;"	p	class:JSCore	access:public	signature:(const char* filename)
executeFile	.//script/lua/LuaCore.cpp	/^int LuaCore::executeFile(const char* file_name)$/;"	f	class:LuaCore	signature:(const char* file_name)
executeFile	.//script/lua/LuaCore.h	/^    virtual int executeFile(const char* filename);$/;"	p	class:LuaCore	access:public	signature:(const char* filename)
executeFunc	.//script/lua/LuaCore.cpp	/^int LuaCore::executeFunc(int arg_num)$/;"	f	class:LuaCore	signature:(int arg_num)
executeFunc	.//script/lua/LuaCore.h	/^    int executeFunc(int arg_num);$/;"	p	class:LuaCore	access:protected	signature:(int arg_num)
executeFunction	.//script/ScriptSupport.h	/^    virtual int executeFunction(const char* function_name) = 0;$/;"	p	class:kit::ScriptCore	access:public	signature:(const char* function_name)
executeFunction	.//script/js/JSCore.cpp	/^int JSCore::executeFunction(const char* function_name)$/;"	f	class:JSCore	signature:(const char* function_name)
executeFunction	.//script/js/JSCore.h	/^    virtual int executeFunction(const char* function_name);$/;"	p	class:JSCore	access:public	signature:(const char* function_name)
executeFunction	.//script/lua/LuaCore.cpp	/^int LuaCore::executeFunction(const char* function_name)$/;"	f	class:LuaCore	signature:(const char* function_name)
executeFunction	.//script/lua/LuaCore.h	/^    virtual int executeFunction(const char* function_name);$/;"	p	class:LuaCore	access:public	signature:(const char* function_name)
executeString	.//script/ScriptSupport.h	/^    virtual int executeString(const char* codes) = 0;$/;"	p	class:kit::ScriptCore	access:public	signature:(const char* codes)
executeString	.//script/js/JSCore.cpp	/^int JSCore::executeString(const char* codes)$/;"	f	class:JSCore	signature:(const char* codes)
executeString	.//script/js/JSCore.h	/^    virtual int executeString(const char* codes);$/;"	p	class:JSCore	access:public	signature:(const char* codes)
executeString	.//script/lua/LuaCore.cpp	/^int LuaCore::executeString(const char* codes)$/;"	f	class:LuaCore	signature:(const char* codes)
executeString	.//script/lua/LuaCore.h	/^    virtual int executeString(const char* codes);$/;"	p	class:LuaCore	access:public	signature:(const char* codes)
exists	.//base/Singleton.h	/^    static bool exists(void)$/;"	f	class:kit::Singleton	access:public	signature:(void)
exp1	.//script/lua/lua-5.3.4/src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
exp2reg	.//script/lua/lua-5.3.4/src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e, int reg)
expandBuffer	.//kit/Buffer.cpp	/^bool Buffer::expandBuffer(size_t required_capacity)$/;"	f	class:kit::Buffer	signature:(size_t required_capacity)
expandBuffer	.//kit/Buffer.h	/^	bool expandBuffer(size_t require_size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t require_size)
expdesc	.//script/lua/lua-5.3.4/src/lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	.//script/lua/lua-5.3.4/src/lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expdesc::__anon15::__anon16::idx	.//script/lua/lua-5.3.4/src/lparser.h	/^      short idx;  \/* index (R\/K) *\/$/;"	m	struct:expdesc::__anon15::__anon16	access:public
expdesc::__anon15::__anon16::t	.//script/lua/lua-5.3.4/src/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon15::__anon16	access:public
expdesc::__anon15::__anon16::vt	.//script/lua/lua-5.3.4/src/lparser.h	/^      lu_byte vt;  \/* whether 't' is register (VLOCAL) or upvalue (VUPVAL) *\/$/;"	m	struct:expdesc::__anon15::__anon16	access:public
expdesc::__anon15::ind	.//script/lua/lua-5.3.4/src/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon15	typeref:struct:expdesc::__anon15::__anon16	access:public
expdesc::__anon15::info	.//script/lua/lua-5.3.4/src/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon15	access:public
expdesc::__anon15::ival	.//script/lua/lua-5.3.4/src/lparser.h	/^    lua_Integer ival;    \/* for VKINT *\/$/;"	m	union:expdesc::__anon15	access:public
expdesc::__anon15::nval	.//script/lua/lua-5.3.4/src/lparser.h	/^    lua_Number nval;  \/* for VKFLT *\/$/;"	m	union:expdesc::__anon15	access:public
expdesc::f	.//script/lua/lua-5.3.4/src/lparser.h	/^  int f;  \/* patch list of 'exit when false' *\/$/;"	m	struct:expdesc	access:public
expdesc::k	.//script/lua/lua-5.3.4/src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc	access:public
expdesc::t	.//script/lua/lua-5.3.4/src/lparser.h	/^  int t;  \/* patch list of 'exit when true' *\/$/;"	m	struct:expdesc	access:public
expdesc::u	.//script/lua/lua-5.3.4/src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon15	access:public
expkind	.//script/lua/lua-5.3.4/src/lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon14
explist	.//script/lua/lua-5.3.4/src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
expr	.//script/lua/lua-5.3.4/src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
expr	.//script/lua/lua-5.3.4/src/lparser.c	/^static void expr (LexState *ls, expdesc *v);$/;"	p	file:	signature:(LexState *ls, expdesc *v)
exprstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
extra	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte extra;  \/* reserved words for short strings; "has hash" for longs *\/$/;"	m	struct:TString	access:public
extra	.//script/lua/lua-5.3.4/src/lstate.h	/^  ptrdiff_t extra;$/;"	m	struct:CallInfo	access:public
extra_	.//script/lua/lua-5.3.4/src/lstate.c	/^  lu_byte extra_[LUA_EXTRASPACE];$/;"	m	struct:LX	file:	access:public
f	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:	access:public
f	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream	access:public
f	.//script/lua/lua-5.3.4/src/liolib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:__anon7	file:	access:public
f	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_CFunction f; \/* light C functions *\/$/;"	m	union:Value	access:public
f	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure	access:public
f	.//script/lua/lua-5.3.4/src/lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState	access:public
f	.//script/lua/lua-5.3.4/src/lparser.h	/^  int f;  \/* patch list of 'exit when false' *\/$/;"	m	struct:expdesc	access:public
f	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  float f;$/;"	m	union:Ftypes	file:	access:public
f_call	.//script/lua/lua-5.3.4/src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
f_flush	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_gc	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_lines	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_luaopen	.//script/lua/lua-5.3.4/src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
f_parser	.//script/lua/lua-5.3.4/src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
f_read	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_seek	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_setvbuf	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_tostring	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
f_write	.//script/lua/lua-5.3.4/src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
fasttm	.//script/lua/lua-5.3.4/src/ltm.h	/^#define fasttm(/;"	d
fatal	.//script/lua/lua-5.3.4/src/luac.c	/^static void fatal(const char* message)$/;"	f	file:	signature:(const char* message)
fchecksize	.//script/lua/lua-5.3.4/src/lundump.c	/^static void fchecksize (LoadState *S, size_t size, const char *tname) {$/;"	f	file:	signature:(LoadState *S, size_t size, const char *tname)
fd	.//network/netsys.h	/^    int32_t fd;$/;"	m	struct:kit::PollEvent	access:public
field	.//script/lua/lua-5.3.4/src/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:	signature:(LexState *ls, struct ConsControl *cc)
fieldargs	.//script/lua/lua-5.3.4/src/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:	signature:(lua_State *L, int farg, int *width)
fieldsel	.//script/lua/lua-5.3.4/src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
filterpc	.//script/lua/lua-5.3.4/src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:	signature:(int pc, int jmptarget)
findfield	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:	signature:(lua_State *L, int objidx, int level)
findfile	.//script/lua/lua-5.3.4/src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:	signature:(lua_State *L, const char *name, const char *pname, const char *dirsep)
findgotos	.//script/lua/lua-5.3.4/src/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:	signature:(LexState *ls, Labeldesc *lb)
findindex	.//script/lua/lua-5.3.4/src/ltable.c	/^static unsigned int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:	signature:(lua_State *L, Table *t, StkId key)
findlabel	.//script/lua/lua-5.3.4/src/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:	signature:(LexState *ls, int g)
findlast	.//script/lua/lua-5.3.4/src/lgc.c	/^static GCObject **findlast (GCObject **p) {$/;"	f	file:	signature:(GCObject **p)
findloader	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:	signature:(lua_State *L, const char *name)
findlocal	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:	signature:(lua_State *L, CallInfo *ci, int n, StkId *pos)
findpcall	.//script/lua/lua-5.3.4/src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
findsetreg	.//script/lua/lua-5.3.4/src/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:	signature:(Proto *p, int lastpc, int reg)
findvararg	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:	signature:(CallInfo *ci, int n, StkId *pos)
finishCcall	.//script/lua/lua-5.3.4/src/ldo.c	/^static void finishCcall (lua_State *L, int status) {$/;"	f	file:	signature:(lua_State *L, int status)
finishpcall	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int finishpcall (lua_State *L, int status, lua_KContext extra) {$/;"	f	file:	signature:(lua_State *L, int status, lua_KContext extra)
finobj	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State	access:public
firstgoto	.//script/lua/lua-5.3.4/src/lparser.c	/^  int firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:	access:public
firstlabel	.//script/lua/lua-5.3.4/src/lparser.c	/^  int firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:	access:public
firstlocal	.//script/lua/lua-5.3.4/src/lparser.h	/^  int firstlocal;  \/* index of first local var (in Dyndata array) *\/$/;"	m	struct:FuncState	access:public
fixedgc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *fixedgc;  \/* list of objects not to be collected *\/$/;"	m	struct:global_State	access:public
fixjump	.//script/lua/lua-5.3.4/src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:	signature:(FuncState *fs, int pc, int dest)
flags	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/$/;"	m	struct:Table	access:public
flib	.//script/lua/lua-5.3.4/src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
fltvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define fltvalue(/;"	d
flush	.//network/Session.cpp	/^bool Session::flush()$/;"	f	class:kit::Session	signature:()
flush	.//network/Session.h	/^    bool flush();$/;"	p	class:kit::Session	access:public	signature:()
flushRecv	.//network/Socket.cpp	/^int32_t ISocket::flushRecv()$/;"	f	class:kit::ISocket	signature:()
flushRecv	.//network/Socket.h	/^	int32_t flushRecv();$/;"	p	class:kit::ISocket	access:public	signature:()
flushSend	.//network/Socket.cpp	/^int32_t ISocket::flushSend()$/;"	f	class:kit::ISocket	signature:()
flushSend	.//network/Socket.h	/^	int32_t flushSend();$/;"	p	class:kit::ISocket	access:public	signature:()
forbody	.//script/lua/lua-5.3.4/src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:	signature:(LexState *ls, int base, int line, int nvars, int isnum)
forlimit	.//script/lua/lua-5.3.4/src/lvm.c	/^static int forlimit (const TValue *obj, lua_Integer *p, lua_Integer step,$/;"	f	file:	signature:(const TValue *obj, lua_Integer *p, lua_Integer step, int *stopnow)
forlist	.//script/lua/lua-5.3.4/src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:	signature:(LexState *ls, TString *indexname)
formatString	.//kit/Functions.cpp	/^std::string formatString(const char* format, ...)$/;"	f	namespace:kit	signature:(const char* format, ...)
formatString	.//kit/Functions.h	/^std::string formatString(const char* format, ...);$/;"	p	namespace:kit	signature:(const char* format, ...)
fornum	.//script/lua/lua-5.3.4/src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:	signature:(LexState *ls, TString *varname, int line)
forstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:	signature:(LexState *ls, int line)
frame_	.//Gear.h	/^    uint32_t frame_;$/;"	m	class:kit::Gear	access:protected
frame_delta_	.//Gear.h	/^    uint32_t frame_delta_;$/;"	m	class:kit::Gear	access:protected
frame_msec_	.//Gear.h	/^    uint32_t frame_msec_;$/;"	m	class:kit::Gear	access:protected
frame_rate_	.//Gear.h	/^    uint32_t frame_rate_;$/;"	m	class:kit::Gear	access:protected
frealloc	.//script/lua/lua-5.3.4/src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State	access:public
freeLclosure	.//script/lua/lua-5.3.4/src/lgc.c	/^static void freeLclosure (lua_State *L, LClosure *cl) {$/;"	f	file:	signature:(lua_State *L, LClosure *cl)
freeexp	.//script/lua/lua-5.3.4/src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e)
freeexps	.//script/lua/lua-5.3.4/src/lcode.c	/^static void freeexps (FuncState *fs, expdesc *e1, expdesc *e2) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e1, expdesc *e2)
freelist	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define freelist	/;"	d	file:
freeobj	.//script/lua/lua-5.3.4/src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:	signature:(lua_State *L, GCObject *o)
freereg	.//script/lua/lua-5.3.4/src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:	signature:(FuncState *fs, int reg)
freereg	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte freereg;  \/* first free register *\/$/;"	m	struct:FuncState	access:public
freestack	.//script/lua/lua-5.3.4/src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
fromstate	.//script/lua/lua-5.3.4/src/lstate.c	/^#define fromstate(/;"	d	file:
front	.//base/List.h	/^    bool front(Type& value)$/;"	f	class:kit::List	access:public	signature:(Type& value)
front	.//base/QList.h	/^    bool front(Type& value)$/;"	f	class:kit::QList	access:public	signature:(Type& value)
front	.//base/Queue.h	/^    bool front(Type& value)$/;"	f	class:kit::MinQueue	access:public	signature:(Type& value)
front	.//base/Queue.h	/^    bool front(Type& value)$/;"	f	class:kit::Queue	access:public	signature:(Type& value)
fs	.//script/lua/lua-5.3.4/src/llex.h	/^  struct FuncState *fs;  \/* current function (parser) *\/$/;"	m	struct:LexState	typeref:struct:LexState::FuncState	access:public
func	.//script/lua/lua-5.3.4/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:	access:public
func	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	access:public
func	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo	access:public
funcargs	.//script/lua/lua-5.3.4/src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:	signature:(LexState *ls, expdesc *f, int line)
funcinfo	.//script/lua/lua-5.3.4/src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:	signature:(lua_Debug *ar, Closure *cl)
funcname	.//script/lua/lua-5.3.4/src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
funcnamefromcode	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *funcnamefromcode (lua_State *L, CallInfo *ci,$/;"	f	file:	signature:(lua_State *L, CallInfo *ci, const char **name)
funcnamefromcode	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *funcnamefromcode (lua_State *L, CallInfo *ci,$/;"	p	file:	signature:(lua_State *L, CallInfo *ci, const char **name)
funcs	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static const luaL_Reg funcs[] = {$/;"	v	file:
funcstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:	signature:(LexState *ls, int line)
fvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define fvalue(/;"	d
g	.//script/lua/lua-5.3.4/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:	access:public
g_BufPool	.//kit/BufferPool.h	/^#define g_BufPool /;"	d
g_BufPoolMng	.//kit/BufferPool.h	/^#define g_BufPoolMng /;"	d
g_BufPoolThread	.//kit/BufferPool.h	/^#define g_BufPoolThread /;"	d
g_Debug	.//debug/DebugInput.h	/^#define g_Debug /;"	d
g_Gear	.//Gear.h	/^#define g_Gear /;"	d
g_Log	.//kit/Logger.h	/^#define g_Log /;"	d
g_RefPool	.//kit/RefPool.h	/^#define g_RefPool /;"	d
g_ScriptManager	.//script/ScriptSupport.h	/^#define g_ScriptManager /;"	d
g_iofile	.//script/lua/lua-5.3.4/src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:	signature:(lua_State *L, const char *f, const char *mode)
g_read	.//script/lua/lua-5.3.4/src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:	signature:(lua_State *L, FILE *f, int first)
g_write	.//script/lua/lua-5.3.4/src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:	signature:(lua_State *L, FILE *f, int arg)
gc	.//script/lua/lua-5.3.4/src/lobject.h	/^  GCObject *gc;    \/* collectable objects *\/$/;"	m	union:Value	access:public
gc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject gc;  \/* common header *\/$/;"	m	union:GCUnion	access:public
gcfinnum	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned int gcfinnum;  \/* number of finalizers to call in each GC step *\/$/;"	m	struct:global_State	access:public
gckind	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State	access:public
gclist	.//script/lua/lua-5.3.4/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto	access:public
gclist	.//script/lua/lua-5.3.4/src/lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table	access:public
gclist	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State	access:public
gco2ccl	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2ccl(/;"	d
gco2cl	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2cl(/;"	d
gco2lcl	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2lcl(/;"	d
gco2p	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2p(/;"	d
gco2t	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2t(/;"	d
gco2th	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2th(/;"	d
gco2ts	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2ts(/;"	d
gco2u	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gco2u(/;"	d
gcpause	.//script/lua/lua-5.3.4/src/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State	access:public
gcrunning	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State	access:public
gcstate	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State	access:public
gcstepmul	.//script/lua/lua-5.3.4/src/lstate.h	/^  int gcstepmul;  \/* GC 'granularity' *\/$/;"	m	struct:global_State	access:public
gctm	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
gcvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define gcvalue(/;"	d
generic_reader	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:	signature:(lua_State *L, void *ud, size_t *size)
get	.//base/Array.h	/^    bool get(int index, Type& val)$/;"	f	class:kit::Array	access:public	signature:(int index, Type& val)
get	.//base/Map.h	/^    bool get(KeyType key, ValueType& v) const$/;"	f	class:kit::Map	access:public	signature:(KeyType key, ValueType& v) const
getAPI	.//kit/Logger.cpp	/^Logger::LoggerAPI Logger::getAPI(int t)$/;"	f	class:kit::Logger	signature:(int t)
getAPI	.//kit/Logger.h	/^    LoggerAPI getAPI(int t);$/;"	p	class:kit::Logger	access:public	signature:(int t)
getAddr	.//network/Socket.h	/^    SockAddr* getAddr() const { return addr_; }$/;"	f	class:kit::ISocket	access:public	signature:() const
getBMode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define getBMode(/;"	d
getBudgetSize	.//network/Protocol.h	/^    size_t getBudgetSize() const { return budget_size_; }$/;"	f	class:kit::Protocol	access:public	signature:() const
getBuffer	.//network/Packet.h	/^    Buffer* getBuffer() const { return buf_; }$/;"	f	class:kit::Packet	access:public	signature:() const
getCMode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define getCMode(/;"	d
getCapacity	.//kit/Buffer.h	/^    size_t getCapacity() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
getCapacity	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getCapacity() const$/;"	f	class:kit::Buffer	signature:() const
getCore	.//script/ScriptSupport.h	/^    virtual ScriptCore* getCore(ScriptType type) const { return cores_[type]; }$/;"	f	class:kit::ScriptManager	access:public	signature:(ScriptType type) const
getCurrentPool	.//kit/RefPool.h	/^    RefPool* getCurrentPool() const { return cur_pool_; }$/;"	f	class:kit::RefPoolManager	access:public	signature:() const
getDatas	.//network/Protocol.h	/^    const PTDataVec& getDatas() const { return datas_; }$/;"	f	class:kit::PTArray	access:public	signature:() const
getDatas	.//network/Protocol.h	/^    const PTDataVec& getDatas() const { return datas_; }$/;"	f	class:kit::PTTable	access:public	signature:() const
getErrno	.//network/Socket.cpp	/^int32_t ISocket::getErrno()$/;"	f	class:kit::ISocket	signature:()
getErrno	.//network/Socket.h	/^	int32_t getErrno();$/;"	p	class:kit::ISocket	access:public	signature:()
getErrno	.//network/platform/win/Socket.cpp	/^int32_t Socket::getErrno()$/;"	f	class:kit::Socket	signature:()
getF	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:	signature:(lua_State *L, void *ud, size_t *size)
getFrame	.//Gear.h	/^    uint32_t getFrame() const { return frame_; }$/;"	f	class:kit::Gear	access:public	signature:() const
getFrameDelta	.//Gear.h	/^    uint32_t getFrameDelta() const { return frame_delta_; }$/;"	f	class:kit::Gear	access:public	signature:() const
getFrameRate	.//Gear.h	/^    uint32_t getFrameRate() const { return frame_rate_; }$/;"	f	class:kit::Gear	access:public	signature:() const
getHandle	.//network/Socket.h	/^	inline SocketID getHandle() const { return sock_; }$/;"	f	class:kit::ISocket	access:public	signature:() const
getID	.//network/Session.h	/^    SessionID getID() const { return sid_; }$/;"	f	class:kit::Session	access:public	signature:() const
getKey	.//network/Protocol.h	/^    const std::string& getKey() const { return key_; }$/;"	f	class:kit::PTData	access:public	signature:() const
getLength	.//network/Packet.h	/^    uint16_t getLength() const { return header_.length; }$/;"	f	class:kit::Packet	access:public	signature:() const
getOpMode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define getOpMode(/;"	d
getOption	.//network/Socket.cpp	/^int32_t ISocket::getOption(int32_t level, int32_t optname, char* optval, int32_t* optlen)$/;"	f	class:kit::ISocket	signature:(int32_t level, int32_t optname, char* optval, int32_t* optlen)
getOption	.//network/Socket.h	/^	int32_t getOption(int32_t level, int32_t optname, char* optval, int32_t* optlen);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t level, int32_t optname, char* optval, int32_t* optlen)
getOption	.//network/platform/win/Socket.cpp	/^int32_t Socket::getOption(int32_t level, int32_t optname, char* optval, int32_t* optlen)$/;"	f	class:kit::Socket	signature:(int32_t level, int32_t optname, char* optval, int32_t* optlen)
getPID	.//network/Packet.h	/^    uint16_t getPID() const { return header_.pid; }$/;"	f	class:kit::Packet	access:public	signature:() const
getPID	.//network/Protocol.h	/^    int32_t getPID() const { return pid_; }$/;"	f	class:kit::Protocol	access:public	signature:() const
getPool	.//kit/BufferPool.h	/^    BufferPool* getPool() const { return pool_; }$/;"	f	class:kit::BufferPoolManager	access:public	signature:() const
getProtocol	.//network/Terminal.cpp	/^Protocol* Terminal::getProtocol(ProtocolID pid) const$/;"	f	class:kit::Terminal	signature:(ProtocolID pid) const
getProtocol	.//network/Terminal.h	/^    Protocol* getProtocol(ProtocolID pid) const;$/;"	p	class:kit::Terminal	access:public	signature:(ProtocolID pid) const
getReadSize	.//kit/Buffer.h	/^	size_t getReadSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
getReadSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getReadSize() const$/;"	f	class:kit::Buffer	signature:() const
getReadableSize	.//kit/Buffer.h	/^    size_t getReadableSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
getReadableSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getReadableSize() const$/;"	f	class:kit::Buffer	signature:() const
getRecvPackets	.//network/Session.h	/^    PacketQue& getRecvPackets() { return recv_packets_; }$/;"	f	class:kit::Session	access:public	signature:()
getRecvQueue	.//network/Socket.h	/^    PacketQue& getRecvQueue() { return recv_que_; }$/;"	f	class:kit::ISocket	access:public	signature:()
getReferenceCount	.//kit/Ref.h	/^    unsigned int getReferenceCount() const { return reference_count_; };$/;"	f	class:kit::Ref	access:public	signature:() const
getS	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:	signature:(lua_State *L, void *ud, size_t *size)
getScriptDir	.//script/ScriptSupport.h	/^    virtual const char* getScriptDir() { return path_.c_str(); }$/;"	f	class:kit::ScriptCore	access:public	signature:()
getScriptType	.//script/ScriptSupport.h	/^    virtual ScriptType getScriptType() { return SCRIPT_TYPE_NONE; }$/;"	f	class:kit::ScriptCore	access:public	signature:()
getScriptType	.//script/js/JSCore.h	/^    virtual ScriptType getScriptType() const { return SCRIPT_TYPE_JAVASCRIPT; }$/;"	f	class:JSCore	access:public	signature:() const
getScriptType	.//script/lua/LuaCore.h	/^    virtual kit::ScriptType getScriptType() const { return kit::SCRIPT_TYPE_JAVASCRIPT; }$/;"	f	class:LuaCore	access:public	signature:() const
getSeed	.//network/Packet.h	/^    uint16_t getSeed() const { return header_.seed; }$/;"	f	class:kit::Packet	access:public	signature:() const
getSendPackets	.//network/Session.h	/^    PacketQue& getSendPackets() { return send_packets_; }$/;"	f	class:kit::Session	access:public	signature:()
getSession	.//network/Socket.h	/^    Session* getSession() const { return session_; }$/;"	f	class:kit::ISocket	access:public	signature:() const
getSession	.//network/Terminal.cpp	/^Session* Terminal::getSession(SessionID sid) const$/;"	f	class:kit::Terminal	signature:(SessionID sid) const
getSession	.//network/Terminal.h	/^    Session* getSession(SessionID sid) const;$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid) const
getSize	.//kit/Buffer.h	/^    size_t getSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
getSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getSize() const$/;"	f	class:kit::Buffer	signature:() const
getSocket	.//network/Server.cpp	/^Socket* IServer::getSocket(SocketID fd)$/;"	f	class:kit::IServer	signature:(SocketID fd)
getSocket	.//network/Server.h	/^    Socket* getSocket(int32_t fd);$/;"	p	class:kit::IServer	access:protected	signature:(int32_t fd)
getSocket	.//network/Session.h	/^    Socket* getSocket() const { return socket_; }$/;"	f	class:kit::Session	access:public	signature:() const
getThreadPool	.//kit/BufferPool.h	/^    BufferPool* getThreadPool() const { return thread_pool_; }$/;"	f	class:kit::BufferPoolManager	access:public	signature:() const
getType	.//network/Protocol.h	/^    virtual PTType getType() const { return PTType::ARRAY; }$/;"	f	class:kit::PTArray	access:public	signature:() const
getType	.//network/Protocol.h	/^    virtual PTType getType() const { return PTType::NONE; }$/;"	f	class:kit::PTData	access:public	signature:() const
getType	.//network/Protocol.h	/^    virtual PTType getType() const { return PTType::TABLE; }$/;"	f	class:kit::PTTable	access:public	signature:() const
getType	.//network/Protocol.h	/^    virtual PTType getType() const { return type_; }$/;"	f	class:kit::PTValue	access:public	signature:() const
getValue	.//network/Protocol.h	/^    const T& getValue() const { return value_; }$/;"	f	class:kit::PTValue	access:public	signature:() const
getWritableSize	.//kit/Buffer.h	/^    size_t getWritableSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
getWritableSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getWritableSize() const$/;"	f	class:kit::Buffer	signature:() const
getWrittenSize	.//kit/Buffer.h	/^    size_t getWrittenSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
getWrittenSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getWrittenSize() const$/;"	f	class:kit::Buffer	signature:() const
get_cpu_tick	.//kit/kitsys.cpp	/^static uint64_t get_cpu_tick()$/;"	f	namespace:kit	signature:()
get_num_from_sysfile	.//kit/kitsys.cpp	/^static int64_t get_num_from_sysfile( const char* _name, const char* _head )$/;"	f	namespace:kit	signature:( const char* _name, const char* _head )
get_prompt	.//script/lua/lua-5.3.4/src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:	signature:(lua_State *L, int firstline)
getarg	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define getarg(/;"	d
getbinopr	.//script/lua/lua-5.3.4/src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:	signature:(int op)
getboolfield	.//script/lua/lua-5.3.4/src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:	signature:(lua_State *L, const char *key)
getcached	.//script/lua/lua-5.3.4/src/lvm.c	/^static LClosure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:	signature:(Proto *p, UpVal **encup, StkId base)
getco	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static lua_State *getco (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
getdebt	.//script/lua/lua-5.3.4/src/lgc.c	/^static l_mem getdebt (global_State *g) {$/;"	f	file:	signature:(global_State *g)
getdetails	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static KOption getdetails (Header *h, size_t totalsize,$/;"	f	file:	signature:(Header *h, size_t totalsize, const char **fmt, int *psize, int *ntoalign)
getfield	.//script/lua/lua-5.3.4/src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d, int delta) {$/;"	f	file:	signature:(lua_State *L, const char *key, int d, int delta)
getfreepos	.//script/lua/lua-5.3.4/src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:	signature:(Table *t)
getfuncline	.//script/lua/lua-5.3.4/src/ldebug.h	/^#define getfuncline(/;"	d
getfuncname	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:	signature:(lua_State *L, CallInfo *ci, const char **name)
getgeneric	.//script/lua/lua-5.3.4/src/ltable.c	/^static const TValue *getgeneric (Table *t, const TValue *key) {$/;"	f	file:	signature:(Table *t, const TValue *key)
gethexa	.//script/lua/lua-5.3.4/src/llex.c	/^static int gethexa (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
getinstruction	.//script/lua/lua-5.3.4/src/lcode.h	/^#define getinstruction(/;"	d
getiofile	.//script/lua/lua-5.3.4/src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:	signature:(lua_State *L, const char *findex)
getjump	.//script/lua/lua-5.3.4/src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:	signature:(FuncState *fs, int pc)
getjumpcontrol	.//script/lua/lua-5.3.4/src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:	signature:(FuncState *fs, int pc)
getlocvar	.//script/lua/lua-5.3.4/src/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:	signature:(FuncState *fs, int i)
getnum	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int getnum (const char **fmt, int df) {$/;"	f	file:	signature:(const char **fmt, int df)
getnumlimit	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int getnumlimit (Header *h, const char **fmt, int df) {$/;"	f	file:	signature:(Header *h, const char **fmt, int df)
getoah	.//script/lua/lua-5.3.4/src/lstate.h	/^#define getoah(/;"	d
getobjname	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:	signature:(Proto *p, int lastpc, int reg, const char **name)
getobjname	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	p	file:	signature:(Proto *p, int lastpc, int reg, const char **name)
getoption	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static KOption getoption (Header *h, const char **fmt, int *size) {$/;"	f	file:	signature:(Header *h, const char **fmt, int *size)
getproto	.//script/lua/lua-5.3.4/src/lobject.h	/^#define getproto(/;"	d
getstr	.//script/lua/lua-5.3.4/src/lobject.h	/^#define getstr(/;"	d
gettableProtected	.//script/lua/lua-5.3.4/src/lvm.c	/^#define gettableProtected(/;"	d	file:
getthread	.//script/lua/lua-5.3.4/src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:	signature:(lua_State *L, int *arg)
gettotalbytes	.//script/lua/lua-5.3.4/src/lstate.h	/^#define gettotalbytes(/;"	d
getudatamem	.//script/lua/lua-5.3.4/src/lobject.h	/^#define getudatamem(/;"	d
getunopr	.//script/lua/lua-5.3.4/src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:	signature:(int op)
getupvalname	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:	signature:(CallInfo *ci, const TValue *o, const char **name)
getupvalref	.//script/lua/lua-5.3.4/src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:	signature:(lua_State *L, int fidx, int n, LClosure **pf)
getuservalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define getuservalue(/;"	d
gfasttm	.//script/lua/lua-5.3.4/src/ltm.h	/^#define gfasttm(/;"	d
gkey	.//script/lua/lua-5.3.4/src/ltable.h	/^#define gkey(/;"	d
globalL	.//script/lua/lua-5.3.4/src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
global_State	.//script/lua/lua-5.3.4/src/lstate.h	/^typedef struct global_State {$/;"	s
global_State	.//script/lua/lua-5.3.4/src/lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
global_State::GCdebt	.//script/lua/lua-5.3.4/src/lstate.h	/^  l_mem GCdebt;  \/* bytes allocated not yet compensated by the collector *\/$/;"	m	struct:global_State	access:public
global_State::GCestimate	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_mem GCestimate;  \/* an estimate of the non-garbage memory in use *\/$/;"	m	struct:global_State	access:public
global_State::GCmemtrav	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_mem GCmemtrav;  \/* memory traversed by the GC *\/$/;"	m	struct:global_State	access:public
global_State::allgc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *allgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State	access:public
global_State::allweak	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *allweak;  \/* list of all-weak tables *\/$/;"	m	struct:global_State	access:public
global_State::currentwhite	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State	access:public
global_State::ephemeron	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *ephemeron;  \/* list of ephemeron tables (weak keys) *\/$/;"	m	struct:global_State	access:public
global_State::finobj	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *finobj;  \/* list of collectable objects with finalizers *\/$/;"	m	struct:global_State	access:public
global_State::fixedgc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *fixedgc;  \/* list of objects not to be collected *\/$/;"	m	struct:global_State	access:public
global_State::frealloc	.//script/lua/lua-5.3.4/src/lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State	access:public
global_State::gcfinnum	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned int gcfinnum;  \/* number of finalizers to call in each GC step *\/$/;"	m	struct:global_State	access:public
global_State::gckind	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte gckind;  \/* kind of GC running *\/$/;"	m	struct:global_State	access:public
global_State::gcpause	.//script/lua/lua-5.3.4/src/lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State	access:public
global_State::gcrunning	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte gcrunning;  \/* true if GC is running *\/$/;"	m	struct:global_State	access:public
global_State::gcstate	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State	access:public
global_State::gcstepmul	.//script/lua/lua-5.3.4/src/lstate.h	/^  int gcstepmul;  \/* GC 'granularity' *\/$/;"	m	struct:global_State	access:public
global_State::gray	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State	access:public
global_State::grayagain	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State	access:public
global_State::l_registry	.//script/lua/lua-5.3.4/src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State	access:public
global_State::mainthread	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State	access:public
global_State::memerrmsg	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString *memerrmsg;  \/* memory-error message *\/$/;"	m	struct:global_State	access:public
global_State::mt	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table	access:public
global_State::panic	.//script/lua/lua-5.3.4/src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State	access:public
global_State::seed	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State	access:public
global_State::strcache	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString *strcache[STRCACHE_N][STRCACHE_M];  \/* cache for strings in API *\/$/;"	m	struct:global_State	access:public
global_State::strt	.//script/lua/lua-5.3.4/src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State	access:public
global_State::sweepgc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list *\/$/;"	m	struct:global_State	access:public
global_State::tmname	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State	access:public
global_State::tobefnz	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State	access:public
global_State::totalbytes	.//script/lua/lua-5.3.4/src/lstate.h	/^  l_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State	access:public
global_State::twups	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:global_State	typeref:struct:global_State::lua_State	access:public
global_State::ud	.//script/lua/lua-5.3.4/src/lstate.h	/^  void *ud;         \/* auxiliary data to 'frealloc' *\/$/;"	m	struct:global_State	access:public
global_State::version	.//script/lua/lua-5.3.4/src/lstate.h	/^  const lua_Number *version;  \/* pointer to version number *\/$/;"	m	struct:global_State	access:public
global_State::weak	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State	access:public
gmatch	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
gmatch_aux	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
gnext	.//script/lua/lua-5.3.4/src/ltable.h	/^#define gnext(/;"	d
gnode	.//script/lua/lua-5.3.4/src/ltable.h	/^#define gnode(/;"	d
gnodelast	.//script/lua/lua-5.3.4/src/lgc.c	/^#define gnodelast(/;"	d	file:
gotostat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:	signature:(LexState *ls, int pc)
gray	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State	access:public
gray2black	.//script/lua/lua-5.3.4/src/lgc.h	/^#define gray2black(/;"	d
grayagain	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State	access:public
growstack	.//script/lua/lua-5.3.4/src/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
gt	.//script/lua/lua-5.3.4/src/lparser.h	/^  Labellist gt;  \/* list of pending gotos *\/$/;"	m	struct:Dyndata	access:public
gval	.//script/lua/lua-5.3.4/src/ltable.h	/^#define gval(/;"	d
h	.//script/lua/lua-5.3.4/src/llex.h	/^  Table *h;  \/* to avoid collection\/reuse strings *\/$/;"	m	struct:LexState	access:public
h	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Table h;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Table	access:public
handleEvents	.//network/platform/linux/Client_linux.cpp	/^void Client::handleEvents(int32_t events)$/;"	f	class:kit::Client	signature:(int32_t events)
handleEvents	.//network/platform/linux/Client_linux.h	/^    void handleEvents(int32_t events);$/;"	p	class:kit::Client	access:protected	signature:(int32_t events)
handlePollEvent	.//network/Client.cpp	/^void IClient::handlePollEvent()$/;"	f	class:kit::IClient	signature:()
handlePollEvent	.//network/Client.h	/^    virtual void handlePollEvent();$/;"	p	class:kit::IClient	access:protected	signature:()
handlePollEvent	.//network/Server.cpp	/^void IServer::handlePollEvent()$/;"	f	class:kit::IServer	signature:()
handlePollEvent	.//network/Server.h	/^    virtual void handlePollEvent();$/;"	p	class:kit::IServer	access:protected	signature:()
handleSessionRecv	.//network/Terminal.cpp	/^void Terminal::handleSessionRecv(Session* session)$/;"	f	class:kit::Terminal	signature:(Session* session)
handleSessionRecv	.//network/Terminal.h	/^    void handleSessionRecv(Session* session);$/;"	p	class:kit::Terminal	access:public	signature:(Session* session)
handleSessionSend	.//network/Terminal.cpp	/^void Terminal::handleSessionSend(Session* session)$/;"	f	class:kit::Terminal	signature:(Session* session)
handleSessionSend	.//network/Terminal.h	/^    void handleSessionSend(Session* session);$/;"	p	class:kit::Terminal	access:public	signature:(Session* session)
handleSocket	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::handleSocket(Socket* sock, int32_t events)$/;"	f	class:kit::Server	signature:(Socket* sock, int32_t events)
handleSocket	.//network/platform/linux/Server_linux.h	/^    int32_t handleSocket(Socket* sock, int32_t events);$/;"	p	class:kit::Server	access:protected	signature:(Socket* sock, int32_t events)
handleThread	.//kit/Thread.h	/^    virtual void handleThread() = 0;$/;"	p	struct:kit::ThreadHandler	access:public	signature:()
handleThread	.//network/platform/linux/Client_linux.cpp	/^void Client::handleThread()$/;"	f	class:kit::Client	signature:()
handleThread	.//network/platform/linux/Client_linux.h	/^    void handleThread();$/;"	p	class:kit::Client	access:protected	signature:()
handleThread	.//network/platform/linux/Server_linux.cpp	/^void Server::handleThread()$/;"	f	class:kit::Server	signature:()
handleThread	.//network/platform/linux/Server_linux.h	/^    virtual void handleThread();$/;"	p	class:kit::Server	access:protected	signature:()
handleTimer	.//kit/Timer.cpp	/^bool Timer::handleTimer(uint32_t id)$/;"	f	class:kit::Timer	signature:(uint32_t id)
handleTimer	.//kit/Timer.h	/^    bool handleTimer(uint32_t id);$/;"	p	class:kit::Timer	access:private	signature:(uint32_t id)
handle_luainit	.//script/lua/lua-5.3.4/src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
handle_script	.//script/lua/lua-5.3.4/src/lua.c	/^static int handle_script (lua_State *L, char **argv) {$/;"	f	file:	signature:(lua_State *L, char **argv)
handler	.//kit/Emitter.h	/^        Handler handler;$/;"	m	struct:kit::Emitter::__anon1	access:public
handler_	.//kit/Thread.h	/^    ThreadHandler* handler_;$/;"	m	class:kit::IThread	access:protected
handler_map_	.//debug/DebugInput.h	/^    std::unordered_map<std::string, DebugCmdHandler> handler_map_;$/;"	m	class:kit::DebugInput	access:private
handler_map_	.//kit/Timer.h	/^    Map<uint32_t, TimerHandler, TIMER_MAP_SIZE> handler_map_;$/;"	m	class:kit::Timer	access:private
handler_vec_	.//debug/DebugInput.h	/^    std::vector<DebugCmdHandler> handler_vec_;$/;"	m	class:kit::DebugInput	access:private
handler_vecs_	.//kit/Emitter.h	/^    HandlerVec handler_vecs_[EventLength];$/;"	m	class:kit::Emitter	access:private
has	.//base/Map.h	/^    bool has(KeyType key) const$/;"	f	class:kit::Map	access:public	signature:(KeyType key) const
has_E	.//script/lua/lua-5.3.4/src/lua.c	/^#define has_E	/;"	d	file:
has_e	.//script/lua/lua-5.3.4/src/lua.c	/^#define has_e	/;"	d	file:
has_error	.//script/lua/lua-5.3.4/src/lua.c	/^#define has_error	/;"	d	file:
has_i	.//script/lua/lua-5.3.4/src/lua.c	/^#define has_i	/;"	d	file:
has_v	.//script/lua/lua-5.3.4/src/lua.c	/^#define has_v	/;"	d	file:
hash	.//script/lua/lua-5.3.4/src/lobject.h	/^  unsigned int hash;$/;"	m	struct:TString	access:public
hash	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString **hash;$/;"	m	struct:stringtable	access:public
hashboolean	.//script/lua/lua-5.3.4/src/ltable.c	/^#define hashboolean(/;"	d	file:
hashint	.//script/lua/lua-5.3.4/src/ltable.c	/^#define hashint(/;"	d	file:
hashmod	.//script/lua/lua-5.3.4/src/ltable.c	/^#define hashmod(/;"	d	file:
hashpointer	.//script/lua/lua-5.3.4/src/ltable.c	/^#define hashpointer(/;"	d	file:
hashpow2	.//script/lua/lua-5.3.4/src/ltable.c	/^#define hashpow2(/;"	d	file:
hashstr	.//script/lua/lua-5.3.4/src/ltable.c	/^#define hashstr(/;"	d	file:
hasjumps	.//script/lua/lua-5.3.4/src/lcode.c	/^#define hasjumps(/;"	d	file:
hasmultret	.//script/lua/lua-5.3.4/src/lparser.c	/^#define hasmultret(/;"	d	file:
head_	.//base/Array.h	/^    int head_;$/;"	m	class:kit::Array	access:private
head_	.//base/List.h	/^    Item* head_;$/;"	m	class:kit::List	access:private
head_	.//base/Queue.h	/^    int head_;$/;"	m	class:kit::Queue	access:private
head_	.//kit/Buffer.h	/^    uint8_t* head_;$/;"	m	class:kit::Buffer	access:protected
header_	.//network/Packet.h	/^    PacketHeader header_;$/;"	m	class:kit::Packet	access:public
hnext	.//script/lua/lua-5.3.4/src/lobject.h	/^    struct TString *hnext;  \/* linked list for hash table *\/$/;"	m	union:TString::__anon10	typeref:struct:TString::__anon10::TString	access:public
hook	.//script/lua/lua-5.3.4/src/lstate.h	/^  volatile lua_Hook hook;$/;"	m	struct:lua_State	access:public
hookcount	.//script/lua/lua-5.3.4/src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State	access:public
hookf	.//script/lua/lua-5.3.4/src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:	signature:(lua_State *L, lua_Debug *ar)
hookmask	.//script/lua/lua-5.3.4/src/lstate.h	/^  l_signalT hookmask;$/;"	m	struct:lua_State	access:public
hvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define hvalue(/;"	d
i	.//script/lua/lua-5.3.4/src/llex.h	/^  lua_Integer i;$/;"	m	union:__anon8	access:public
i	.//script/lua/lua-5.3.4/src/llimits.h	/^  lua_Integer i;$/;"	m	union:__anon9	access:public
i	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_Integer i;   \/* integer numbers *\/$/;"	m	union:Value	access:public
i	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
iABC	.//script/lua/lua-5.3.4/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iABx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAsBx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
iAx	.//script/lua/lua-5.3.4/src/lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx, iAx};  \/* basic instruction format *\/$/;"	e	enum:OpMode
i_ci	.//script/lua/lua-5.3.4/src/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo	access:public
i_key	.//script/lua/lua-5.3.4/src/lobject.h	/^  TKey i_key;$/;"	m	struct:Node	access:public
i_val	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue i_val;$/;"	m	struct:Node	access:public
id	.//kit/Emitter.h	/^        HandlerID id;$/;"	m	struct:kit::Emitter::__anon1	access:public
id	.//kit/Timer.h	/^    uint32_t id;$/;"	m	struct:kit::Timer::Node	access:public
id_	.//kit/Emitter.h	/^    HandlerID id_;$/;"	m	class:kit::Emitter	access:private
id_	.//kit/Timer.h	/^    uint32_t id_;$/;"	m	class:kit::Timer	access:private
idx	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte idx;  \/* index of upvalue (in stack or in outer function's list) *\/$/;"	m	struct:Upvaldesc	access:public
idx	.//script/lua/lua-5.3.4/src/lparser.h	/^      short idx;  \/* index (R\/K) *\/$/;"	m	struct:expdesc::__anon15::__anon16	access:public
idx	.//script/lua/lua-5.3.4/src/lparser.h	/^  short idx;  \/* variable index in stack *\/$/;"	m	struct:Vardesc	access:public
ifstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:	signature:(LexState *ls, int line)
inclinenumber	.//script/lua/lua-5.3.4/src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
incomplete	.//script/lua/lua-5.3.4/src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:	signature:(lua_State *L, int status)
ind	.//script/lua/lua-5.3.4/src/lparser.h	/^    } ind;$/;"	m	union:expdesc::__anon15	typeref:struct:expdesc::__anon15::__anon16	access:public
index2addr	.//script/lua/lua-5.3.4/src/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:	signature:(lua_State *L, int idx)
index_	.//base/Array.h	/^        int index_;$/;"	m	class:kit::Array::Iterator	access:private
info	.//script/lua/lua-5.3.4/src/lparser.h	/^    int info;  \/* for generic use *\/$/;"	m	union:expdesc::__anon15	access:public
init	.//kit/Buffer.cpp	/^bool Buffer::init(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
init	.//kit/Buffer.h	/^    bool init(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
init	.//kit/Thread.cpp	/^void IThread::init(ThreadHandler* handler)$/;"	f	class:kit::IThread	signature:(ThreadHandler* handler)
init	.//kit/Thread.h	/^    virtual void init(ThreadHandler* handler);$/;"	p	class:kit::IThread	access:public	signature:(ThreadHandler* handler)
init	.//network/Packet.cpp	/^void Packet::init(uint16_t pid, Buffer* buf)$/;"	f	class:kit::Packet	signature:(uint16_t pid, Buffer* buf)
init	.//network/Packet.h	/^    void init(uint16_t pid, Buffer* buf);$/;"	p	class:kit::Packet	access:public	signature:(uint16_t pid, Buffer* buf)
init	.//network/Protocol.cpp	/^void Protocol::init(int32_t pid)$/;"	f	class:kit::Protocol	signature:(int32_t pid)
init	.//network/Protocol.h	/^    virtual void init(int32_t pid);$/;"	p	class:kit::Protocol	access:public	signature:(int32_t pid)
init	.//network/Session.cpp	/^void Session::init(Socket* sock)$/;"	f	class:kit::Session	signature:(Socket* sock)
init	.//network/Session.h	/^    void init(Socket* sock);$/;"	p	class:kit::Session	access:public	signature:(Socket* sock)
init	.//network/SockAddr.cpp	/^void ISockAddr::init(const char* ip, uint16_t port, uint16_t family)$/;"	f	class:kit::ISockAddr	signature:(const char* ip, uint16_t port, uint16_t family)
init	.//network/SockAddr.h	/^    virtual void init(const char* ip, uint16_t port, uint16_t family);$/;"	p	class:kit::ISockAddr	access:public	signature:(const char* ip, uint16_t port, uint16_t family)
init	.//network/Socket.cpp	/^void ISocket::init(SocketID sock)$/;"	f	class:kit::ISocket	signature:(SocketID sock)
init	.//network/Socket.cpp	/^void ISocket::init(int32_t family, int32_t type, int32_t protocol)$/;"	f	class:kit::ISocket	signature:(int32_t family, int32_t type, int32_t protocol)
init	.//network/Socket.h	/^	virtual void init(int32_t family, int32_t type, int32_t protocol);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t family, int32_t type, int32_t protocol)
init	.//network/Socket.h	/^    virtual void init(SocketID sock);$/;"	p	class:kit::ISocket	access:public	signature:(SocketID sock)
init	.//network/platform/linux/SockAddr_linux.cpp	/^void SockAddr::init(const char* ip, uint16_t port, uint16_t family)$/;"	f	class:kit::SockAddr	signature:(const char* ip, uint16_t port, uint16_t family)
init	.//network/platform/linux/SockAddr_linux.h	/^    virtual void init(const char* ip, uint16_t port, uint16_t family);$/;"	p	class:kit::SockAddr	access:public	signature:(const char* ip, uint16_t port, uint16_t family)
init	.//network/platform/win/SockAddr.cpp	/^void SockAddr::init(const char* ip, uint16_t port, uint16_t family)$/;"	f	class:kit::SockAddr	signature:(const char* ip, uint16_t port, uint16_t family)
init	.//network/platform/win/Socket.cpp	/^void Socket::init(int32_t family, int32_t type, int32_t protocol)$/;"	f	class:kit::Socket	signature:(int32_t family, int32_t type, int32_t protocol)
init	.//script/js/JSCore.cpp	/^void JSCore::init()$/;"	f	class:JSCore	signature:()
init	.//script/js/JSCore.h	/^    virtual void init();$/;"	p	class:JSCore	access:public	signature:()
init	.//script/lua/lua-5.3.4/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon21	file:	access:public
init_exp	.//script/lua/lua-5.3.4/src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:	signature:(expdesc *e, expkind k, int i)
init_registry	.//script/lua/lua-5.3.4/src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:	signature:(lua_State *L, global_State *g)
initb	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer	access:public
initheader	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void initheader (lua_State *L, Header *h) {$/;"	f	file:	signature:(lua_State *L, Header *h)
insert	.//base/List.h	/^    bool insert(int index, const Type& item)$/;"	f	class:kit::List	access:public	signature:(int index, const Type& item)
instack	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte instack;  \/* whether it is in stack (register) *\/$/;"	m	struct:Upvaldesc	access:public
instance	.//base/Singleton.h	/^    inline static T* instance(void)$/;"	f	class:kit::Singleton	access:public	signature:(void)
instance_	.//base/Singleton.h	/^    static T* instance_;$/;"	m	class:kit::Singleton	access:protected
instance_	.//base/Singleton.h	/^template<typename T> T* Singleton<T>::instance_ = 0;$/;"	m	class:kit::Singleton
intarith	.//script/lua/lua-5.3.4/src/lobject.c	/^static lua_Integer intarith (lua_State *L, int op, lua_Integer v1,$/;"	f	file:	signature:(lua_State *L, int op, lua_Integer v1, lua_Integer v2)
internshrstr	.//script/lua/lua-5.3.4/src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:	signature:(lua_State *L, const char *str, size_t l)
interror	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static void interror (lua_State *L, int arg) {$/;"	f	file:	signature:(lua_State *L, int arg)
intop	.//script/lua/lua-5.3.4/src/lvm.h	/^#define intop(/;"	d
invalidateTMcache	.//script/lua/lua-5.3.4/src/ltable.h	/^#define invalidateTMcache(/;"	d
io_close	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_fclose	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_flush	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_input	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_lines	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_noclose	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_open	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_output	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_pclose	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_popen	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_read	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_readline	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_readline	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_readline (lua_State *L);$/;"	p	file:	signature:(lua_State *L)
io_tmpfile	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_type	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
io_write	.//script/lua/lua-5.3.4/src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
ioctl	.//network/Socket.cpp	/^int32_t ISocket::ioctl(unsigned long cmd, char* argp)$/;"	f	class:kit::ISocket	signature:(unsigned long cmd, char* argp)
ioctl	.//network/Socket.h	/^	int32_t ioctl(unsigned long cmd, char* argp);$/;"	p	class:kit::ISocket	access:public	signature:(unsigned long cmd, char* argp)
ioctl	.//network/platform/win/Socket.cpp	/^int32_t Socket::ioctl(unsigned long cmd, char* argp)$/;"	f	class:kit::Socket	signature:(unsigned long cmd, char* argp)
iolib	.//script/lua/lua-5.3.4/src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ip	.//network/SockAddr.h	/^    std::string ip;$/;"	m	class:kit::ISockAddr	access:public
ipairsaux	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
isLfunction	.//script/lua/lua-5.3.4/src/lobject.h	/^#define isLfunction(/;"	d
isLua	.//script/lua/lua-5.3.4/src/lstate.h	/^#define isLua(/;"	d
isValid	.//Gear.h	/^    bool isValid() const { return valid_; }$/;"	f	class:kit::Gear	access:public	signature:() const
is_vararg	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto	access:public
isblack	.//script/lua/lua-5.3.4/src/lgc.h	/^#define isblack(/;"	d
iscleared	.//script/lua/lua-5.3.4/src/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:	signature:(global_State *g, const TValue *o)
isclosed	.//script/lua/lua-5.3.4/src/liolib.c	/^#define isclosed(/;"	d	file:
iscollectable	.//script/lua/lua-5.3.4/src/lobject.h	/^#define iscollectable(/;"	d
iscont	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^#define iscont(/;"	d	file:
isdead	.//script/lua/lua-5.3.4/src/lgc.h	/^#define isdead(/;"	d
isdeadm	.//script/lua/lua-5.3.4/src/lgc.h	/^#define isdeadm(/;"	d
isdummy	.//script/lua/lua-5.3.4/src/ltable.h	/^#define isdummy(/;"	d
isemptystr	.//script/lua/lua-5.3.4/src/lvm.c	/^#define isemptystr(/;"	d	file:
isgray	.//script/lua/lua-5.3.4/src/lgc.h	/^#define isgray(/;"	d
isinstack	.//script/lua/lua-5.3.4/src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:	signature:(CallInfo *ci, const TValue *o)
isintwups	.//script/lua/lua-5.3.4/src/lfunc.h	/^#define isintwups(/;"	d
islittle	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int islittle;$/;"	m	struct:Header	file:	access:public
isloop	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte isloop;  \/* true if 'block' is a loop *\/$/;"	m	struct:BlockCnt	file:	access:public
isneg	.//script/lua/lua-5.3.4/src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:	signature:(const char **s)
ispseudo	.//script/lua/lua-5.3.4/src/lapi.c	/^#define ispseudo(/;"	d	file:
isreserved	.//script/lua/lua-5.3.4/src/lstring.h	/^#define isreserved(/;"	d
isstackindex	.//script/lua/lua-5.3.4/src/lapi.c	/^#define isstackindex(/;"	d	file:
issweepphase	.//script/lua/lua-5.3.4/src/lgc.h	/^#define issweepphase(/;"	d
istailcall	.//script/lua/lua-5.3.4/src/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug	access:public
isupvalue	.//script/lua/lua-5.3.4/src/lapi.c	/^#define isupvalue(/;"	d	file:
isvalid	.//script/lua/lua-5.3.4/src/lapi.c	/^#define isvalid(/;"	d	file:
isvararg	.//script/lua/lua-5.3.4/src/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug	access:public
iswhite	.//script/lua/lua-5.3.4/src/lgc.h	/^#define iswhite(/;"	d
itemEmpty	.//base/Array.h	/^    bool itemEmpty(const Item& item) const$/;"	f	class:kit::Array	access:private	signature:(const Item& item) const
item_template_	.//network/Protocol.h	/^    PTData* item_template_;$/;"	m	class:kit::PTArray	access:protected
iter_aux	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static int iter_aux (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
iter_codes	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static int iter_codes (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
ival	.//script/lua/lua-5.3.4/src/lparser.h	/^    lua_Integer ival;    \/* for VKINT *\/$/;"	m	union:expdesc::__anon15	access:public
ivalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ivalue(/;"	d
join	.//kit/Thread.h	/^    virtual void join() = 0;$/;"	p	class:kit::IThread	access:public	signature:()
join	.//kit/platform/linux/Thread_linux.cpp	/^void Thread::join()$/;"	f	class:kit::Thread	signature:()
join	.//kit/platform/linux/Thread_linux.h	/^    virtual void join();$/;"	p	class:kit::Thread	access:public	signature:()
jpc	.//script/lua/lua-5.3.4/src/lparser.h	/^  int jpc;  \/* list of pending jumps to 'pc' *\/$/;"	m	struct:FuncState	access:public
jumponcond	.//script/lua/lua-5.3.4/src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e, int cond)
k	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto	access:public
k	.//script/lua/lua-5.3.4/src/lparser.h	/^  expkind k;$/;"	m	struct:expdesc	access:public
k	.//script/lua/lua-5.3.4/src/lstate.h	/^      lua_KFunction k;  \/* continuation in case of yields *\/$/;"	m	struct:CallInfo::__anon18::__anon20	access:public
keepinvariant	.//script/lua/lua-5.3.4/src/lgc.h	/^#define keepinvariant(/;"	d
key	.//base/Map.h	/^        KeyType key;$/;"	m	struct:kit::Map::Item	access:public
key_	.//network/Protocol.h	/^    std::string key_;$/;"	m	class:kit::PTData	access:protected
keyfromval	.//script/lua/lua-5.3.4/src/ltable.h	/^#define keyfromval(/;"	d
kit	.//Gear.cpp	/^namespace kit {$/;"	n	file:
kit	.//Gear.h	/^namespace kit {$/;"	n
kit	.//base/Array.h	/^namespace kit {$/;"	n
kit	.//base/List.h	/^namespace kit {$/;"	n
kit	.//base/Map.h	/^namespace kit {$/;"	n
kit	.//base/QList.h	/^namespace kit {$/;"	n
kit	.//base/Queue.h	/^namespace kit {$/;"	n
kit	.//base/Singleton.h	/^namespace kit {$/;"	n
kit	.//debug/DebugInput.cpp	/^namespace kit {$/;"	n	file:
kit	.//debug/DebugInput.h	/^namespace kit {$/;"	n
kit	.//kit/Buffer.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/Buffer.h	/^namespace kit {$/;"	n
kit	.//kit/BufferPool.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/BufferPool.h	/^namespace kit {$/;"	n
kit	.//kit/Emitter.h	/^namespace kit {$/;"	n
kit	.//kit/Functions.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/Functions.h	/^namespace kit {$/;"	n
kit	.//kit/Logger.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/Logger.h	/^namespace kit {$/;"	n
kit	.//kit/Ref.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/Ref.h	/^namespace kit {$/;"	n
kit	.//kit/RefPool.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/RefPool.h	/^namespace kit {$/;"	n
kit	.//kit/Thread.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/Thread.h	/^namespace kit {$/;"	n
kit	.//kit/Timer.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/Timer.h	/^namespace kit {$/;"	n
kit	.//kit/impl/BufferImpl.h	/^namespace kit {$/;"	n
kit	.//kit/kitsys.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/kitsys.h	/^namespace kit {$/;"	n
kit	.//kit/platform/linux/Thread_linux.cpp	/^namespace kit {$/;"	n	file:
kit	.//kit/platform/linux/Thread_linux.h	/^namespace kit {$/;"	n
kit	.//network/Client.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Client.h	/^namespace kit {$/;"	n
kit	.//network/Packet.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Packet.h	/^namespace kit {$/;"	n
kit	.//network/Protocol.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Protocol.h	/^namespace kit {$/;"	n
kit	.//network/Server.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Server.h	/^namespace kit {$/;"	n
kit	.//network/Session.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Session.h	/^namespace kit {$/;"	n
kit	.//network/SockAddr.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/SockAddr.h	/^namespace kit {$/;"	n
kit	.//network/Socket.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Socket.h	/^namespace kit {$/;"	n
kit	.//network/Terminal.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/Terminal.h	/^namespace kit {$/;"	n
kit	.//network/msg.h	/^namespace kit {$/;"	n
kit	.//network/netsys.h	/^namespace kit {$/;"	n
kit	.//network/platform/linux/Client_linux.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/platform/linux/Client_linux.h	/^namespace kit {$/;"	n
kit	.//network/platform/linux/Server_linux.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/platform/linux/Server_linux.h	/^namespace kit {$/;"	n
kit	.//network/platform/linux/SockAddr_linux.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/platform/linux/SockAddr_linux.h	/^namespace kit {$/;"	n
kit	.//network/platform/linux/Socket_linux.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/platform/linux/Socket_linux.h	/^namespace kit {$/;"	n
kit	.//network/platform/win/Server.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/platform/win/SockAddr.cpp	/^namespace kit {$/;"	n	file:
kit	.//network/platform/win/Socket.cpp	/^namespace kit {$/;"	n	file:
kit	.//script/ScriptSupport.cpp	/^namespace kit {$/;"	n	file:
kit	.//script/ScriptSupport.h	/^namespace kit {$/;"	n
kit::Array	.//base/Array.h	/^class Array$/;"	c	namespace:kit
kit::Array::Array	.//base/Array.h	/^    Array() : count_(0), head_(-1), tail_(-1)$/;"	f	class:kit::Array	access:public	signature:()
kit::Array::Item	.//base/Array.h	/^    struct Item$/;"	s	class:kit::Array	access:private
kit::Array::Item::next	.//base/Array.h	/^        int next;$/;"	m	struct:kit::Array::Item	access:public
kit::Array::Item::prev	.//base/Array.h	/^        int prev;$/;"	m	struct:kit::Array::Item	access:public
kit::Array::Item::value	.//base/Array.h	/^        Type value;$/;"	m	struct:kit::Array::Item	access:public
kit::Array::Iterator	.//base/Array.h	/^    class Iterator$/;"	c	class:kit::Array	access:public
kit::Array::Iterator::Iterator	.//base/Array.h	/^        Iterator(Item* array, int index) $/;"	f	class:kit::Array::Iterator	access:public	signature:(Item* array, int index)
kit::Array::Iterator::array_	.//base/Array.h	/^        Item* array_;$/;"	m	class:kit::Array::Iterator	access:private
kit::Array::Iterator::index_	.//base/Array.h	/^        int index_;$/;"	m	class:kit::Array::Iterator	access:private
kit::Array::Iterator::operator !=	.//base/Array.h	/^        bool operator !=(const Iterator& it)$/;"	f	class:kit::Array::Iterator	access:public	signature:(const Iterator& it)
kit::Array::Iterator::operator *	.//base/Array.h	/^        Type& operator *()$/;"	f	class:kit::Array::Iterator	access:public	signature:()
kit::Array::Iterator::operator ++	.//base/Array.h	/^        Iterator& operator ++()$/;"	f	class:kit::Array::Iterator	access:public	signature:()
kit::Array::Iterator::operator ==	.//base/Array.h	/^        bool operator ==(const Iterator& it)$/;"	f	class:kit::Array::Iterator	access:public	signature:(const Iterator& it)
kit::Array::array_	.//base/Array.h	/^    Item array_[Length];$/;"	m	class:kit::Array	access:private
kit::Array::begin	.//base/Array.h	/^    Iterator begin()$/;"	f	class:kit::Array	access:public	signature:()
kit::Array::clear	.//base/Array.h	/^    void clear()$/;"	f	class:kit::Array	access:public	signature:()
kit::Array::count	.//base/Array.h	/^    int count() const { return count_; }$/;"	f	class:kit::Array	access:public	signature:() const
kit::Array::count_	.//base/Array.h	/^    int count_;$/;"	m	class:kit::Array	access:private
kit::Array::del	.//base/Array.h	/^    void del(int index)$/;"	f	class:kit::Array	access:public	signature:(int index)
kit::Array::emptyItem	.//base/Array.h	/^    void emptyItem(Item& item)$/;"	f	class:kit::Array	access:private	signature:(Item& item)
kit::Array::end	.//base/Array.h	/^    Iterator end()$/;"	f	class:kit::Array	access:public	signature:()
kit::Array::get	.//base/Array.h	/^    bool get(int index, Type& val)$/;"	f	class:kit::Array	access:public	signature:(int index, Type& val)
kit::Array::head_	.//base/Array.h	/^    int head_;$/;"	m	class:kit::Array	access:private
kit::Array::itemEmpty	.//base/Array.h	/^    bool itemEmpty(const Item& item) const$/;"	f	class:kit::Array	access:private	signature:(const Item& item) const
kit::Array::pos_	.//base/Array.h	/^    int pos_;$/;"	m	class:kit::Array	access:private
kit::Array::set	.//base/Array.h	/^    void set(int index, const Type& val)$/;"	f	class:kit::Array	access:public	signature:(int index, const Type& val)
kit::Array::tail_	.//base/Array.h	/^    int tail_;$/;"	m	class:kit::Array	access:private
kit::AutoLock	.//kit/Thread.h	/^class AutoLock$/;"	c	namespace:kit
kit::AutoLock::AutoLock	.//kit/Thread.cpp	/^AutoLock::AutoLock(IMutex* mutex)$/;"	f	class:kit::AutoLock	signature:(IMutex* mutex)
kit::AutoLock::AutoLock	.//kit/Thread.h	/^    AutoLock(IMutex* mutex);$/;"	p	class:kit::AutoLock	access:public	signature:(IMutex* mutex)
kit::AutoLock::mutex_	.//kit/Thread.h	/^    IMutex* mutex_;$/;"	m	class:kit::AutoLock	access:protected
kit::AutoLock::~AutoLock	.//kit/Thread.cpp	/^AutoLock::~AutoLock()$/;"	f	class:kit::AutoLock	signature:()
kit::AutoLock::~AutoLock	.//kit/Thread.h	/^    ~AutoLock();$/;"	p	class:kit::AutoLock	access:public	signature:()
kit::BUFFER_QUEUE_CNT	.//kit/BufferPool.h	/^const int32_t BUFFER_QUEUE_CNT = 8;$/;"	m	namespace:kit
kit::Buffer	.//kit/Buffer.h	/^class Buffer : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Buffer::Buffer	.//kit/Buffer.cpp	/^Buffer::Buffer()$/;"	f	class:kit::Buffer	signature:()
kit::Buffer::Buffer	.//kit/Buffer.h	/^    Buffer();$/;"	p	class:kit::Buffer	access:public	signature:()
kit::Buffer::KIT_CREATE_FUNC	.//kit/Buffer.h	/^    KIT_CREATE_FUNC(Buffer);$/;"	p	class:kit::Buffer	access:public	signature:(Buffer)
kit::Buffer::capacity_	.//kit/Buffer.h	/^    size_t capacity_;$/;"	m	class:kit::Buffer	access:protected
kit::Buffer::expandBuffer	.//kit/Buffer.cpp	/^bool Buffer::expandBuffer(size_t required_capacity)$/;"	f	class:kit::Buffer	signature:(size_t required_capacity)
kit::Buffer::expandBuffer	.//kit/Buffer.h	/^	bool expandBuffer(size_t require_size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t require_size)
kit::Buffer::getCapacity	.//kit/Buffer.h	/^    size_t getCapacity() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::getCapacity	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getCapacity() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::getReadSize	.//kit/Buffer.h	/^	size_t getReadSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::getReadSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getReadSize() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::getReadableSize	.//kit/Buffer.h	/^    size_t getReadableSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::getReadableSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getReadableSize() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::getSize	.//kit/Buffer.h	/^    size_t getSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::getSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getSize() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::getWritableSize	.//kit/Buffer.h	/^    size_t getWritableSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::getWritableSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getWritableSize() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::getWrittenSize	.//kit/Buffer.h	/^    size_t getWrittenSize() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::getWrittenSize	.//kit/impl/BufferImpl.h	/^inline size_t Buffer::getWrittenSize() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::head_	.//kit/Buffer.h	/^    uint8_t* head_;$/;"	m	class:kit::Buffer	access:protected
kit::Buffer::init	.//kit/Buffer.cpp	/^bool Buffer::init(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
kit::Buffer::init	.//kit/Buffer.h	/^    bool init(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
kit::Buffer::operator <<	.//kit/Buffer.h	/^	bool operator<<(T v);$/;"	p	class:kit::Buffer	access:public	signature:(T v)
kit::Buffer::operator <<	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator<< <const char*>(const char* v)$/;"	f	class:kit::Buffer	signature:(const char* v)
kit::Buffer::operator <<	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator<<(T v)$/;"	f	class:kit::Buffer	signature:(T v)
kit::Buffer::operator >>	.//kit/Buffer.h	/^	bool operator>>(T& v);$/;"	p	class:kit::Buffer	access:public	signature:(T& v)
kit::Buffer::operator >>	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator>> <char*>(char*& v)$/;"	f	class:kit::Buffer	signature:(char*& v)
kit::Buffer::operator >>	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator>> <std::string>(std::string& v)$/;"	f	class:kit::Buffer	signature:(std::string& v)
kit::Buffer::operator >>	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator>>(T& v)$/;"	f	class:kit::Buffer	signature:(T& v)
kit::Buffer::readBuffer	.//kit/Buffer.cpp	/^bool Buffer::readBuffer(void* buf, size_t size)$/;"	f	class:kit::Buffer	signature:(void* buf, size_t size)
kit::Buffer::readBuffer	.//kit/Buffer.h	/^	bool readBuffer(void* buf, size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(void* buf, size_t size)
kit::Buffer::readCur	.//kit/Buffer.h	/^    char* readCur();$/;"	p	class:kit::Buffer	access:public	signature:()
kit::Buffer::readCur	.//kit/impl/BufferImpl.h	/^inline char* Buffer::readCur()$/;"	f	class:kit::Buffer	signature:()
kit::Buffer::readVarint	.//kit/Buffer.h	/^    bool readVarint(T& value);$/;"	p	class:kit::Buffer	access:public	signature:(T& value)
kit::Buffer::readVarint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::readVarint(T& value)$/;"	f	class:kit::Buffer	signature:(T& value)
kit::Buffer::readVaruint	.//kit/Buffer.h	/^    bool readVaruint(T& value);$/;"	p	class:kit::Buffer	access:public	signature:(T& value)
kit::Buffer::readVaruint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::readVaruint(T& value)$/;"	f	class:kit::Buffer	signature:(T& value)
kit::Buffer::readVector	.//kit/Buffer.h	/^    bool readVector(std::vector<T>& vec);$/;"	p	class:kit::Buffer	access:public	signature:(std::vector<T>& vec)
kit::Buffer::readVector	.//kit/impl/BufferImpl.h	/^inline bool Buffer::readVector(std::vector<T>& vec)$/;"	f	class:kit::Buffer	signature:(std::vector<T>& vec)
kit::Buffer::read_cur_	.//kit/Buffer.h	/^    uint8_t* read_cur_;$/;"	m	class:kit::Buffer	access:protected
kit::Buffer::reserveBuffer	.//kit/Buffer.cpp	/^bool Buffer::reserveBuffer(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
kit::Buffer::reserveBuffer	.//kit/Buffer.h	/^    bool reserveBuffer(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
kit::Buffer::reset	.//kit/Buffer.h	/^    void reset();$/;"	p	class:kit::Buffer	access:public	signature:()
kit::Buffer::reset	.//kit/impl/BufferImpl.h	/^inline void Buffer::reset()$/;"	f	class:kit::Buffer	signature:()
kit::Buffer::setSize	.//kit/Buffer.h	/^    void setSize(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
kit::Buffer::setSize	.//kit/impl/BufferImpl.h	/^inline void Buffer::setSize(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
kit::Buffer::skipRead	.//kit/Buffer.h	/^    void skipRead(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
kit::Buffer::skipRead	.//kit/impl/BufferImpl.h	/^inline void Buffer::skipRead(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
kit::Buffer::skipWrite	.//kit/Buffer.h	/^    void skipWrite(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
kit::Buffer::skipWrite	.//kit/impl/BufferImpl.h	/^inline void Buffer::skipWrite(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
kit::Buffer::tail_	.//kit/Buffer.h	/^    uint8_t* tail_;$/;"	m	class:kit::Buffer	access:protected
kit::Buffer::toString	.//kit/Buffer.cpp	/^std::string Buffer::toString() const$/;"	f	class:kit::Buffer	signature:() const
kit::Buffer::toString	.//kit/Buffer.h	/^    std::string toString() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
kit::Buffer::writeBuffer	.//kit/Buffer.cpp	/^bool Buffer::writeBuffer(const void* buf, size_t size)$/;"	f	class:kit::Buffer	signature:(const void* buf, size_t size)
kit::Buffer::writeBuffer	.//kit/Buffer.h	/^    bool writeBuffer(const void* buf, size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(const void* buf, size_t size)
kit::Buffer::writeCur	.//kit/Buffer.h	/^    char* writeCur();$/;"	p	class:kit::Buffer	access:public	signature:()
kit::Buffer::writeCur	.//kit/impl/BufferImpl.h	/^inline char* Buffer::writeCur()$/;"	f	class:kit::Buffer	signature:()
kit::Buffer::writeVarint	.//kit/Buffer.h	/^    bool writeVarint(T value);$/;"	p	class:kit::Buffer	access:public	signature:(T value)
kit::Buffer::writeVarint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::writeVarint(T value)$/;"	f	class:kit::Buffer	signature:(T value)
kit::Buffer::writeVaruint	.//kit/Buffer.h	/^    bool writeVaruint(T value);$/;"	p	class:kit::Buffer	access:public	signature:(T value)
kit::Buffer::writeVaruint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::writeVaruint(T value)$/;"	f	class:kit::Buffer	signature:(T value)
kit::Buffer::writeVector	.//kit/Buffer.h	/^    bool writeVector(const std::vector<T>& vec);$/;"	p	class:kit::Buffer	access:public	signature:(const std::vector<T>& vec)
kit::Buffer::writeVector	.//kit/impl/BufferImpl.h	/^inline bool Buffer::writeVector(const std::vector<T>& vec)$/;"	f	class:kit::Buffer	signature:(const std::vector<T>& vec)
kit::Buffer::write_cur_	.//kit/Buffer.h	/^    uint8_t* write_cur_;$/;"	m	class:kit::Buffer	access:protected
kit::Buffer::~Buffer	.//kit/Buffer.cpp	/^Buffer::~Buffer()$/;"	f	class:kit::Buffer	signature:()
kit::Buffer::~Buffer	.//kit/Buffer.h	/^    virtual ~Buffer();$/;"	p	class:kit::Buffer	access:public	signature:()
kit::BufferPool	.//kit/BufferPool.h	/^class BufferPool : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::BufferPool::BufferPool	.//kit/BufferPool.cpp	/^BufferPool::BufferPool()$/;"	f	class:kit::BufferPool	signature:()
kit::BufferPool::BufferPool	.//kit/BufferPool.h	/^    BufferPool();$/;"	p	class:kit::BufferPool	access:public	signature:()
kit::BufferPool::BufferQue	.//kit/BufferPool.h	/^    typedef Queue<Buffer*, BUFFER_POOL_SIZE> BufferQue;$/;"	t	class:kit::BufferPool	access:private
kit::BufferPool::clear	.//kit/BufferPool.cpp	/^void BufferPool::clear()$/;"	f	class:kit::BufferPool	signature:()
kit::BufferPool::clear	.//kit/BufferPool.h	/^    void clear();$/;"	p	class:kit::BufferPool	access:public	signature:()
kit::BufferPool::createBuffer	.//kit/BufferPool.cpp	/^Buffer* BufferPool::createBuffer(size_t size)$/;"	f	class:kit::BufferPool	signature:(size_t size)
kit::BufferPool::createBuffer	.//kit/BufferPool.h	/^    Buffer* createBuffer(size_t size);$/;"	p	class:kit::BufferPool	access:public	signature:(size_t size)
kit::BufferPool::destroyBuffer	.//kit/BufferPool.cpp	/^void BufferPool::destroyBuffer(Buffer* buffer)$/;"	f	class:kit::BufferPool	signature:(Buffer* buffer)
kit::BufferPool::destroyBuffer	.//kit/BufferPool.h	/^    void destroyBuffer(Buffer* buffer);$/;"	p	class:kit::BufferPool	access:public	signature:(Buffer* buffer)
kit::BufferPool::ques_	.//kit/BufferPool.h	/^    BufferQue ques_[BUFFER_QUEUE_CNT];$/;"	m	class:kit::BufferPool	access:private
kit::BufferPool::~BufferPool	.//kit/BufferPool.cpp	/^BufferPool::~BufferPool()$/;"	f	class:kit::BufferPool	signature:()
kit::BufferPool::~BufferPool	.//kit/BufferPool.h	/^    virtual ~BufferPool();$/;"	p	class:kit::BufferPool	access:public	signature:()
kit::BufferPoolManager	.//kit/BufferPool.h	/^class BufferPoolManager : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::BufferPoolManager::BufferPoolManager	.//kit/BufferPool.cpp	/^BufferPoolManager::BufferPoolManager()$/;"	f	class:kit::BufferPoolManager	signature:()
kit::BufferPoolManager::BufferPoolManager	.//kit/BufferPool.h	/^    BufferPoolManager();$/;"	p	class:kit::BufferPoolManager	access:public	signature:()
kit::BufferPoolManager::baseInit	.//kit/BufferPool.cpp	/^bool BufferPoolManager::baseInit()$/;"	f	class:kit::BufferPoolManager	signature:()
kit::BufferPoolManager::baseInit	.//kit/BufferPool.h	/^    virtual bool baseInit();$/;"	p	class:kit::BufferPoolManager	access:public	signature:()
kit::BufferPoolManager::getPool	.//kit/BufferPool.h	/^    BufferPool* getPool() const { return pool_; }$/;"	f	class:kit::BufferPoolManager	access:public	signature:() const
kit::BufferPoolManager::getThreadPool	.//kit/BufferPool.h	/^    BufferPool* getThreadPool() const { return thread_pool_; }$/;"	f	class:kit::BufferPoolManager	access:public	signature:() const
kit::BufferPoolManager::pool_	.//kit/BufferPool.h	/^    BufferPool* pool_;$/;"	m	class:kit::BufferPoolManager	access:private
kit::BufferPoolManager::thread_pool_	.//kit/BufferPool.h	/^    BufferPool* thread_pool_;$/;"	m	class:kit::BufferPoolManager	access:private
kit::BufferPoolManager::~BufferPoolManager	.//kit/BufferPool.cpp	/^BufferPoolManager::~BufferPoolManager()$/;"	f	class:kit::BufferPoolManager	signature:()
kit::BufferPoolManager::~BufferPoolManager	.//kit/BufferPool.h	/^    virtual ~BufferPoolManager();$/;"	p	class:kit::BufferPoolManager	access:public	signature:()
kit::CLIENT_EVENT_CNT	.//network/Client.h	/^const uint16_t CLIENT_EVENT_CNT = 128;$/;"	m	namespace:kit
kit::CONNECTION_LIMIT	.//network/Server.h	/^const uint16_t CONNECTION_LIMIT = 0x7FFF;$/;"	m	namespace:kit
kit::Client	.//network/platform/linux/Client_linux.h	/^class Client : public IClient, ThreadHandler$/;"	c	namespace:kit	inherits:IClient,ThreadHandler
kit::Client::Client	.//network/platform/linux/Client_linux.cpp	/^Client::Client()$/;"	f	class:kit::Client	signature:()
kit::Client::Client	.//network/platform/linux/Client_linux.h	/^	Client();$/;"	p	class:kit::Client	access:public	signature:()
kit::Client::addCtrl	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::addCtrl(int32_t fd, int32_t events)$/;"	f	class:kit::Client	signature:(int32_t fd, int32_t events)
kit::Client::addCtrl	.//network/platform/linux/Client_linux.h	/^    int32_t addCtrl(int32_t fd, int32_t events);$/;"	p	class:kit::Client	access:protected	signature:(int32_t fd, int32_t events)
kit::Client::delCtrl	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::delCtrl(int32_t fd)$/;"	f	class:kit::Client	signature:(int32_t fd)
kit::Client::delCtrl	.//network/platform/linux/Client_linux.h	/^    int32_t delCtrl(int32_t fd);$/;"	p	class:kit::Client	access:protected	signature:(int32_t fd)
kit::Client::handleEvents	.//network/platform/linux/Client_linux.cpp	/^void Client::handleEvents(int32_t events)$/;"	f	class:kit::Client	signature:(int32_t events)
kit::Client::handleEvents	.//network/platform/linux/Client_linux.h	/^    void handleEvents(int32_t events);$/;"	p	class:kit::Client	access:protected	signature:(int32_t events)
kit::Client::handleThread	.//network/platform/linux/Client_linux.cpp	/^void Client::handleThread()$/;"	f	class:kit::Client	signature:()
kit::Client::handleThread	.//network/platform/linux/Client_linux.h	/^    void handleThread();$/;"	p	class:kit::Client	access:protected	signature:()
kit::Client::poll_fd_	.//network/platform/linux/Client_linux.h	/^    int32_t poll_fd_;$/;"	m	class:kit::Client	access:private
kit::Client::shutdown	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::shutdown()$/;"	f	class:kit::Client	signature:()
kit::Client::shutdown	.//network/platform/linux/Client_linux.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::Client	access:public	signature:()
kit::Client::startup	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::startup(const char* ip, int32_t port)$/;"	f	class:kit::Client	signature:(const char* ip, int32_t port)
kit::Client::startup	.//network/platform/linux/Client_linux.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::Client	access:public	signature:(const char* ip, int32_t port)
kit::Client::thread_	.//network/platform/linux/Client_linux.h	/^    Thread* thread_;$/;"	m	class:kit::Client	access:private
kit::Client::update	.//network/platform/linux/Client_linux.cpp	/^void Client::update()$/;"	f	class:kit::Client	signature:()
kit::Client::update	.//network/platform/linux/Client_linux.h	/^    virtual void update();$/;"	p	class:kit::Client	access:public	signature:()
kit::Client::~Client	.//network/platform/linux/Client_linux.cpp	/^Client::~Client()$/;"	f	class:kit::Client	signature:()
kit::Client::~Client	.//network/platform/linux/Client_linux.h	/^    virtual ~Client();$/;"	p	class:kit::Client	access:public	signature:()
kit::DPROTOCOLERR	.//network/netsys.h	/^const ProtocolID DPROTOCOLERR = -1;$/;"	m	namespace:kit
kit::DSESSIONERR	.//network/netsys.h	/^const SessionID DSESSIONERR = -1;$/;"	m	namespace:kit
kit::DSOCKERR	.//network/netsys.h	/^const SocketID DSOCKERR = -1;$/;"	m	namespace:kit
kit::DebugCmdHandler	.//debug/DebugInput.h	/^typedef std::function<void(const std::string&)> DebugCmdHandler;$/;"	t	namespace:kit
kit::DebugInput	.//debug/DebugInput.h	/^class DebugInput : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::DebugInput::DebugInput	.//debug/DebugInput.cpp	/^DebugInput::DebugInput()$/;"	f	class:kit::DebugInput	signature:()
kit::DebugInput::DebugInput	.//debug/DebugInput.h	/^    DebugInput();$/;"	p	class:kit::DebugInput	access:public	signature:()
kit::DebugInput::addHandler	.//debug/DebugInput.cpp	/^void DebugInput::addHandler(DebugCmdHandler handler)$/;"	f	class:kit::DebugInput	signature:(DebugCmdHandler handler)
kit::DebugInput::addHandler	.//debug/DebugInput.h	/^    virtual void addHandler(DebugCmdHandler handler);$/;"	p	class:kit::DebugInput	access:public	signature:(DebugCmdHandler handler)
kit::DebugInput::baseInit	.//debug/DebugInput.cpp	/^bool DebugInput::baseInit()$/;"	f	class:kit::DebugInput	signature:()
kit::DebugInput::baseInit	.//debug/DebugInput.h	/^    virtual bool baseInit();$/;"	p	class:kit::DebugInput	access:public	signature:()
kit::DebugInput::buf_	.//debug/DebugInput.h	/^    char buf_[DEBUG_INPUT_SIZE];$/;"	m	class:kit::DebugInput	access:private
kit::DebugInput::handler_map_	.//debug/DebugInput.h	/^    std::unordered_map<std::string, DebugCmdHandler> handler_map_;$/;"	m	class:kit::DebugInput	access:private
kit::DebugInput::handler_vec_	.//debug/DebugInput.h	/^    std::vector<DebugCmdHandler> handler_vec_;$/;"	m	class:kit::DebugInput	access:private
kit::DebugInput::setHandler	.//debug/DebugInput.cpp	/^void DebugInput::setHandler(const std::string& cmd, DebugCmdHandler handler)$/;"	f	class:kit::DebugInput	signature:(const std::string& cmd, DebugCmdHandler handler)
kit::DebugInput::setHandler	.//debug/DebugInput.h	/^    virtual void setHandler(const std::string& cmd, DebugCmdHandler handler);$/;"	p	class:kit::DebugInput	access:public	signature:(const std::string& cmd, DebugCmdHandler handler)
kit::DebugInput::update	.//debug/DebugInput.cpp	/^void DebugInput::update()$/;"	f	class:kit::DebugInput	signature:()
kit::DebugInput::update	.//debug/DebugInput.h	/^    virtual void update();$/;"	p	class:kit::DebugInput	access:public	signature:()
kit::DebugInput::~DebugInput	.//debug/DebugInput.cpp	/^DebugInput::~DebugInput()$/;"	f	class:kit::DebugInput	signature:()
kit::DebugInput::~DebugInput	.//debug/DebugInput.h	/^    virtual ~DebugInput();$/;"	p	class:kit::DebugInput	access:public	signature:()
kit::Emitter	.//kit/Emitter.h	/^class Emitter$/;"	c	namespace:kit
kit::Emitter::Emitter	.//kit/Emitter.h	/^    Emitter()$/;"	f	class:kit::Emitter	access:public	signature:()
kit::Emitter::Handler	.//kit/Emitter.h	/^    typedef std::function<void (const Event*)> Handler;$/;"	t	class:kit::Emitter	access:public
kit::Emitter::HandlerID	.//kit/Emitter.h	/^    typedef int HandlerID;$/;"	t	class:kit::Emitter	access:public
kit::Emitter::HandlerItem	.//kit/Emitter.h	/^    } HandlerItem;$/;"	t	class:kit::Emitter	typeref:struct:kit::Emitter::__anon1	access:public
kit::Emitter::HandlerVec	.//kit/Emitter.h	/^    typedef std::vector<HandlerItem> HandlerVec;$/;"	t	class:kit::Emitter	access:private
kit::Emitter::__anon1::deleted	.//kit/Emitter.h	/^        bool deleted;$/;"	m	struct:kit::Emitter::__anon1	access:public
kit::Emitter::__anon1::handler	.//kit/Emitter.h	/^        Handler handler;$/;"	m	struct:kit::Emitter::__anon1	access:public
kit::Emitter::__anon1::id	.//kit/Emitter.h	/^        HandlerID id;$/;"	m	struct:kit::Emitter::__anon1	access:public
kit::Emitter::__anon1::once	.//kit/Emitter.h	/^        bool once;$/;"	m	struct:kit::Emitter::__anon1	access:public
kit::Emitter::__swap	.//kit/Emitter.h	/^    void __swap(HandlerVec& vec, int ia, int ib)$/;"	f	class:kit::Emitter	access:private	signature:(HandlerVec& vec, int ia, int ib)
kit::Emitter::clear	.//kit/Emitter.h	/^    void clear()$/;"	f	class:kit::Emitter	access:public	signature:()
kit::Emitter::emit	.//kit/Emitter.h	/^    void emit(int event_id, const Event* event)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, const Event* event)
kit::Emitter::handler_vecs_	.//kit/Emitter.h	/^    HandlerVec handler_vecs_[EventLength];$/;"	m	class:kit::Emitter	access:private
kit::Emitter::id_	.//kit/Emitter.h	/^    HandlerID id_;$/;"	m	class:kit::Emitter	access:private
kit::Emitter::off	.//kit/Emitter.h	/^    void off(int event_id, HandlerID id)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, HandlerID id)
kit::Emitter::on	.//kit/Emitter.h	/^    HandlerID on(int event_id, Handler handler)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, Handler handler)
kit::Emitter::once	.//kit/Emitter.h	/^    void once(int event_id, Handler handler)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, Handler handler)
kit::Emitter::~Emitter	.//kit/Emitter.h	/^    ~Emitter()$/;"	f	class:kit::Emitter	access:public	signature:()
kit::Event	.//kit/Emitter.h	/^class Event : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Event::event_id	.//kit/Emitter.h	/^    int event_id;$/;"	m	class:kit::Event	access:public
kit::Gear	.//Gear.h	/^class Gear : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Gear::Gear	.//Gear.cpp	/^Gear::Gear()$/;"	f	class:kit::Gear	signature:()
kit::Gear::Gear	.//Gear.h	/^    Gear();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::baseInit	.//Gear.cpp	/^bool Gear::baseInit()$/;"	f	class:kit::Gear	signature:()
kit::Gear::baseInit	.//Gear.h	/^    virtual bool baseInit();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::begin	.//Gear.cpp	/^void Gear::begin()$/;"	f	class:kit::Gear	signature:()
kit::Gear::begin	.//Gear.h	/^    virtual void begin();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::begine_time_	.//Gear.h	/^    uint32_t begine_time_;$/;"	m	class:kit::Gear	access:private
kit::Gear::end	.//Gear.cpp	/^void Gear::end()$/;"	f	class:kit::Gear	signature:()
kit::Gear::end	.//Gear.h	/^    virtual void end();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::frame_	.//Gear.h	/^    uint32_t frame_;$/;"	m	class:kit::Gear	access:protected
kit::Gear::frame_delta_	.//Gear.h	/^    uint32_t frame_delta_;$/;"	m	class:kit::Gear	access:protected
kit::Gear::frame_msec_	.//Gear.h	/^    uint32_t frame_msec_;$/;"	m	class:kit::Gear	access:protected
kit::Gear::frame_rate_	.//Gear.h	/^    uint32_t frame_rate_;$/;"	m	class:kit::Gear	access:protected
kit::Gear::getFrame	.//Gear.h	/^    uint32_t getFrame() const { return frame_; }$/;"	f	class:kit::Gear	access:public	signature:() const
kit::Gear::getFrameDelta	.//Gear.h	/^    uint32_t getFrameDelta() const { return frame_delta_; }$/;"	f	class:kit::Gear	access:public	signature:() const
kit::Gear::getFrameRate	.//Gear.h	/^    uint32_t getFrameRate() const { return frame_rate_; }$/;"	f	class:kit::Gear	access:public	signature:() const
kit::Gear::isValid	.//Gear.h	/^    bool isValid() const { return valid_; }$/;"	f	class:kit::Gear	access:public	signature:() const
kit::Gear::logic	.//Gear.cpp	/^void Gear::logic()$/;"	f	class:kit::Gear	signature:()
kit::Gear::logic	.//Gear.h	/^    virtual void logic();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::mainLoop	.//Gear.cpp	/^void Gear::mainLoop()$/;"	f	class:kit::Gear	signature:()
kit::Gear::mainLoop	.//Gear.h	/^    void mainLoop();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::next_delta_zero_	.//Gear.h	/^    bool next_delta_zero_;$/;"	m	class:kit::Gear	access:protected
kit::Gear::setFrameRate	.//Gear.cpp	/^void Gear::setFrameRate(unsigned int rate)$/;"	f	class:kit::Gear	signature:(unsigned int rate)
kit::Gear::setFrameRate	.//Gear.h	/^    void setFrameRate(uint32_t rate);$/;"	p	class:kit::Gear	access:public	signature:(uint32_t rate)
kit::Gear::setNextDeltaZero	.//Gear.h	/^    void setNextDeltaZero(bool zero) { next_delta_zero_ = zero; }$/;"	f	class:kit::Gear	access:public	signature:(bool zero)
kit::Gear::spareLogic	.//Gear.h	/^    virtual uint32_t spareLogic(uint32_t spare_time) { return spare_time; };$/;"	f	class:kit::Gear	access:public	signature:(uint32_t spare_time)
kit::Gear::stop	.//Gear.cpp	/^void Gear::stop()$/;"	f	class:kit::Gear	signature:()
kit::Gear::stop	.//Gear.h	/^    virtual void stop();$/;"	p	class:kit::Gear	access:public	signature:()
kit::Gear::valid_	.//Gear.h	/^    bool valid_;$/;"	m	class:kit::Gear	access:protected
kit::Gear::wait_time_	.//Gear.h	/^    uint32_t wait_time_;$/;"	m	class:kit::Gear	access:private
kit::Gear::~Gear	.//Gear.cpp	/^Gear::~Gear()$/;"	f	class:kit::Gear	signature:()
kit::Gear::~Gear	.//Gear.h	/^    virtual ~Gear();$/;"	p	class:kit::Gear	access:public	signature:()
kit::IClient	.//network/Client.h	/^class IClient : public Terminal$/;"	c	namespace:kit	inherits:Terminal
kit::IClient::EventQue	.//network/Client.h	/^    typedef Queue<PollEvent, CLIENT_EVENT_CNT> EventQue;$/;"	t	class:kit::IClient	access:protected
kit::IClient::IClient	.//network/Client.cpp	/^IClient::IClient()$/;"	f	class:kit::IClient	signature:()
kit::IClient::IClient	.//network/Client.h	/^	IClient();$/;"	p	class:kit::IClient	access:public	signature:()
kit::IClient::active_	.//network/Client.h	/^    bool active_;$/;"	m	class:kit::IClient	access:protected
kit::IClient::event_que_	.//network/Client.h	/^    EventQue event_que_;$/;"	m	class:kit::IClient	access:protected
kit::IClient::handlePollEvent	.//network/Client.cpp	/^void IClient::handlePollEvent()$/;"	f	class:kit::IClient	signature:()
kit::IClient::handlePollEvent	.//network/Client.h	/^    virtual void handlePollEvent();$/;"	p	class:kit::IClient	access:protected	signature:()
kit::IClient::packet_handler_	.//network/Client.h	/^    IPacketHandler* packet_handler_;$/;"	m	class:kit::IClient	access:protected
kit::IClient::sendPacket	.//network/Client.cpp	/^void IClient::sendPacket(Packet* buf)$/;"	f	class:kit::IClient	signature:(Packet* buf)
kit::IClient::sendPacket	.//network/Client.h	/^    void sendPacket(Packet* buf);$/;"	p	class:kit::IClient	access:public	signature:(Packet* buf)
kit::IClient::shutdown	.//network/Client.cpp	/^int32_t IClient::shutdown()$/;"	f	class:kit::IClient	signature:()
kit::IClient::shutdown	.//network/Client.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::IClient	access:public	signature:()
kit::IClient::socket_	.//network/Client.h	/^	Socket* socket_;$/;"	m	class:kit::IClient	access:protected
kit::IClient::startup	.//network/Client.cpp	/^int32_t IClient::startup(const char* ip, int32_t port)$/;"	f	class:kit::IClient	signature:(const char* ip, int32_t port)
kit::IClient::startup	.//network/Client.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::IClient	access:public	signature:(const char* ip, int32_t port)
kit::IClient::update	.//network/Client.cpp	/^void IClient::update()$/;"	f	class:kit::IClient	signature:()
kit::IClient::update	.//network/Client.h	/^    virtual void update();$/;"	p	class:kit::IClient	access:public	signature:()
kit::IClient::~IClient	.//network/Client.cpp	/^IClient::~IClient()$/;"	f	class:kit::IClient	signature:()
kit::IClient::~IClient	.//network/Client.h	/^    virtual ~IClient();$/;"	p	class:kit::IClient	access:public	signature:()
kit::IMutex	.//kit/Thread.h	/^class IMutex : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::IMutex::IMutex	.//kit/Thread.h	/^    IMutex() {}$/;"	f	class:kit::IMutex	access:public	signature:()
kit::IMutex::lock	.//kit/Thread.h	/^    virtual int32_t lock() = 0;$/;"	p	class:kit::IMutex	access:public	signature:()
kit::IMutex::tryLock	.//kit/Thread.h	/^    virtual int32_t tryLock() = 0;$/;"	p	class:kit::IMutex	access:public	signature:()
kit::IMutex::unlock	.//kit/Thread.h	/^    virtual int32_t unlock() = 0;$/;"	p	class:kit::IMutex	access:public	signature:()
kit::IMutex::~IMutex	.//kit/Thread.h	/^    virtual ~IMutex() {}$/;"	f	class:kit::IMutex	access:public	signature:()
kit::IServer	.//network/Server.h	/^class IServer : public Terminal$/;"	c	namespace:kit	inherits:Terminal
kit::IServer::EventQue	.//network/Server.h	/^    typedef Queue<PollEvent, SERVER_EVENT_CNT> EventQue;$/;"	t	class:kit::IServer	access:protected
kit::IServer::IServer	.//network/Server.cpp	/^IServer::IServer()$/;"	f	class:kit::IServer	signature:()
kit::IServer::IServer	.//network/Server.h	/^	IServer();$/;"	p	class:kit::IServer	access:public	signature:()
kit::IServer::active_	.//network/Server.h	/^    bool active_;$/;"	m	class:kit::IServer	access:protected
kit::IServer::addSocket	.//network/Server.cpp	/^int32_t IServer::addSocket(SocketID fd, Socket* sock)$/;"	f	class:kit::IServer	signature:(SocketID fd, Socket* sock)
kit::IServer::addSocket	.//network/Server.h	/^    virtual int32_t addSocket(SocketID fd, Socket* sock = NULL);$/;"	p	class:kit::IServer	access:protected	signature:(SocketID fd, Socket* sock = NULL)
kit::IServer::baseInit	.//network/Server.cpp	/^bool IServer::baseInit()$/;"	f	class:kit::IServer	signature:()
kit::IServer::baseInit	.//network/Server.h	/^    virtual bool baseInit();$/;"	p	class:kit::IServer	access:protected	signature:()
kit::IServer::delSocket	.//network/Server.cpp	/^int32_t IServer::delSocket(SocketID fd)$/;"	f	class:kit::IServer	signature:(SocketID fd)
kit::IServer::delSocket	.//network/Server.h	/^    virtual int32_t delSocket(SocketID fd);$/;"	p	class:kit::IServer	access:protected	signature:(SocketID fd)
kit::IServer::del_socket_mutex_	.//network/Server.h	/^    Mutex* del_socket_mutex_;$/;"	m	class:kit::IServer	access:protected
kit::IServer::event_que_	.//network/Server.h	/^    EventQue event_que_;$/;"	m	class:kit::IServer	access:protected
kit::IServer::getSocket	.//network/Server.cpp	/^Socket* IServer::getSocket(SocketID fd)$/;"	f	class:kit::IServer	signature:(SocketID fd)
kit::IServer::getSocket	.//network/Server.h	/^    Socket* getSocket(int32_t fd);$/;"	p	class:kit::IServer	access:protected	signature:(int32_t fd)
kit::IServer::handlePollEvent	.//network/Server.cpp	/^void IServer::handlePollEvent()$/;"	f	class:kit::IServer	signature:()
kit::IServer::handlePollEvent	.//network/Server.h	/^    virtual void handlePollEvent();$/;"	p	class:kit::IServer	access:protected	signature:()
kit::IServer::shutdown	.//network/Server.cpp	/^int32_t IServer::shutdown()$/;"	f	class:kit::IServer	signature:()
kit::IServer::shutdown	.//network/Server.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::IServer	access:public	signature:()
kit::IServer::socket_	.//network/Server.h	/^	Socket* socket_;$/;"	m	class:kit::IServer	access:protected
kit::IServer::sockets_	.//network/Server.h	/^    Socket* sockets_[CONNECTION_LIMIT];$/;"	m	class:kit::IServer	access:protected
kit::IServer::startup	.//network/Server.cpp	/^int32_t IServer::startup(const char* ip, int32_t port)$/;"	f	class:kit::IServer	signature:(const char* ip, int32_t port)
kit::IServer::startup	.//network/Server.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::IServer	access:public	signature:(const char* ip, int32_t port)
kit::IServer::update	.//network/Server.cpp	/^void IServer::update()$/;"	f	class:kit::IServer	signature:()
kit::IServer::update	.//network/Server.h	/^    virtual void update() = 0;$/;"	p	class:kit::IServer	access:public	signature:()
kit::IServer::~IServer	.//network/Server.cpp	/^IServer::~IServer()$/;"	f	class:kit::IServer	signature:()
kit::IServer::~IServer	.//network/Server.h	/^    virtual ~IServer();$/;"	p	class:kit::IServer	access:public	signature:()
kit::ISockAddr	.//network/SockAddr.h	/^class ISockAddr : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::ISockAddr::ISockAddr	.//network/SockAddr.cpp	/^ISockAddr::ISockAddr()$/;"	f	class:kit::ISockAddr	signature:()
kit::ISockAddr::ISockAddr	.//network/SockAddr.h	/^    ISockAddr();$/;"	p	class:kit::ISockAddr	access:public	signature:()
kit::ISockAddr::addr_	.//network/SockAddr.h	/^    sockaddr* addr_;$/;"	m	class:kit::ISockAddr	access:protected
kit::ISockAddr::init	.//network/SockAddr.cpp	/^void ISockAddr::init(const char* ip, uint16_t port, uint16_t family)$/;"	f	class:kit::ISockAddr	signature:(const char* ip, uint16_t port, uint16_t family)
kit::ISockAddr::init	.//network/SockAddr.h	/^    virtual void init(const char* ip, uint16_t port, uint16_t family);$/;"	p	class:kit::ISockAddr	access:public	signature:(const char* ip, uint16_t port, uint16_t family)
kit::ISockAddr::ip	.//network/SockAddr.h	/^    std::string ip;$/;"	m	class:kit::ISockAddr	access:public
kit::ISockAddr::operator sockaddr*	.//network/SockAddr.h	/^    operator sockaddr*() { return (sockaddr*)addr_; }$/;"	f	class:kit::ISockAddr	access:public	signature:()
kit::ISockAddr::operator sockaddr_in*	.//network/SockAddr.h	/^    operator sockaddr_in*() { return (sockaddr_in*)addr_; }$/;"	f	class:kit::ISockAddr	access:public	signature:()
kit::ISockAddr::port	.//network/SockAddr.h	/^    uint16_t port;$/;"	m	class:kit::ISockAddr	access:public
kit::ISockAddr::valid	.//network/SockAddr.h	/^    bool valid() const { return valid_; }$/;"	f	class:kit::ISockAddr	access:public	signature:() const
kit::ISockAddr::valid_	.//network/SockAddr.h	/^    bool valid_;$/;"	m	class:kit::ISockAddr	access:protected
kit::ISockAddr::~ISockAddr	.//network/SockAddr.cpp	/^ISockAddr::~ISockAddr()$/;"	f	class:kit::ISockAddr	signature:()
kit::ISockAddr::~ISockAddr	.//network/SockAddr.h	/^    virtual ~ISockAddr();$/;"	p	class:kit::ISockAddr	access:public	signature:()
kit::ISocket	.//network/Socket.h	/^class ISocket : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::ISocket::ISocket	.//network/Socket.cpp	/^ISocket::ISocket()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::ISocket	.//network/Socket.h	/^	ISocket();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::accept	.//network/Socket.cpp	/^int32_t ISocket::accept(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
kit::ISocket::accept	.//network/Socket.h	/^	int32_t accept(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
kit::ISocket::addr_	.//network/Socket.h	/^    SockAddr* addr_;$/;"	m	class:kit::ISocket	access:protected
kit::ISocket::baseInit	.//network/Socket.cpp	/^bool ISocket::baseInit()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::baseInit	.//network/Socket.h	/^    virtual bool baseInit();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::bind	.//network/Socket.cpp	/^int32_t ISocket::bind(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
kit::ISocket::bind	.//network/Socket.h	/^	int32_t bind(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
kit::ISocket::close	.//network/Socket.cpp	/^void ISocket::close()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::close	.//network/Socket.h	/^	void close();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::connect	.//network/Socket.cpp	/^int32_t ISocket::connect(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
kit::ISocket::connect	.//network/Socket.h	/^	int32_t connect(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
kit::ISocket::deleted	.//network/Socket.h	/^    bool deleted;$/;"	m	class:kit::ISocket	access:public
kit::ISocket::doRecv	.//network/Socket.cpp	/^int32_t ISocket::doRecv()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::doRecv	.//network/Socket.h	/^    int32_t doRecv();$/;"	p	class:kit::ISocket	access:protected	signature:()
kit::ISocket::doSend	.//network/Socket.cpp	/^int32_t ISocket::doSend()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::doSend	.//network/Socket.h	/^    int32_t doSend();$/;"	p	class:kit::ISocket	access:protected	signature:()
kit::ISocket::flushRecv	.//network/Socket.cpp	/^int32_t ISocket::flushRecv()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::flushRecv	.//network/Socket.h	/^	int32_t flushRecv();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::flushSend	.//network/Socket.cpp	/^int32_t ISocket::flushSend()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::flushSend	.//network/Socket.h	/^	int32_t flushSend();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::getAddr	.//network/Socket.h	/^    SockAddr* getAddr() const { return addr_; }$/;"	f	class:kit::ISocket	access:public	signature:() const
kit::ISocket::getErrno	.//network/Socket.cpp	/^int32_t ISocket::getErrno()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::getErrno	.//network/Socket.h	/^	int32_t getErrno();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::getHandle	.//network/Socket.h	/^	inline SocketID getHandle() const { return sock_; }$/;"	f	class:kit::ISocket	access:public	signature:() const
kit::ISocket::getOption	.//network/Socket.cpp	/^int32_t ISocket::getOption(int32_t level, int32_t optname, char* optval, int32_t* optlen)$/;"	f	class:kit::ISocket	signature:(int32_t level, int32_t optname, char* optval, int32_t* optlen)
kit::ISocket::getOption	.//network/Socket.h	/^	int32_t getOption(int32_t level, int32_t optname, char* optval, int32_t* optlen);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t level, int32_t optname, char* optval, int32_t* optlen)
kit::ISocket::getRecvQueue	.//network/Socket.h	/^    PacketQue& getRecvQueue() { return recv_que_; }$/;"	f	class:kit::ISocket	access:public	signature:()
kit::ISocket::getSession	.//network/Socket.h	/^    Session* getSession() const { return session_; }$/;"	f	class:kit::ISocket	access:public	signature:() const
kit::ISocket::init	.//network/Socket.cpp	/^void ISocket::init(SocketID sock)$/;"	f	class:kit::ISocket	signature:(SocketID sock)
kit::ISocket::init	.//network/Socket.cpp	/^void ISocket::init(int32_t family, int32_t type, int32_t protocol)$/;"	f	class:kit::ISocket	signature:(int32_t family, int32_t type, int32_t protocol)
kit::ISocket::init	.//network/Socket.h	/^	virtual void init(int32_t family, int32_t type, int32_t protocol);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t family, int32_t type, int32_t protocol)
kit::ISocket::init	.//network/Socket.h	/^    virtual void init(SocketID sock);$/;"	p	class:kit::ISocket	access:public	signature:(SocketID sock)
kit::ISocket::ioctl	.//network/Socket.cpp	/^int32_t ISocket::ioctl(unsigned long cmd, char* argp)$/;"	f	class:kit::ISocket	signature:(unsigned long cmd, char* argp)
kit::ISocket::ioctl	.//network/Socket.h	/^	int32_t ioctl(unsigned long cmd, char* argp);$/;"	p	class:kit::ISocket	access:public	signature:(unsigned long cmd, char* argp)
kit::ISocket::listen	.//network/Socket.cpp	/^int32_t ISocket::listen(int32_t count)$/;"	f	class:kit::ISocket	signature:(int32_t count)
kit::ISocket::listen	.//network/Socket.h	/^	int32_t listen(int32_t count);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t count)
kit::ISocket::open	.//network/Socket.cpp	/^void ISocket::open()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::open	.//network/Socket.h	/^	void open();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::packet_seed_	.//network/Socket.h	/^    uint32_t packet_seed_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::pullPacketsToSession	.//network/Socket.cpp	/^void ISocket::pullPacketsToSession()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::pullPacketsToSession	.//network/Socket.h	/^    void pullPacketsToSession();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::ISocket::ready_out	.//network/Socket.h	/^    bool ready_out;$/;"	m	class:kit::ISocket	access:public
kit::ISocket::recv	.//network/Socket.cpp	/^int32_t ISocket::recv(char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::ISocket	signature:(char* buf, int32_t size, int32_t mode)
kit::ISocket::recv	.//network/Socket.h	/^	int32_t recv(char* buf, int32_t size, int32_t mode = 0);$/;"	p	class:kit::ISocket	access:public	signature:(char* buf, int32_t size, int32_t mode = 0)
kit::ISocket::recvBuffer	.//network/Socket.cpp	/^int32_t ISocket::recvBuffer(Buffer* buf)$/;"	f	class:kit::ISocket	signature:(Buffer* buf)
kit::ISocket::recvBuffer	.//network/Socket.h	/^    int32_t recvBuffer(Buffer* buf);$/;"	p	class:kit::ISocket	access:protected	signature:(Buffer* buf)
kit::ISocket::recvClear	.//network/Socket.cpp	/^void ISocket::recvClear()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::recvClear	.//network/Socket.h	/^    void recvClear();$/;"	p	class:kit::ISocket	access:protected	signature:()
kit::ISocket::recvFrom	.//network/Socket.cpp	/^int32_t ISocket::recvFrom(char* buf, int32_t size, int32_t mode, SockAddr *addr)$/;"	f	class:kit::ISocket	signature:(char* buf, int32_t size, int32_t mode, SockAddr *addr)
kit::ISocket::recvFrom	.//network/Socket.h	/^	int32_t recvFrom(char* buf, int32_t size, int32_t mode, SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(char* buf, int32_t size, int32_t mode, SockAddr* addr)
kit::ISocket::recvPacket	.//network/Socket.cpp	/^int32_t ISocket::recvPacket(Packet* pack)$/;"	f	class:kit::ISocket	signature:(Packet* pack)
kit::ISocket::recvPacket	.//network/Socket.h	/^    int32_t recvPacket(Packet* pack);$/;"	p	class:kit::ISocket	access:public	signature:(Packet* pack)
kit::ISocket::recv_buf_	.//network/Socket.h	/^    Buffer* recv_buf_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::recv_count_	.//network/Socket.h	/^    uint32_t recv_count_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::recv_head_buf_	.//network/Socket.h	/^    Buffer* recv_head_buf_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::recv_packet_	.//network/Socket.h	/^    Packet* recv_packet_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::recv_que_	.//network/Socket.h	/^    PacketQue recv_que_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::send	.//network/Socket.cpp	/^int32_t ISocket::send(const char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::ISocket	signature:(const char* buf, int32_t size, int32_t mode)
kit::ISocket::send	.//network/Socket.h	/^	int32_t send(const char* buf, int32_t size, int32_t mode = 0);$/;"	p	class:kit::ISocket	access:public	signature:(const char* buf, int32_t size, int32_t mode = 0)
kit::ISocket::sendBuffer	.//network/Socket.cpp	/^int32_t ISocket::sendBuffer(Buffer* buf)$/;"	f	class:kit::ISocket	signature:(Buffer* buf)
kit::ISocket::sendBuffer	.//network/Socket.h	/^    int32_t sendBuffer(Buffer* buf);$/;"	p	class:kit::ISocket	access:protected	signature:(Buffer* buf)
kit::ISocket::sendClear	.//network/Socket.cpp	/^void ISocket::sendClear()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::sendClear	.//network/Socket.h	/^	void sendClear();$/;"	p	class:kit::ISocket	access:protected	signature:()
kit::ISocket::sendPacket	.//network/Socket.cpp	/^int32_t ISocket::sendPacket(Packet* pack)$/;"	f	class:kit::ISocket	signature:(Packet* pack)
kit::ISocket::sendPacket	.//network/Socket.h	/^    int32_t sendPacket(Packet* pack);$/;"	p	class:kit::ISocket	access:public	signature:(Packet* pack)
kit::ISocket::sendTo	.//network/Socket.cpp	/^int32_t ISocket::sendTo(const char* buf, int32_t size, int32_t mode, SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(const char* buf, int32_t size, int32_t mode, SockAddr* addr)
kit::ISocket::sendTo	.//network/Socket.h	/^	int32_t sendTo(const char* buf, int32_t size, int32_t mode, SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(const char* buf, int32_t size, int32_t mode, SockAddr* addr)
kit::ISocket::send_buf_	.//network/Socket.h	/^    Buffer* send_buf_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::send_bufs_	.//network/Socket.h	/^    Buffer* send_bufs_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::send_head_buf_	.//network/Socket.h	/^    Buffer* send_head_buf_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::send_packet_	.//network/Socket.h	/^    Packet* send_packet_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::send_que_	.//network/Socket.h	/^    PacketQue send_que_;$/;"	m	class:kit::ISocket	access:private
kit::ISocket::session_	.//network/Socket.h	/^    Session* session_;$/;"	m	class:kit::ISocket	access:protected
kit::ISocket::setAddr	.//network/Socket.cpp	/^void ISocket::setAddr(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
kit::ISocket::setAddr	.//network/Socket.h	/^    void setAddr(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
kit::ISocket::setHandle	.//network/Socket.cpp	/^void ISocket::setHandle(SocketID sock)$/;"	f	class:kit::ISocket	signature:(SocketID sock)
kit::ISocket::setHandle	.//network/Socket.h	/^	void setHandle(SocketID sock);$/;"	p	class:kit::ISocket	access:public	signature:(SocketID sock)
kit::ISocket::setOption	.//network/Socket.cpp	/^int32_t ISocket::setOption(int32_t level, int32_t optname, const char* optval, int32_t optlen)$/;"	f	class:kit::ISocket	signature:(int32_t level, int32_t optname, const char* optval, int32_t optlen)
kit::ISocket::setOption	.//network/Socket.h	/^	int32_t setOption(int32_t level, int32_t optname, const char* optval, int32_t optlen);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t level, int32_t optname, const char* optval, int32_t optlen)
kit::ISocket::setSession	.//network/Socket.h	/^    void setSession(Session* session) { session_ = session; }$/;"	f	class:kit::ISocket	access:public	signature:(Session* session)
kit::ISocket::shutdown	.//network/Socket.cpp	/^int32_t ISocket::shutdown(int32_t mode)$/;"	f	class:kit::ISocket	signature:(int32_t mode)
kit::ISocket::shutdown	.//network/Socket.h	/^	int32_t shutdown(int32_t mode);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t mode)
kit::ISocket::sock_	.//network/Socket.h	/^	SocketID sock_;$/;"	m	class:kit::ISocket	access:protected
kit::ISocket::valid	.//network/Socket.h	/^    bool valid() const { return sock_ != DSOCKERR; }$/;"	f	class:kit::ISocket	access:public	signature:() const
kit::ISocket::~ISocket	.//network/Socket.cpp	/^ISocket::~ISocket()$/;"	f	class:kit::ISocket	signature:()
kit::ISocket::~ISocket	.//network/Socket.h	/^	virtual ~ISocket();$/;"	p	class:kit::ISocket	access:public	signature:()
kit::IThread	.//kit/Thread.h	/^class  IThread : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::IThread::IThread	.//kit/Thread.cpp	/^IThread::IThread()$/;"	f	class:kit::IThread	signature:()
kit::IThread::IThread	.//kit/Thread.h	/^    IThread();$/;"	p	class:kit::IThread	access:public	signature:()
kit::IThread::active_	.//kit/Thread.h	/^    bool active_;$/;"	m	class:kit::IThread	access:protected
kit::IThread::baseInit	.//kit/Thread.cpp	/^bool IThread::baseInit()$/;"	f	class:kit::IThread	signature:()
kit::IThread::baseInit	.//kit/Thread.h	/^    virtual bool baseInit();$/;"	p	class:kit::IThread	access:public	signature:()
kit::IThread::handler_	.//kit/Thread.h	/^    ThreadHandler* handler_;$/;"	m	class:kit::IThread	access:protected
kit::IThread::init	.//kit/Thread.cpp	/^void IThread::init(ThreadHandler* handler)$/;"	f	class:kit::IThread	signature:(ThreadHandler* handler)
kit::IThread::init	.//kit/Thread.h	/^    virtual void init(ThreadHandler* handler);$/;"	p	class:kit::IThread	access:public	signature:(ThreadHandler* handler)
kit::IThread::join	.//kit/Thread.h	/^    virtual void join() = 0;$/;"	p	class:kit::IThread	access:public	signature:()
kit::IThread::mutex_	.//kit/Thread.h	/^    IMutex* mutex_;$/;"	m	class:kit::IThread	access:protected
kit::IThread::run	.//kit/Thread.cpp	/^void IThread::run()$/;"	f	class:kit::IThread	signature:()
kit::IThread::run	.//kit/Thread.h	/^    virtual void run();$/;"	p	class:kit::IThread	access:public	signature:()
kit::IThread::setHandler	.//kit/Thread.cpp	/^void IThread::setHandler(ThreadHandler* handler)$/;"	f	class:kit::IThread	signature:(ThreadHandler* handler)
kit::IThread::setHandler	.//kit/Thread.h	/^    virtual void setHandler(ThreadHandler* handler);$/;"	p	class:kit::IThread	access:public	signature:(ThreadHandler* handler)
kit::IThread::start	.//kit/Thread.h	/^    virtual int32_t start() = 0;$/;"	p	class:kit::IThread	access:public	signature:()
kit::IThread::stop	.//kit/Thread.cpp	/^void IThread::stop()$/;"	f	class:kit::IThread	signature:()
kit::IThread::stop	.//kit/Thread.h	/^    virtual void stop();$/;"	p	class:kit::IThread	access:public	signature:()
kit::IThread::~IThread	.//kit/Thread.cpp	/^IThread::~IThread()$/;"	f	class:kit::IThread	signature:()
kit::IThread::~IThread	.//kit/Thread.h	/^    virtual ~IThread();$/;"	p	class:kit::IThread	access:public	signature:()
kit::LOG_TYPE_DBG	.//kit/Logger.h	/^    LOG_TYPE_DBG,   \/\/调试日志$/;"	e	enum:kit::__anon2
kit::LOG_TYPE_ERR	.//kit/Logger.h	/^    LOG_TYPE_ERR,   \/\/错误日志$/;"	e	enum:kit::__anon2
kit::LOG_TYPE_LOG	.//kit/Logger.h	/^    LOG_TYPE_LOG,   \/\/普通日志$/;"	e	enum:kit::__anon2
kit::LOG_TYPE_SQL	.//kit/Logger.h	/^    LOG_TYPE_SQL,   \/\/数据库日志$/;"	e	enum:kit::__anon2
kit::List	.//base/List.h	/^class List$/;"	c	namespace:kit
kit::List::Item	.//base/List.h	/^    struct Item $/;"	s	class:kit::List	access:private
kit::List::Item::next	.//base/List.h	/^        Item* next;$/;"	m	struct:kit::List::Item	access:public
kit::List::Item::prev	.//base/List.h	/^        Item* prev;$/;"	m	struct:kit::List::Item	access:public
kit::List::Item::value	.//base/List.h	/^        Type value;$/;"	m	struct:kit::List::Item	access:public
kit::List::Iterator	.//base/List.h	/^    class Iterator$/;"	c	class:kit::List	access:public
kit::List::Iterator::Iterator	.//base/List.h	/^        Iterator(Item* node) : node_(node)$/;"	f	class:kit::List::Iterator	access:public	signature:(Item* node)
kit::List::Iterator::node_	.//base/List.h	/^        Item* node_;$/;"	m	class:kit::List::Iterator	access:public
kit::List::Iterator::operator !=	.//base/List.h	/^        bool operator !=(const Iterator& it)$/;"	f	class:kit::List::Iterator	access:public	signature:(const Iterator& it)
kit::List::Iterator::operator *	.//base/List.h	/^        Type& operator *()$/;"	f	class:kit::List::Iterator	access:public	signature:()
kit::List::Iterator::operator ++	.//base/List.h	/^        Iterator& operator ++()$/;"	f	class:kit::List::Iterator	access:public	signature:()
kit::List::Iterator::operator ==	.//base/List.h	/^        bool operator ==(const Iterator& it)$/;"	f	class:kit::List::Iterator	access:public	signature:(const Iterator& it)
kit::List::List	.//base/List.h	/^    List(): head_(0), tail_(0), count_(0)$/;"	f	class:kit::List	access:public	signature:()
kit::List::begin	.//base/List.h	/^    Iterator begin() const$/;"	f	class:kit::List	access:public	signature:() const
kit::List::clear	.//base/List.h	/^    void clear()$/;"	f	class:kit::List	access:public	signature:()
kit::List::count	.//base/List.h	/^    int count() const { return count_; }$/;"	f	class:kit::List	access:public	signature:() const
kit::List::count_	.//base/List.h	/^    int count_;$/;"	m	class:kit::List	access:private
kit::List::end	.//base/List.h	/^    Iterator end() const$/;"	f	class:kit::List	access:public	signature:() const
kit::List::erase	.//base/List.h	/^    bool erase(int index)$/;"	f	class:kit::List	access:public	signature:(int index)
kit::List::front	.//base/List.h	/^    bool front(Type& value)$/;"	f	class:kit::List	access:public	signature:(Type& value)
kit::List::head_	.//base/List.h	/^    Item* head_;$/;"	m	class:kit::List	access:private
kit::List::insert	.//base/List.h	/^    bool insert(int index, const Type& item)$/;"	f	class:kit::List	access:public	signature:(int index, const Type& item)
kit::List::pop	.//base/List.h	/^    bool pop(Type& value)$/;"	f	class:kit::List	access:public	signature:(Type& value)
kit::List::push	.//base/List.h	/^    bool push(const Type& item)$/;"	f	class:kit::List	access:public	signature:(const Type& item)
kit::List::tail_	.//base/List.h	/^    Item* tail_;$/;"	m	class:kit::List	access:private
kit::List::~List	.//base/List.h	/^    ~List()$/;"	f	class:kit::List	access:public	signature:()
kit::Logger	.//kit/Logger.h	/^class Logger : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Logger::Logger	.//kit/Logger.cpp	/^Logger::Logger()$/;"	f	class:kit::Logger	signature:()
kit::Logger::Logger	.//kit/Logger.h	/^    Logger();$/;"	p	class:kit::Logger	access:public	signature:()
kit::Logger::LoggerAPI	.//kit/Logger.h	/^    typedef void (Logger::* LoggerAPI)(const char* format, ...);$/;"	t	class:kit::Logger	access:public
kit::Logger::api_table_	.//kit/Logger.h	/^    LoggerAPI api_table_[MAX_LOG_TYPE];$/;"	m	class:kit::Logger	access:private
kit::Logger::baseInit	.//kit/Logger.cpp	/^bool Logger::baseInit()$/;"	f	class:kit::Logger	signature:()
kit::Logger::baseInit	.//kit/Logger.h	/^    virtual bool baseInit();$/;"	p	class:kit::Logger	access:public	signature:()
kit::Logger::getAPI	.//kit/Logger.cpp	/^Logger::LoggerAPI Logger::getAPI(int t)$/;"	f	class:kit::Logger	signature:(int t)
kit::Logger::getAPI	.//kit/Logger.h	/^    LoggerAPI getAPI(int t);$/;"	p	class:kit::Logger	access:public	signature:(int t)
kit::Logger::setAPI	.//kit/Logger.cpp	/^void Logger::setAPI(int t, Logger::LoggerAPI api)$/;"	f	class:kit::Logger	signature:(int t, Logger::LoggerAPI api)
kit::Logger::setAPI	.//kit/Logger.h	/^    void setAPI(int t, LoggerAPI api);$/;"	p	class:kit::Logger	access:public	signature:(int t, LoggerAPI api)
kit::Logger::writeLog	.//kit/Logger.h	/^    void writeLog(const char* format, ...)$/;"	f	class:kit::Logger	access:public	signature:(const char* format, ...)
kit::Logger::writeNone	.//kit/Logger.h	/^    void writeNone(const char* format, ...) {};$/;"	f	class:kit::Logger	access:public	signature:(const char* format, ...)
kit::Logger::~Logger	.//kit/Logger.cpp	/^Logger::~Logger()$/;"	f	class:kit::Logger	signature:()
kit::Logger::~Logger	.//kit/Logger.h	/^    ~Logger();$/;"	p	class:kit::Logger	access:public	signature:()
kit::MAX_LISTEN	.//network/Client.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
kit::MAX_LISTEN	.//network/Server.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
kit::MAX_LISTEN	.//network/platform/linux/Client_linux.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
kit::MAX_LISTEN	.//network/platform/linux/Server_linux.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
kit::MAX_LISTEN	.//network/platform/win/Server.cpp	/^const int32_t MAX_LISTEN = 50;$/;"	m	namespace:kit	file:
kit::MAX_LOG_BUFFER_LEN	.//kit/Logger.h	/^const int MAX_LOG_BUFFER_LEN = 1024 * 16;$/;"	m	namespace:kit
kit::MAX_LOG_TYPE	.//kit/Logger.h	/^    MAX_LOG_TYPE,$/;"	e	enum:kit::__anon2
kit::Map	.//base/Map.h	/^class Map$/;"	c	namespace:kit
kit::Map::Item	.//base/Map.h	/^    typedef struct Item$/;"	s	class:kit::Map	access:private
kit::Map::Item::Item	.//base/Map.h	/^        Item(KeyType k, const ValueType& v, Item* n): key(k), value(v), next(n) {}$/;"	f	struct:kit::Map::Item	access:public	signature:(KeyType k, const ValueType& v, Item* n)
kit::Map::Item::key	.//base/Map.h	/^        KeyType key;$/;"	m	struct:kit::Map::Item	access:public
kit::Map::Item::next	.//base/Map.h	/^        Item* next;$/;"	m	struct:kit::Map::Item	access:public
kit::Map::Item::value	.//base/Map.h	/^        ValueType value;$/;"	m	struct:kit::Map::Item	access:public
kit::Map::ItemList	.//base/Map.h	/^    } *ItemList;$/;"	t	class:kit::Map	typeref:struct:kit::Map::Item	access:private
kit::Map::Map	.//base/Map.h	/^    Map()$/;"	f	class:kit::Map	access:public	signature:()
kit::Map::clear	.//base/Map.h	/^    void clear(std::function<void(ValueType&)> del_callback = nullptr)$/;"	f	class:kit::Map	access:public	signature:(std::function<void(ValueType&)> del_callback = nullptr)
kit::Map::del	.//base/Map.h	/^    bool del(KeyType key, std::function<void(ValueType&)> del_callback = nullptr)$/;"	f	class:kit::Map	access:public	signature:(KeyType key, std::function<void(ValueType&)> del_callback = nullptr)
kit::Map::get	.//base/Map.h	/^    bool get(KeyType key, ValueType& v) const$/;"	f	class:kit::Map	access:public	signature:(KeyType key, ValueType& v) const
kit::Map::has	.//base/Map.h	/^    bool has(KeyType key) const$/;"	f	class:kit::Map	access:public	signature:(KeyType key) const
kit::Map::operator []	.//base/Map.h	/^    ValueType& operator [] (KeyType key)$/;"	f	class:kit::Map	access:public	signature:(KeyType key)
kit::Map::set	.//base/Map.h	/^    void set(KeyType key, const ValueType& v)$/;"	f	class:kit::Map	access:public	signature:(KeyType key, const ValueType& v)
kit::Map::vec_	.//base/Map.h	/^    ItemList vec_[Length];$/;"	m	class:kit::Map	access:private
kit::Map::~Map	.//base/Map.h	/^    ~Map()$/;"	f	class:kit::Map	access:public	signature:()
kit::MaxQueue	.//base/Queue.h	/^class MaxQueue : public MinQueue<Type, Length>$/;"	c	namespace:kit	inherits:MinQueue
kit::MaxQueue::compare	.//base/Queue.h	/^        virtual bool compare(const Type&a, const Type& b) const$/;"	f	class:kit::MaxQueue	access:protected	signature:(const Type&a, const Type& b) const
kit::MinQueue	.//base/Queue.h	/^class MinQueue$/;"	c	namespace:kit
kit::MinQueue::MinQueue	.//base/Queue.h	/^    MinQueue(): count_(0)$/;"	f	class:kit::MinQueue	access:public	signature:()
kit::MinQueue::adjust	.//base/Queue.h	/^    void adjust(int index)$/;"	f	class:kit::MinQueue	access:protected	signature:(int index)
kit::MinQueue::adjustDown	.//base/Queue.h	/^    bool adjustDown(int index)$/;"	f	class:kit::MinQueue	access:protected	signature:(int index)
kit::MinQueue::compare	.//base/Queue.h	/^    virtual bool compare(const Type& a, const Type& b) const$/;"	f	class:kit::MinQueue	access:protected	signature:(const Type& a, const Type& b) const
kit::MinQueue::count	.//base/Queue.h	/^    int count() const { return count_; }$/;"	f	class:kit::MinQueue	access:public	signature:() const
kit::MinQueue::count_	.//base/Queue.h	/^    int count_;$/;"	m	class:kit::MinQueue	access:private
kit::MinQueue::exchange	.//base/Queue.h	/^    void exchange(int index1, int index2)$/;"	f	class:kit::MinQueue	access:protected	signature:(int index1, int index2)
kit::MinQueue::front	.//base/Queue.h	/^    bool front(Type& value)$/;"	f	class:kit::MinQueue	access:public	signature:(Type& value)
kit::MinQueue::pop	.//base/Queue.h	/^    bool pop(Type& value)$/;"	f	class:kit::MinQueue	access:public	signature:(Type& value)
kit::MinQueue::push	.//base/Queue.h	/^    bool push(const Type& value)$/;"	f	class:kit::MinQueue	access:public	signature:(const Type& value)
kit::MinQueue::que_	.//base/Queue.h	/^    Type que_[Length + 1];$/;"	m	class:kit::MinQueue	access:private
kit::MinQueue::rest	.//base/Queue.h	/^    int rest() const { return Length + 1 - count_; }$/;"	f	class:kit::MinQueue	access:public	signature:() const
kit::Mutex	.//kit/platform/linux/Thread_linux.h	/^class Mutex : public IMutex$/;"	c	namespace:kit	inherits:IMutex
kit::Mutex::Mutex	.//kit/platform/linux/Thread_linux.cpp	/^Mutex::Mutex()$/;"	f	class:kit::Mutex	signature:()
kit::Mutex::Mutex	.//kit/platform/linux/Thread_linux.h	/^    Mutex();$/;"	p	class:kit::Mutex	access:public	signature:()
kit::Mutex::baseInit	.//kit/platform/linux/Thread_linux.cpp	/^bool Mutex::baseInit()$/;"	f	class:kit::Mutex	signature:()
kit::Mutex::baseInit	.//kit/platform/linux/Thread_linux.h	/^    virtual bool baseInit();$/;"	p	class:kit::Mutex	access:protected	signature:()
kit::Mutex::lock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Mutex::lock()$/;"	f	class:kit::Mutex	signature:()
kit::Mutex::lock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t lock();$/;"	p	class:kit::Mutex	access:public	signature:()
kit::Mutex::mutex_	.//kit/platform/linux/Thread_linux.h	/^    pthread_mutex_t mutex_;$/;"	m	class:kit::Mutex	access:protected
kit::Mutex::tryLock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Mutex::tryLock()$/;"	f	class:kit::Mutex	signature:()
kit::Mutex::tryLock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t tryLock();$/;"	p	class:kit::Mutex	access:public	signature:()
kit::Mutex::unlock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Mutex::unlock()$/;"	f	class:kit::Mutex	signature:()
kit::Mutex::unlock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t unlock(); $/;"	p	class:kit::Mutex	access:public	signature:()
kit::Mutex::~Mutex	.//kit/platform/linux/Thread_linux.cpp	/^Mutex::~Mutex()$/;"	f	class:kit::Mutex	signature:()
kit::Mutex::~Mutex	.//kit/platform/linux/Thread_linux.h	/^    virtual ~Mutex();$/;"	p	class:kit::Mutex	access:public	signature:()
kit::PACKET_HEADER_SIZE	.//network/Packet.h	/^const uint32_t PACKET_HEADER_SIZE = sizeof(PacketHeader);$/;"	m	namespace:kit
kit::PACKET_MAX_SIZE	.//network/Packet.h	/^const uint32_t PACKET_MAX_SIZE = 0xFFFF;$/;"	m	namespace:kit
kit::PACKET_SIZE	.//network/netsys.h	/^const uint32_t PACKET_SIZE = 512;$/;"	m	namespace:kit
kit::PIDNULL	.//network/netsys.h	/^const ProtocolID PIDNULL = 0;$/;"	m	namespace:kit
kit::PTArray	.//network/Protocol.h	/^class PTArray : public PTData$/;"	c	namespace:kit	inherits:PTData
kit::PTArray::PTArray	.//network/Protocol.cpp	/^PTArray::PTArray()$/;"	f	class:kit::PTArray	signature:()
kit::PTArray::PTArray	.//network/Protocol.h	/^    PTArray();$/;"	p	class:kit::PTArray	access:public	signature:()
kit::PTArray::addData	.//network/Protocol.cpp	/^void PTArray::addData(PTData* data)$/;"	f	class:kit::PTArray	signature:(PTData* data)
kit::PTArray::addData	.//network/Protocol.h	/^    void addData(PTData* data);$/;"	p	class:kit::PTArray	access:public	signature:(PTData* data)
kit::PTArray::clear	.//network/Protocol.cpp	/^void PTArray::clear()$/;"	f	class:kit::PTArray	signature:()
kit::PTArray::clear	.//network/Protocol.h	/^    void clear();$/;"	p	class:kit::PTArray	access:public	signature:()
kit::PTArray::clone	.//network/Protocol.cpp	/^PTData* PTArray::clone() const$/;"	f	class:kit::PTArray	signature:() const
kit::PTArray::clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTArray	access:public	signature:() const
kit::PTArray::cloneItem	.//network/Protocol.cpp	/^PTData* PTArray::cloneItem()$/;"	f	class:kit::PTArray	signature:()
kit::PTArray::cloneItem	.//network/Protocol.h	/^    PTData* cloneItem();$/;"	p	class:kit::PTArray	access:public	signature:()
kit::PTArray::datas_	.//network/Protocol.h	/^    PTDataVec datas_;$/;"	m	class:kit::PTArray	access:protected
kit::PTArray::getDatas	.//network/Protocol.h	/^    const PTDataVec& getDatas() const { return datas_; }$/;"	f	class:kit::PTArray	access:public	signature:() const
kit::PTArray::getType	.//network/Protocol.h	/^    virtual PTType getType() const { return PTType::ARRAY; }$/;"	f	class:kit::PTArray	access:public	signature:() const
kit::PTArray::item_template_	.//network/Protocol.h	/^    PTData* item_template_;$/;"	m	class:kit::PTArray	access:protected
kit::PTArray::resetValue	.//network/Protocol.cpp	/^void PTArray::resetValue()$/;"	f	class:kit::PTArray	signature:()
kit::PTArray::resetValue	.//network/Protocol.h	/^    virtual void resetValue();$/;"	p	class:kit::PTArray	access:public	signature:()
kit::PTArray::serialize	.//network/Protocol.cpp	/^bool PTArray::serialize(Buffer* buffer) const$/;"	f	class:kit::PTArray	signature:(Buffer* buffer) const
kit::PTArray::serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const; $/;"	p	class:kit::PTArray	access:public	signature:(Buffer* buffer) const
kit::PTArray::setTemplate	.//network/Protocol.cpp	/^void PTArray::setTemplate(PTData* data)$/;"	f	class:kit::PTArray	signature:(PTData* data)
kit::PTArray::setTemplate	.//network/Protocol.h	/^    void setTemplate(PTData* data);$/;"	p	class:kit::PTArray	access:public	signature:(PTData* data)
kit::PTArray::toString	.//network/Protocol.cpp	/^std::string PTArray::toString() const$/;"	f	class:kit::PTArray	signature:() const
kit::PTArray::toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::PTArray	access:public	signature:() const
kit::PTArray::unserialize	.//network/Protocol.cpp	/^bool PTArray::unserialize(Buffer* buffer)$/;"	f	class:kit::PTArray	signature:(Buffer* buffer)
kit::PTArray::unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* Buffer);$/;"	p	class:kit::PTArray	access:public	signature:(Buffer* Buffer)
kit::PTArray::~PTArray	.//network/Protocol.cpp	/^PTArray::~PTArray()$/;"	f	class:kit::PTArray	signature:()
kit::PTArray::~PTArray	.//network/Protocol.h	/^    virtual ~PTArray();$/;"	p	class:kit::PTArray	access:public	signature:()
kit::PTData	.//network/Protocol.h	/^class PTData : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::PTData::clone	.//network/Protocol.h	/^    virtual PTData* clone() const { return NULL; }$/;"	f	class:kit::PTData	access:public	signature:() const
kit::PTData::getKey	.//network/Protocol.h	/^    const std::string& getKey() const { return key_; }$/;"	f	class:kit::PTData	access:public	signature:() const
kit::PTData::getType	.//network/Protocol.h	/^    virtual PTType getType() const { return PTType::NONE; }$/;"	f	class:kit::PTData	access:public	signature:() const
kit::PTData::key_	.//network/Protocol.h	/^    std::string key_;$/;"	m	class:kit::PTData	access:protected
kit::PTData::resetValue	.//network/Protocol.h	/^    virtual void resetValue() {}$/;"	f	class:kit::PTData	access:public	signature:()
kit::PTData::serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const = 0;$/;"	p	class:kit::PTData	access:public	signature:(Buffer* buffer) const
kit::PTData::setKey	.//network/Protocol.h	/^    void setKey(const std::string& k) { key_ = k; }$/;"	f	class:kit::PTData	access:public	signature:(const std::string& k)
kit::PTData::setType	.//network/Protocol.h	/^    virtual void setType(PTType type) {}$/;"	f	class:kit::PTData	access:public	signature:(PTType type)
kit::PTData::unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer) = 0;$/;"	p	class:kit::PTData	access:public	signature:(Buffer* buffer)
kit::PTData::~PTData	.//network/Protocol.h	/^    virtual ~PTData() {}$/;"	f	class:kit::PTData	access:public	signature:()
kit::PTDataCreator	.//network/Protocol.h	/^class PTDataCreator : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::PTDataCreator::PTDataAPI	.//network/Protocol.h	/^    typedef PTData* (PTDataCreator::* PTDataAPI)();$/;"	t	class:kit::PTDataCreator	access:private
kit::PTDataCreator::PTDataCreator	.//network/Protocol.cpp	/^PTDataCreator::PTDataCreator()$/;"	f	class:kit::PTDataCreator	signature:()
kit::PTDataCreator::PTDataCreator	.//network/Protocol.h	/^    PTDataCreator();$/;"	p	class:kit::PTDataCreator	access:public	signature:()
kit::PTDataCreator::api_table_	.//network/Protocol.h	/^    PTDataAPI api_table_[toint(PTType::MAX)];$/;"	m	class:kit::PTDataCreator	access:private
kit::PTDataCreator::createArray	.//network/Protocol.cpp	/^PTData* PTDataCreator::createArray()$/;"	f	class:kit::PTDataCreator	signature:()
kit::PTDataCreator::createArray	.//network/Protocol.h	/^    PTData* createArray();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
kit::PTDataCreator::createPTData	.//network/Protocol.cpp	/^PTData* PTDataCreator::createPTData(PTType type)$/;"	f	class:kit::PTDataCreator	signature:(PTType type)
kit::PTDataCreator::createPTData	.//network/Protocol.h	/^    PTData* createPTData(PTType type);$/;"	p	class:kit::PTDataCreator	access:public	signature:(PTType type)
kit::PTDataCreator::createTable	.//network/Protocol.cpp	/^PTData* PTDataCreator::createTable()$/;"	f	class:kit::PTDataCreator	signature:()
kit::PTDataCreator::createTable	.//network/Protocol.h	/^    PTData* createTable();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
kit::PTDataCreator::createValue	.//network/Protocol.cpp	/^PTData* PTDataCreator::createValue()$/;"	f	class:kit::PTDataCreator	signature:()
kit::PTDataCreator::createValue	.//network/Protocol.h	/^    PTData* createValue();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
kit::PTDataCreator::createVarint	.//network/Protocol.cpp	/^PTData* PTDataCreator::createVarint()$/;"	f	class:kit::PTDataCreator	signature:()
kit::PTDataCreator::createVarint	.//network/Protocol.h	/^    PTData* createVarint();$/;"	p	class:kit::PTDataCreator	access:private	signature:()
kit::PTDataCreator::~PTDataCreator	.//network/Protocol.cpp	/^PTDataCreator::~PTDataCreator()$/;"	f	class:kit::PTDataCreator	signature:()
kit::PTDataCreator::~PTDataCreator	.//network/Protocol.h	/^    virtual ~PTDataCreator();$/;"	p	class:kit::PTDataCreator	access:public	signature:()
kit::PTDataVec	.//network/Protocol.h	/^typedef std::vector<PTData*> PTDataVec;$/;"	t	namespace:kit
kit::PTTable	.//network/Protocol.h	/^class PTTable : public PTData$/;"	c	namespace:kit	inherits:PTData
kit::PTTable::addData	.//network/Protocol.cpp	/^void PTTable::addData(PTData* data)$/;"	f	class:kit::PTTable	signature:(PTData* data)
kit::PTTable::addData	.//network/Protocol.h	/^    void addData(PTData* data);$/;"	p	class:kit::PTTable	access:public	signature:(PTData* data)
kit::PTTable::clear	.//network/Protocol.cpp	/^void PTTable::clear()$/;"	f	class:kit::PTTable	signature:()
kit::PTTable::clear	.//network/Protocol.h	/^    virtual void clear();$/;"	p	class:kit::PTTable	access:public	signature:()
kit::PTTable::clone	.//network/Protocol.cpp	/^PTData* PTTable::clone() const$/;"	f	class:kit::PTTable	signature:() const
kit::PTTable::clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTTable	access:public	signature:() const
kit::PTTable::datas_	.//network/Protocol.h	/^    PTDataVec datas_;$/;"	m	class:kit::PTTable	access:protected
kit::PTTable::delData	.//network/Protocol.cpp	/^void PTTable::delData(PTData* data)$/;"	f	class:kit::PTTable	signature:(PTData* data)
kit::PTTable::delData	.//network/Protocol.h	/^    void delData(PTData* data);$/;"	p	class:kit::PTTable	access:public	signature:(PTData* data)
kit::PTTable::getDatas	.//network/Protocol.h	/^    const PTDataVec& getDatas() const { return datas_; }$/;"	f	class:kit::PTTable	access:public	signature:() const
kit::PTTable::getType	.//network/Protocol.h	/^    virtual PTType getType() const { return PTType::TABLE; }$/;"	f	class:kit::PTTable	access:public	signature:() const
kit::PTTable::resetValue	.//network/Protocol.cpp	/^void PTTable::resetValue()$/;"	f	class:kit::PTTable	signature:()
kit::PTTable::resetValue	.//network/Protocol.h	/^    virtual void resetValue();$/;"	p	class:kit::PTTable	access:public	signature:()
kit::PTTable::serialize	.//network/Protocol.cpp	/^bool PTTable::serialize(Buffer* buffer) const$/;"	f	class:kit::PTTable	signature:(Buffer* buffer) const
kit::PTTable::serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const;$/;"	p	class:kit::PTTable	access:public	signature:(Buffer* buffer) const
kit::PTTable::toString	.//network/Protocol.cpp	/^std::string PTTable::toString() const$/;"	f	class:kit::PTTable	signature:() const
kit::PTTable::toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::PTTable	access:public	signature:() const
kit::PTTable::unserialize	.//network/Protocol.cpp	/^bool PTTable::unserialize(Buffer* buffer)$/;"	f	class:kit::PTTable	signature:(Buffer* buffer)
kit::PTTable::unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer);$/;"	p	class:kit::PTTable	access:public	signature:(Buffer* buffer)
kit::PTTable::~PTTable	.//network/Protocol.cpp	/^PTTable::~PTTable()$/;"	f	class:kit::PTTable	signature:()
kit::PTTable::~PTTable	.//network/Protocol.h	/^    virtual ~PTTable();$/;"	p	class:kit::PTTable	access:public	signature:()
kit::PTType	.//network/Protocol.h	/^enum class PTType : uint8_t$/;"	c	namespace:kit	inherits:uint8_t
kit::PTType::ARRAY	.//network/Protocol.h	/^    ARRAY,$/;"	m	class:kit::PTType	access:private
kit::PTType::INT16	.//network/Protocol.h	/^    INT16,$/;"	m	class:kit::PTType	access:private
kit::PTType::INT32	.//network/Protocol.h	/^    INT32,$/;"	m	class:kit::PTType	access:private
kit::PTType::INT64	.//network/Protocol.h	/^    INT64,$/;"	m	class:kit::PTType	access:private
kit::PTType::INT8	.//network/Protocol.h	/^    INT8,$/;"	m	class:kit::PTType	access:private
kit::PTType::MAX	.//network/Protocol.h	/^    MAX,$/;"	m	class:kit::PTType	access:private
kit::PTType::NONE	.//network/Protocol.h	/^    NONE,$/;"	m	class:kit::PTType	access:private
kit::PTType::STRING	.//network/Protocol.h	/^    STRING,$/;"	m	class:kit::PTType	access:private
kit::PTType::TABLE	.//network/Protocol.h	/^    TABLE,$/;"	m	class:kit::PTType	access:private
kit::PTType::UINT16	.//network/Protocol.h	/^    UINT16,$/;"	m	class:kit::PTType	access:private
kit::PTType::UINT32	.//network/Protocol.h	/^    UINT32,$/;"	m	class:kit::PTType	access:private
kit::PTType::UINT64	.//network/Protocol.h	/^    UINT64,$/;"	m	class:kit::PTType	access:private
kit::PTType::UINT8	.//network/Protocol.h	/^    UINT8,$/;"	m	class:kit::PTType	access:private
kit::PTType::VARINT	.//network/Protocol.h	/^    VARINT,$/;"	m	class:kit::PTType	access:private
kit::PTValue	.//network/Protocol.h	/^class PTValue : public PTData$/;"	c	namespace:kit	inherits:PTData
kit::PTValue::clone	.//network/Protocol.cpp	/^PTData* PTValue<T>::clone() const$/;"	f	class:kit::PTValue	signature:() const
kit::PTValue::clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTValue	access:public	signature:() const
kit::PTValue::getType	.//network/Protocol.h	/^    virtual PTType getType() const { return type_; }$/;"	f	class:kit::PTValue	access:public	signature:() const
kit::PTValue::getValue	.//network/Protocol.h	/^    const T& getValue() const { return value_; }$/;"	f	class:kit::PTValue	access:public	signature:() const
kit::PTValue::resetValue	.//network/Protocol.h	/^    void resetValue() { value_ = 0; }$/;"	f	class:kit::PTValue	access:public	signature:()
kit::PTValue::resetValue	.//network/Protocol.h	/^inline void PTValue<std::string>::resetValue()$/;"	f	class:kit::PTValue	signature:()
kit::PTValue::serialize	.//network/Protocol.cpp	/^bool PTValue<T>::serialize(Buffer* buffer) const$/;"	f	class:kit::PTValue	signature:(Buffer* buffer) const
kit::PTValue::serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const;$/;"	p	class:kit::PTValue	access:public	signature:(Buffer* buffer) const
kit::PTValue::setType	.//network/Protocol.h	/^    virtual void setType(PTType type) { type_ = type; }$/;"	f	class:kit::PTValue	access:public	signature:(PTType type)
kit::PTValue::setValue	.//network/Protocol.h	/^    void setValue(const T& v) { value_ = v; }$/;"	f	class:kit::PTValue	access:public	signature:(const T& v)
kit::PTValue::toString	.//network/Protocol.cpp	/^std::string PTValue<T>::toString() const$/;"	f	class:kit::PTValue	signature:() const
kit::PTValue::toString	.//network/Protocol.cpp	/^std::string PTValue<std::string>::toString() const$/;"	f	class:kit::PTValue	signature:() const
kit::PTValue::toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::PTValue	access:public	signature:() const
kit::PTValue::type_	.//network/Protocol.h	/^    PTType type_;$/;"	m	class:kit::PTValue	access:protected
kit::PTValue::unserialize	.//network/Protocol.cpp	/^bool PTValue<T>::unserialize(Buffer* buffer)$/;"	f	class:kit::PTValue	signature:(Buffer* buffer)
kit::PTValue::unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer);$/;"	p	class:kit::PTValue	access:public	signature:(Buffer* buffer)
kit::PTValue::value_	.//network/Protocol.h	/^    T value_;$/;"	m	class:kit::PTValue	access:protected
kit::PTVarint	.//network/Protocol.h	/^class PTVarint : public PTValue<uint32_t>$/;"	c	namespace:kit	inherits:PTValue
kit::PTVarint::KIT_CREATE_FUNC	.//network/Protocol.h	/^    KIT_CREATE_FUNC(PTVarint);$/;"	p	class:kit::PTVarint	access:public	signature:(PTVarint)
kit::PTVarint::clone	.//network/Protocol.cpp	/^PTData* PTVarint::clone() const$/;"	f	class:kit::PTVarint	signature:() const
kit::PTVarint::clone	.//network/Protocol.h	/^    virtual PTData* clone() const;$/;"	p	class:kit::PTVarint	access:public	signature:() const
kit::PTVarint::serialize	.//network/Protocol.cpp	/^bool PTVarint::serialize(Buffer* buffer) const$/;"	f	class:kit::PTVarint	signature:(Buffer* buffer) const
kit::PTVarint::serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const;$/;"	p	class:kit::PTVarint	access:public	signature:(Buffer* buffer) const
kit::PTVarint::unserialize	.//network/Protocol.cpp	/^bool PTVarint::unserialize(Buffer* buffer)$/;"	f	class:kit::PTVarint	signature:(Buffer* buffer)
kit::PTVarint::unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer);$/;"	p	class:kit::PTVarint	access:public	signature:(Buffer* buffer)
kit::PT_CONNECT	.//network/msg.h	/^const uint16_t PT_CONNECT = 1;  \/\/ 每个client连接上了$/;"	m	namespace:kit
kit::PT_KEEP_ALIVE	.//network/msg.h	/^const uint16_t PT_KEEP_ALIVE = 2; \/\/ 心跳包$/;"	m	namespace:kit
kit::PT_PACKET_ID_MAX	.//network/msg.h	/^const uint16_t PT_PACKET_ID_MAX = 0xFFFF;$/;"	m	namespace:kit
kit::Packet	.//network/Packet.h	/^class Packet : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Packet::Packet	.//network/Packet.cpp	/^Packet::Packet()$/;"	f	class:kit::Packet	signature:()
kit::Packet::Packet	.//network/Packet.h	/^    Packet();$/;"	p	class:kit::Packet	access:public	signature:()
kit::Packet::buf_	.//network/Packet.h	/^    Buffer* buf_;$/;"	m	class:kit::Packet	access:public
kit::Packet::delBuffer	.//network/Packet.cpp	/^void Packet::delBuffer()$/;"	f	class:kit::Packet	signature:()
kit::Packet::delBuffer	.//network/Packet.h	/^    void delBuffer();$/;"	p	class:kit::Packet	access:public	signature:()
kit::Packet::getBuffer	.//network/Packet.h	/^    Buffer* getBuffer() const { return buf_; }$/;"	f	class:kit::Packet	access:public	signature:() const
kit::Packet::getLength	.//network/Packet.h	/^    uint16_t getLength() const { return header_.length; }$/;"	f	class:kit::Packet	access:public	signature:() const
kit::Packet::getPID	.//network/Packet.h	/^    uint16_t getPID() const { return header_.pid; }$/;"	f	class:kit::Packet	access:public	signature:() const
kit::Packet::getSeed	.//network/Packet.h	/^    uint16_t getSeed() const { return header_.seed; }$/;"	f	class:kit::Packet	access:public	signature:() const
kit::Packet::header_	.//network/Packet.h	/^    PacketHeader header_;$/;"	m	class:kit::Packet	access:public
kit::Packet::init	.//network/Packet.cpp	/^void Packet::init(uint16_t pid, Buffer* buf)$/;"	f	class:kit::Packet	signature:(uint16_t pid, Buffer* buf)
kit::Packet::init	.//network/Packet.h	/^    void init(uint16_t pid, Buffer* buf);$/;"	p	class:kit::Packet	access:public	signature:(uint16_t pid, Buffer* buf)
kit::Packet::packHeader	.//network/Packet.cpp	/^void Packet::packHeader(Buffer* head_buf)$/;"	f	class:kit::Packet	signature:(Buffer* head_buf)
kit::Packet::packHeader	.//network/Packet.h	/^    void packHeader(Buffer* head_buf);$/;"	p	class:kit::Packet	access:public	signature:(Buffer* head_buf)
kit::Packet::setBuffer	.//network/Packet.cpp	/^void Packet::setBuffer(Buffer* buf)$/;"	f	class:kit::Packet	signature:(Buffer* buf)
kit::Packet::setBuffer	.//network/Packet.h	/^    void setBuffer(Buffer* buf);$/;"	p	class:kit::Packet	access:public	signature:(Buffer* buf)
kit::Packet::setSeed	.//network/Packet.h	/^    void setSeed(uint16_t seed) { header_.seed = seed; }$/;"	f	class:kit::Packet	access:public	signature:(uint16_t seed)
kit::Packet::unpackHeader	.//network/Packet.cpp	/^void Packet::unpackHeader(Buffer* head_buf)$/;"	f	class:kit::Packet	signature:(Buffer* head_buf)
kit::Packet::unpackHeader	.//network/Packet.h	/^    void unpackHeader(Buffer* head_buf);$/;"	p	class:kit::Packet	access:public	signature:(Buffer* head_buf)
kit::Packet::~Packet	.//network/Packet.cpp	/^Packet::~Packet()$/;"	f	class:kit::Packet	signature:()
kit::Packet::~Packet	.//network/Packet.h	/^    virtual ~Packet();$/;"	p	class:kit::Packet	access:public	signature:()
kit::PacketHeader	.//network/Packet.h	/^struct PacketHeader$/;"	s	namespace:kit
kit::PacketHeader::length	.//network/Packet.h	/^    uint16_t length; \/\/包体长度$/;"	m	struct:kit::PacketHeader	access:public
kit::PacketHeader::pid	.//network/Packet.h	/^    uint16_t pid; \/\/协义$/;"	m	struct:kit::PacketHeader	access:public
kit::PacketHeader::seed	.//network/Packet.h	/^    uint16_t seed; \/\/验证种子$/;"	m	struct:kit::PacketHeader	access:public
kit::PacketQue	.//network/Socket.h	/^typedef QList<Packet*, PACKET_QUEUE_LENGTH> PacketQue;$/;"	t	namespace:kit
kit::PollEvent	.//network/netsys.h	/^struct PollEvent {$/;"	s	namespace:kit
kit::PollEvent::events	.//network/netsys.h	/^    int32_t events;$/;"	m	struct:kit::PollEvent	access:public
kit::PollEvent::fd	.//network/netsys.h	/^    int32_t fd;$/;"	m	struct:kit::PollEvent	access:public
kit::Protocol	.//network/Protocol.h	/^class Protocol : public PTTable$/;"	c	namespace:kit	inherits:PTTable
kit::Protocol::Protocol	.//network/Protocol.cpp	/^Protocol::Protocol()$/;"	f	class:kit::Protocol	signature:()
kit::Protocol::Protocol	.//network/Protocol.h	/^    Protocol();$/;"	p	class:kit::Protocol	access:public	signature:()
kit::Protocol::budget_size_	.//network/Protocol.h	/^    size_t budget_size_ = 64;$/;"	m	class:kit::Protocol	access:protected
kit::Protocol::getBudgetSize	.//network/Protocol.h	/^    size_t getBudgetSize() const { return budget_size_; }$/;"	f	class:kit::Protocol	access:public	signature:() const
kit::Protocol::getPID	.//network/Protocol.h	/^    int32_t getPID() const { return pid_; }$/;"	f	class:kit::Protocol	access:public	signature:() const
kit::Protocol::init	.//network/Protocol.cpp	/^void Protocol::init(int32_t pid)$/;"	f	class:kit::Protocol	signature:(int32_t pid)
kit::Protocol::init	.//network/Protocol.h	/^    virtual void init(int32_t pid);$/;"	p	class:kit::Protocol	access:public	signature:(int32_t pid)
kit::Protocol::pid_	.//network/Protocol.h	/^    int32_t pid_;$/;"	m	class:kit::Protocol	access:protected
kit::Protocol::setBudgetSize	.//network/Protocol.h	/^    void setBudgetSize(size_t size) { budget_size_ = size; }$/;"	f	class:kit::Protocol	access:public	signature:(size_t size)
kit::Protocol::toString	.//network/Protocol.cpp	/^std::string Protocol::toString() const$/;"	f	class:kit::Protocol	signature:() const
kit::Protocol::toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::Protocol	access:public	signature:() const
kit::Protocol::~Protocol	.//network/Protocol.cpp	/^Protocol::~Protocol()$/;"	f	class:kit::Protocol	signature:()
kit::Protocol::~Protocol	.//network/Protocol.h	/^    virtual ~Protocol();$/;"	p	class:kit::Protocol	access:public	signature:()
kit::ProtocolID	.//network/netsys.h	/^typedef int32_t ProtocolID;$/;"	t	namespace:kit
kit::QList	.//base/QList.h	/^class QList$/;"	c	namespace:kit
kit::QList::QList	.//base/QList.h	/^    QList(): count_(0)$/;"	f	class:kit::QList	access:public	signature:()
kit::QList::count	.//base/QList.h	/^    int count() const$/;"	f	class:kit::QList	access:public	signature:() const
kit::QList::count_	.//base/QList.h	/^    int count_;$/;"	m	class:kit::QList	access:private
kit::QList::front	.//base/QList.h	/^    bool front(Type& value)$/;"	f	class:kit::QList	access:public	signature:(Type& value)
kit::QList::list_	.//base/QList.h	/^    List<Type> list_;$/;"	m	class:kit::QList	access:private
kit::QList::pop	.//base/QList.h	/^    bool pop(Type& value)$/;"	f	class:kit::QList	access:public	signature:(Type& value)
kit::QList::push	.//base/QList.h	/^    bool push(const Type& value)$/;"	f	class:kit::QList	access:public	signature:(const Type& value)
kit::QList::que_	.//base/QList.h	/^    Queue<Type, QLength> que_;$/;"	m	class:kit::QList	access:private
kit::Queue	.//base/Queue.h	/^class Queue$/;"	c	namespace:kit
kit::Queue::Queue	.//base/Queue.h	/^    Queue(): count_(0), head_(0), tail_(0)$/;"	f	class:kit::Queue	access:public	signature:()
kit::Queue::count	.//base/Queue.h	/^    int count()$/;"	f	class:kit::Queue	access:public	signature:()
kit::Queue::count_	.//base/Queue.h	/^    int count_;$/;"	m	class:kit::Queue	access:private
kit::Queue::front	.//base/Queue.h	/^    bool front(Type& value)$/;"	f	class:kit::Queue	access:public	signature:(Type& value)
kit::Queue::head_	.//base/Queue.h	/^    int head_;$/;"	m	class:kit::Queue	access:private
kit::Queue::pop	.//base/Queue.h	/^    bool pop(Type& value)$/;"	f	class:kit::Queue	access:public	signature:(Type& value)
kit::Queue::push	.//base/Queue.h	/^    bool push(const Type& value)$/;"	f	class:kit::Queue	access:public	signature:(const Type& value)
kit::Queue::que_	.//base/Queue.h	/^    Type que_[Length];$/;"	m	class:kit::Queue	access:private
kit::Queue::rest	.//base/Queue.h	/^    int rest()$/;"	f	class:kit::Queue	access:public	signature:()
kit::Queue::tail_	.//base/Queue.h	/^    int tail_;$/;"	m	class:kit::Queue	access:private
kit::Ref	.//kit/Ref.h	/^class Ref$/;"	c	namespace:kit
kit::Ref::Ref	.//kit/Ref.cpp	/^Ref::Ref()$/;"	f	class:kit::Ref	signature:()
kit::Ref::Ref	.//kit/Ref.h	/^    Ref();$/;"	p	class:kit::Ref	access:protected	signature:()
kit::Ref::RefVec	.//kit/Ref.h	/^    typedef std::vector<Ref*> RefVec;$/;"	t	class:kit::Ref	access:private
kit::Ref::addChild	.//kit/Ref.cpp	/^void Ref::addChild(Ref* child)$/;"	f	class:kit::Ref	signature:(Ref* child)
kit::Ref::addChild	.//kit/Ref.h	/^    void addChild(Ref* obj);$/;"	p	class:kit::Ref	access:public	signature:(Ref* obj)
kit::Ref::autoRelease	.//kit/Ref.cpp	/^Ref* Ref::autoRelease()$/;"	f	class:kit::Ref	signature:()
kit::Ref::autoRelease	.//kit/Ref.h	/^    Ref* autoRelease();$/;"	p	class:kit::Ref	access:public	signature:()
kit::Ref::baseInit	.//kit/Ref.h	/^    virtual bool baseInit(void) { return true; }$/;"	f	class:kit::Ref	access:protected	signature:(void)
kit::Ref::children_	.//kit/Ref.h	/^    RefVec children_;$/;"	m	class:kit::Ref	access:private
kit::Ref::clearChildren	.//kit/Ref.cpp	/^void Ref::clearChildren()$/;"	f	class:kit::Ref	signature:()
kit::Ref::clearChildren	.//kit/Ref.h	/^    void clearChildren();$/;"	p	class:kit::Ref	access:public	signature:()
kit::Ref::delChild	.//kit/Ref.cpp	/^void Ref::delChild(Ref* child)$/;"	f	class:kit::Ref	signature:(Ref* child)
kit::Ref::delChild	.//kit/Ref.h	/^    void delChild(Ref* obj);$/;"	p	class:kit::Ref	access:public	signature:(Ref* obj)
kit::Ref::getReferenceCount	.//kit/Ref.h	/^    unsigned int getReferenceCount() const { return reference_count_; };$/;"	f	class:kit::Ref	access:public	signature:() const
kit::Ref::parent_	.//kit/Ref.h	/^    Ref* parent_;$/;"	m	class:kit::Ref	access:private
kit::Ref::reference_count_	.//kit/Ref.h	/^    unsigned int reference_count_;$/;"	m	class:kit::Ref	access:protected
kit::Ref::release	.//kit/Ref.cpp	/^void Ref::release()$/;"	f	class:kit::Ref	signature:()
kit::Ref::release	.//kit/Ref.h	/^    void release();$/;"	p	class:kit::Ref	access:public	signature:()
kit::Ref::removeFromParent	.//kit/Ref.cpp	/^void Ref::removeFromParent()$/;"	f	class:kit::Ref	signature:()
kit::Ref::removeFromParent	.//kit/Ref.h	/^    virtual void removeFromParent();$/;"	p	class:kit::Ref	access:public	signature:()
kit::Ref::retain	.//kit/Ref.cpp	/^void Ref::retain()$/;"	f	class:kit::Ref	signature:()
kit::Ref::retain	.//kit/Ref.h	/^    void retain();$/;"	p	class:kit::Ref	access:public	signature:()
kit::Ref::toString	.//kit/Ref.h	/^    virtual std::string toString() const { return "----[Ref]----"; }$/;"	f	class:kit::Ref	access:public	signature:() const
kit::Ref::update	.//kit/Ref.cpp	/^void Ref::update()$/;"	f	class:kit::Ref	signature:()
kit::Ref::update	.//kit/Ref.h	/^    virtual void update();$/;"	p	class:kit::Ref	access:public	signature:()
kit::Ref::~Ref	.//kit/Ref.cpp	/^Ref::~Ref()$/;"	f	class:kit::Ref	signature:()
kit::Ref::~Ref	.//kit/Ref.h	/^    virtual ~Ref();$/;"	p	class:kit::Ref	access:public	signature:()
kit::RefPool	.//kit/RefPool.h	/^class RefPool : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::RefPool::RefPool	.//kit/RefPool.cpp	/^RefPool::RefPool()$/;"	f	class:kit::RefPool	signature:()
kit::RefPool::RefPool	.//kit/RefPool.h	/^    RefPool();$/;"	p	class:kit::RefPool	access:public	signature:()
kit::RefPool::RefVec	.//kit/RefPool.h	/^    typedef std::vector<Ref*> RefVec;$/;"	t	class:kit::RefPool	access:private
kit::RefPool::addRef	.//kit/RefPool.cpp	/^void RefPool::addRef(Ref* ref)$/;"	f	class:kit::RefPool	signature:(Ref* ref)
kit::RefPool::addRef	.//kit/RefPool.h	/^    void addRef(Ref* ref);$/;"	p	class:kit::RefPool	access:public	signature:(Ref* ref)
kit::RefPool::clear	.//kit/RefPool.cpp	/^void RefPool::clear()$/;"	f	class:kit::RefPool	signature:()
kit::RefPool::clear	.//kit/RefPool.h	/^    void clear();$/;"	p	class:kit::RefPool	access:public	signature:()
kit::RefPool::delRef	.//kit/RefPool.cpp	/^void RefPool::delRef(Ref* ref)$/;"	f	class:kit::RefPool	signature:(Ref* ref)
kit::RefPool::delRef	.//kit/RefPool.h	/^    void delRef(Ref* ref);$/;"	p	class:kit::RefPool	access:public	signature:(Ref* ref)
kit::RefPool::ref_vec_	.//kit/RefPool.h	/^    RefVec ref_vec_;$/;"	m	class:kit::RefPool	access:private
kit::RefPool::~RefPool	.//kit/RefPool.cpp	/^RefPool::~RefPool()$/;"	f	class:kit::RefPool	signature:()
kit::RefPool::~RefPool	.//kit/RefPool.h	/^    virtual ~RefPool();$/;"	p	class:kit::RefPool	access:public	signature:()
kit::RefPoolManager	.//kit/RefPool.h	/^class RefPoolManager : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::RefPoolManager::PoolVec	.//kit/RefPool.h	/^    typedef std::vector<RefPool*> PoolVec;$/;"	t	class:kit::RefPoolManager	access:private
kit::RefPoolManager::RefPoolManager	.//kit/RefPool.cpp	/^RefPoolManager::RefPoolManager()$/;"	f	class:kit::RefPoolManager	signature:()
kit::RefPoolManager::RefPoolManager	.//kit/RefPool.h	/^    RefPoolManager();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
kit::RefPoolManager::baseInit	.//kit/RefPool.cpp	/^bool RefPoolManager::baseInit()$/;"	f	class:kit::RefPoolManager	signature:()
kit::RefPoolManager::baseInit	.//kit/RefPool.h	/^    virtual bool baseInit();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
kit::RefPoolManager::cur_pool_	.//kit/RefPool.h	/^    RefPool* cur_pool_;$/;"	m	class:kit::RefPoolManager	access:private
kit::RefPoolManager::getCurrentPool	.//kit/RefPool.h	/^    RefPool* getCurrentPool() const { return cur_pool_; }$/;"	f	class:kit::RefPoolManager	access:public	signature:() const
kit::RefPoolManager::pool_vec_	.//kit/RefPool.h	/^    PoolVec pool_vec_;$/;"	m	class:kit::RefPoolManager	access:private
kit::RefPoolManager::pop	.//kit/RefPool.cpp	/^void RefPoolManager::pop()$/;"	f	class:kit::RefPoolManager	signature:()
kit::RefPoolManager::pop	.//kit/RefPool.h	/^    void pop();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
kit::RefPoolManager::push	.//kit/RefPool.cpp	/^void RefPoolManager::push(RefPool* pool)$/;"	f	class:kit::RefPoolManager	signature:(RefPool* pool)
kit::RefPoolManager::push	.//kit/RefPool.h	/^    void push(RefPool* pool);$/;"	p	class:kit::RefPoolManager	access:public	signature:(RefPool* pool)
kit::RefPoolManager::~RefPoolManager	.//kit/RefPool.cpp	/^RefPoolManager::~RefPoolManager()$/;"	f	class:kit::RefPoolManager	signature:()
kit::RefPoolManager::~RefPoolManager	.//kit/RefPool.h	/^    virtual ~RefPoolManager();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
kit::SCRIPT_TYPE_JAVASCRIPT	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_JAVASCRIPT,$/;"	e	enum:kit::ScriptType
kit::SCRIPT_TYPE_LUA	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_LUA,$/;"	e	enum:kit::ScriptType
kit::SCRIPT_TYPE_MAX	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_MAX,$/;"	e	enum:kit::ScriptType
kit::SCRIPT_TYPE_NONE	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_NONE = 0,$/;"	e	enum:kit::ScriptType
kit::SCRIPT_TYPE_PYTHON	.//script/ScriptSupport.h	/^    SCRIPT_TYPE_PYTHON,$/;"	e	enum:kit::ScriptType
kit::SERVER_EVENT_CNT	.//network/Server.h	/^const uint16_t SERVER_EVENT_CNT = 512;$/;"	m	namespace:kit
kit::SIDNULL	.//network/netsys.h	/^const SessionID SIDNULL = 0;$/;"	m	namespace:kit
kit::ScriptCore	.//script/ScriptSupport.h	/^class ScriptCore : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::ScriptCore::ScriptCore	.//script/ScriptSupport.h	/^    ScriptCore() {}$/;"	f	class:kit::ScriptCore	access:public	signature:()
kit::ScriptCore::destroy	.//script/ScriptSupport.h	/^    virtual void destroy() {}$/;"	f	class:kit::ScriptCore	access:public	signature:()
kit::ScriptCore::executeFile	.//script/ScriptSupport.h	/^    virtual int executeFile(const char* file_name) = 0;$/;"	p	class:kit::ScriptCore	access:public	signature:(const char* file_name)
kit::ScriptCore::executeFunction	.//script/ScriptSupport.h	/^    virtual int executeFunction(const char* function_name) = 0;$/;"	p	class:kit::ScriptCore	access:public	signature:(const char* function_name)
kit::ScriptCore::executeString	.//script/ScriptSupport.h	/^    virtual int executeString(const char* codes) = 0;$/;"	p	class:kit::ScriptCore	access:public	signature:(const char* codes)
kit::ScriptCore::getScriptDir	.//script/ScriptSupport.h	/^    virtual const char* getScriptDir() { return path_.c_str(); }$/;"	f	class:kit::ScriptCore	access:public	signature:()
kit::ScriptCore::getScriptType	.//script/ScriptSupport.h	/^    virtual ScriptType getScriptType() { return SCRIPT_TYPE_NONE; }$/;"	f	class:kit::ScriptCore	access:public	signature:()
kit::ScriptCore::path_	.//script/ScriptSupport.h	/^    std::string path_;$/;"	m	class:kit::ScriptCore	access:protected
kit::ScriptCore::setScriptDir	.//script/ScriptSupport.h	/^    virtual void setScriptDir(const char* path) { path_ = path; }$/;"	f	class:kit::ScriptCore	access:public	signature:(const char* path)
kit::ScriptCore::~ScriptCore	.//script/ScriptSupport.h	/^    virtual ~ScriptCore() {}$/;"	f	class:kit::ScriptCore	access:public	signature:()
kit::ScriptManager	.//script/ScriptSupport.h	/^class ScriptManager$/;"	c	namespace:kit
kit::ScriptManager::ScriptManager	.//script/ScriptSupport.cpp	/^ScriptManager::ScriptManager()$/;"	f	class:kit::ScriptManager	signature:()
kit::ScriptManager::ScriptManager	.//script/ScriptSupport.h	/^    ScriptManager();$/;"	p	class:kit::ScriptManager	access:public	signature:()
kit::ScriptManager::addCore	.//script/ScriptSupport.cpp	/^void ScriptManager::addCore(ScriptCore* core)$/;"	f	class:kit::ScriptManager	signature:(ScriptCore* core)
kit::ScriptManager::addCore	.//script/ScriptSupport.h	/^    virtual void addCore(ScriptCore* core);$/;"	p	class:kit::ScriptManager	access:public	signature:(ScriptCore* core)
kit::ScriptManager::baseInit	.//script/ScriptSupport.cpp	/^bool ScriptManager::baseInit()$/;"	f	class:kit::ScriptManager	signature:()
kit::ScriptManager::baseInit	.//script/ScriptSupport.h	/^    virtual bool baseInit();$/;"	p	class:kit::ScriptManager	access:public	signature:()
kit::ScriptManager::cores_	.//script/ScriptSupport.h	/^    ScriptCore* cores_[SCRIPT_TYPE_MAX];$/;"	m	class:kit::ScriptManager	access:private
kit::ScriptManager::getCore	.//script/ScriptSupport.h	/^    virtual ScriptCore* getCore(ScriptType type) const { return cores_[type]; }$/;"	f	class:kit::ScriptManager	access:public	signature:(ScriptType type) const
kit::ScriptManager::~ScriptManager	.//script/ScriptSupport.cpp	/^ScriptManager::~ScriptManager()$/;"	f	class:kit::ScriptManager	signature:()
kit::ScriptManager::~ScriptManager	.//script/ScriptSupport.h	/^    virtual ~ScriptManager();$/;"	p	class:kit::ScriptManager	access:public	signature:()
kit::ScriptType	.//script/ScriptSupport.h	/^enum ScriptType {$/;"	g	namespace:kit
kit::Server	.//network/platform/linux/Server_linux.h	/^class Server : public IServer, public ThreadHandler$/;"	c	namespace:kit	inherits:IServer,ThreadHandler
kit::Server::Server	.//network/platform/linux/Server_linux.cpp	/^Server::Server()$/;"	f	class:kit::Server	signature:()
kit::Server::Server	.//network/platform/linux/Server_linux.h	/^	Server();$/;"	p	class:kit::Server	access:public	signature:()
kit::Server::Server	.//network/platform/win/Server.cpp	/^Server::Server()$/;"	f	class:kit::Server	signature:()
kit::Server::addCtrl	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::addCtrl(int32_t fd, int32_t events)$/;"	f	class:kit::Server	signature:(int32_t fd, int32_t events)
kit::Server::addCtrl	.//network/platform/linux/Server_linux.h	/^    int32_t addCtrl(int32_t fd, int32_t events);$/;"	p	class:kit::Server	access:protected	signature:(int32_t fd, int32_t events)
kit::Server::delCtrl	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::delCtrl(int32_t fd)$/;"	f	class:kit::Server	signature:(int32_t fd)
kit::Server::delCtrl	.//network/platform/linux/Server_linux.h	/^    int32_t delCtrl(int32_t fd);$/;"	p	class:kit::Server	access:protected	signature:(int32_t fd)
kit::Server::handleSocket	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::handleSocket(Socket* sock, int32_t events)$/;"	f	class:kit::Server	signature:(Socket* sock, int32_t events)
kit::Server::handleSocket	.//network/platform/linux/Server_linux.h	/^    int32_t handleSocket(Socket* sock, int32_t events);$/;"	p	class:kit::Server	access:protected	signature:(Socket* sock, int32_t events)
kit::Server::handleThread	.//network/platform/linux/Server_linux.cpp	/^void Server::handleThread()$/;"	f	class:kit::Server	signature:()
kit::Server::handleThread	.//network/platform/linux/Server_linux.h	/^    virtual void handleThread();$/;"	p	class:kit::Server	access:protected	signature:()
kit::Server::poll_fd_	.//network/platform/linux/Server_linux.h	/^    int32_t poll_fd_;$/;"	m	class:kit::Server	access:private
kit::Server::shutdown	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::shutdown()$/;"	f	class:kit::Server	signature:()
kit::Server::shutdown	.//network/platform/linux/Server_linux.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::Server	access:public	signature:()
kit::Server::shutdown	.//network/platform/win/Server.cpp	/^void Server::shutdown()$/;"	f	class:kit::Server	signature:()
kit::Server::startup	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::startup(const char* ip, int32_t port)$/;"	f	class:kit::Server	signature:(const char* ip, int32_t port)
kit::Server::startup	.//network/platform/linux/Server_linux.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::Server	access:public	signature:(const char* ip, int32_t port)
kit::Server::startup	.//network/platform/win/Server.cpp	/^void Server::startup(const char* ip, int32_t port)$/;"	f	class:kit::Server	signature:(const char* ip, int32_t port)
kit::Server::thread_	.//network/platform/linux/Server_linux.h	/^    Thread* thread_;$/;"	m	class:kit::Server	access:private
kit::Server::update	.//network/platform/linux/Server_linux.cpp	/^void Server::update()$/;"	f	class:kit::Server	signature:()
kit::Server::update	.//network/platform/linux/Server_linux.h	/^    virtual void update();$/;"	p	class:kit::Server	access:public	signature:()
kit::Server::~Server	.//network/platform/linux/Server_linux.cpp	/^Server::~Server()$/;"	f	class:kit::Server	signature:()
kit::Server::~Server	.//network/platform/linux/Server_linux.h	/^    virtual ~Server();$/;"	p	class:kit::Server	access:public	signature:()
kit::Server::~Server	.//network/platform/win/Server.cpp	/^Server::~Server()$/;"	f	class:kit::Server	signature:()
kit::Session	.//network/Session.h	/^class Session : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Session::Session	.//network/Session.cpp	/^Session::Session()$/;"	f	class:kit::Session	signature:()
kit::Session::Session	.//network/Session.h	/^    Session();$/;"	p	class:kit::Session	access:public	signature:()
kit::Session::flush	.//network/Session.cpp	/^bool Session::flush()$/;"	f	class:kit::Session	signature:()
kit::Session::flush	.//network/Session.h	/^    bool flush();$/;"	p	class:kit::Session	access:public	signature:()
kit::Session::getID	.//network/Session.h	/^    SessionID getID() const { return sid_; }$/;"	f	class:kit::Session	access:public	signature:() const
kit::Session::getRecvPackets	.//network/Session.h	/^    PacketQue& getRecvPackets() { return recv_packets_; }$/;"	f	class:kit::Session	access:public	signature:()
kit::Session::getSendPackets	.//network/Session.h	/^    PacketQue& getSendPackets() { return send_packets_; }$/;"	f	class:kit::Session	access:public	signature:()
kit::Session::getSocket	.//network/Session.h	/^    Socket* getSocket() const { return socket_; }$/;"	f	class:kit::Session	access:public	signature:() const
kit::Session::init	.//network/Session.cpp	/^void Session::init(Socket* sock)$/;"	f	class:kit::Session	signature:(Socket* sock)
kit::Session::init	.//network/Session.h	/^    void init(Socket* sock);$/;"	p	class:kit::Session	access:public	signature:(Socket* sock)
kit::Session::out_dirty	.//network/Session.h	/^    bool out_dirty = false;$/;"	m	class:kit::Session	access:public
kit::Session::recvPacket	.//network/Session.cpp	/^bool Session::recvPacket(Packet* pack)$/;"	f	class:kit::Session	signature:(Packet* pack)
kit::Session::recvPacket	.//network/Session.h	/^    bool recvPacket(Packet* pack);$/;"	p	class:kit::Session	access:public	signature:(Packet* pack)
kit::Session::recv_packets_	.//network/Session.h	/^    PacketQue recv_packets_;$/;"	m	class:kit::Session	access:protected
kit::Session::sendPacket	.//network/Session.cpp	/^bool Session::sendPacket(Packet* pack)$/;"	f	class:kit::Session	signature:(Packet* pack)
kit::Session::sendPacket	.//network/Session.h	/^    bool sendPacket(Packet* pack);$/;"	p	class:kit::Session	access:public	signature:(Packet* pack)
kit::Session::send_packets_	.//network/Session.h	/^    PacketQue send_packets_;$/;"	m	class:kit::Session	access:protected
kit::Session::session_id_count_	.//network/Session.cpp	/^SessionID Session::session_id_count_ = 0;$/;"	m	class:kit::Session	file:
kit::Session::session_id_count_	.//network/Session.h	/^    static SessionID session_id_count_;$/;"	m	class:kit::Session	access:public
kit::Session::setSocket	.//network/Session.cpp	/^void Session::setSocket(Socket* sock)$/;"	f	class:kit::Session	signature:(Socket* sock)
kit::Session::setSocket	.//network/Session.h	/^    void setSocket(Socket* sock);$/;"	p	class:kit::Session	access:public	signature:(Socket* sock)
kit::Session::sid_	.//network/Session.h	/^    SessionID sid_;$/;"	m	class:kit::Session	access:protected
kit::Session::socket_	.//network/Session.h	/^    Socket* socket_;$/;"	m	class:kit::Session	access:protected
kit::Session::time_	.//network/Session.h	/^    uint32_t time_;$/;"	m	class:kit::Session	access:protected
kit::Session::~Session	.//network/Session.cpp	/^Session::~Session()$/;"	f	class:kit::Session	signature:()
kit::Session::~Session	.//network/Session.h	/^    virtual ~Session();$/;"	p	class:kit::Session	access:public	signature:()
kit::SessionID	.//network/netsys.h	/^typedef int32_t SessionID;$/;"	t	namespace:kit
kit::Singleton	.//base/Singleton.h	/^class Singleton$/;"	c	namespace:kit
kit::Singleton::destroyInstance	.//base/Singleton.h	/^    static void destroyInstance(void)$/;"	f	class:kit::Singleton	access:public	signature:(void)
kit::Singleton::exists	.//base/Singleton.h	/^    static bool exists(void)$/;"	f	class:kit::Singleton	access:public	signature:(void)
kit::Singleton::instance	.//base/Singleton.h	/^    inline static T* instance(void)$/;"	f	class:kit::Singleton	access:public	signature:(void)
kit::Singleton::instance_	.//base/Singleton.h	/^    static T* instance_;$/;"	m	class:kit::Singleton	access:protected
kit::Singleton::instance_	.//base/Singleton.h	/^template<typename T> T* Singleton<T>::instance_ = 0;$/;"	m	class:kit::Singleton
kit::SockAddr	.//network/platform/linux/SockAddr_linux.h	/^class SockAddr : public ISockAddr$/;"	c	namespace:kit	inherits:ISockAddr
kit::SockAddr::SockAddr	.//network/platform/win/SockAddr.cpp	/^SockAddr::SockAddr()$/;"	f	class:kit::SockAddr	signature:()
kit::SockAddr::init	.//network/platform/linux/SockAddr_linux.cpp	/^void SockAddr::init(const char* ip, uint16_t port, uint16_t family)$/;"	f	class:kit::SockAddr	signature:(const char* ip, uint16_t port, uint16_t family)
kit::SockAddr::init	.//network/platform/linux/SockAddr_linux.h	/^    virtual void init(const char* ip, uint16_t port, uint16_t family);$/;"	p	class:kit::SockAddr	access:public	signature:(const char* ip, uint16_t port, uint16_t family)
kit::SockAddr::init	.//network/platform/win/SockAddr.cpp	/^void SockAddr::init(const char* ip, uint16_t port, uint16_t family)$/;"	f	class:kit::SockAddr	signature:(const char* ip, uint16_t port, uint16_t family)
kit::SockAddr::~SockAddr	.//network/platform/linux/SockAddr_linux.cpp	/^SockAddr::~SockAddr()$/;"	f	class:kit::SockAddr	signature:()
kit::SockAddr::~SockAddr	.//network/platform/linux/SockAddr_linux.h	/^    virtual ~SockAddr();$/;"	p	class:kit::SockAddr	access:public	signature:()
kit::SockAddr::~SockAddr	.//network/platform/win/SockAddr.cpp	/^SockAddr::~SockAddr()$/;"	f	class:kit::SockAddr	signature:()
kit::Socket	.//network/platform/linux/Socket_linux.h	/^class Socket : public ISocket$/;"	c	namespace:kit	inherits:ISocket
kit::Socket::Socket	.//network/platform/win/Socket.cpp	/^Socket::Socket()$/;"	f	class:kit::Socket	signature:()
kit::Socket::accept	.//network/platform/win/Socket.cpp	/^int32_t Socket::accept(sockaddr* addr)$/;"	f	class:kit::Socket	signature:(sockaddr* addr)
kit::Socket::bind	.//network/platform/win/Socket.cpp	/^int32_t Socket::bind(const sockaddr* addr)$/;"	f	class:kit::Socket	signature:(const sockaddr* addr)
kit::Socket::close	.//network/platform/win/Socket.cpp	/^void Socket::close()$/;"	f	class:kit::Socket	signature:()
kit::Socket::connect	.//network/platform/win/Socket.cpp	/^int32_t Socket::connect(const sockaddr* addr)$/;"	f	class:kit::Socket	signature:(const sockaddr* addr)
kit::Socket::getErrno	.//network/platform/win/Socket.cpp	/^int32_t Socket::getErrno()$/;"	f	class:kit::Socket	signature:()
kit::Socket::getOption	.//network/platform/win/Socket.cpp	/^int32_t Socket::getOption(int32_t level, int32_t optname, char* optval, int32_t* optlen)$/;"	f	class:kit::Socket	signature:(int32_t level, int32_t optname, char* optval, int32_t* optlen)
kit::Socket::init	.//network/platform/win/Socket.cpp	/^void Socket::init(int32_t family, int32_t type, int32_t protocol)$/;"	f	class:kit::Socket	signature:(int32_t family, int32_t type, int32_t protocol)
kit::Socket::ioctl	.//network/platform/win/Socket.cpp	/^int32_t Socket::ioctl(unsigned long cmd, char* argp)$/;"	f	class:kit::Socket	signature:(unsigned long cmd, char* argp)
kit::Socket::listen	.//network/platform/win/Socket.cpp	/^int32_t Socket::listen(int32_t count)$/;"	f	class:kit::Socket	signature:(int32_t count)
kit::Socket::open	.//network/platform/win/Socket.cpp	/^void Socket::open()$/;"	f	class:kit::Socket	signature:()
kit::Socket::recv	.//network/platform/win/Socket.cpp	/^int32_t Socket::recv(char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::Socket	signature:(char* buf, int32_t size, int32_t mode)
kit::Socket::recvFrom	.//network/platform/win/Socket.cpp	/^int32_t Socket::recvFrom(char* buf, int32_t size, int32_t mode, sockaddr *addr)$/;"	f	class:kit::Socket	signature:(char* buf, int32_t size, int32_t mode, sockaddr *addr)
kit::Socket::send	.//network/platform/win/Socket.cpp	/^int32_t Socket::send(const char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::Socket	signature:(const char* buf, int32_t size, int32_t mode)
kit::Socket::sendTo	.//network/platform/win/Socket.cpp	/^int32_t Socket::sendTo(const char* buf, int32_t size, int32_t mode, const sockaddr* addr)$/;"	f	class:kit::Socket	signature:(const char* buf, int32_t size, int32_t mode, const sockaddr* addr)
kit::Socket::setHandle	.//network/platform/win/Socket.cpp	/^void Socket::setHandle(int32_t sock)$/;"	f	class:kit::Socket	signature:(int32_t sock)
kit::Socket::setOption	.//network/platform/win/Socket.cpp	/^int32_t Socket::setOption(int32_t level, int32_t optname, const char* optval, int32_t optlen)$/;"	f	class:kit::Socket	signature:(int32_t level, int32_t optname, const char* optval, int32_t optlen)
kit::Socket::shutdown	.//network/platform/win/Socket.cpp	/^int32_t Socket::shutdown(int32_t mode)$/;"	f	class:kit::Socket	signature:(int32_t mode)
kit::Socket::~Socket	.//network/platform/win/Socket.cpp	/^Socket::~Socket()$/;"	f	class:kit::Socket	signature:()
kit::SocketID	.//network/netsys.h	/^typedef int32_t SocketID;$/;"	t	namespace:kit
kit::SpinMutex	.//kit/platform/linux/Thread_linux.h	/^class SpinMutex : public IMutex$/;"	c	namespace:kit	inherits:IMutex
kit::SpinMutex::SpinMutex	.//kit/platform/linux/Thread_linux.cpp	/^SpinMutex::SpinMutex()$/;"	f	class:kit::SpinMutex	signature:()
kit::SpinMutex::SpinMutex	.//kit/platform/linux/Thread_linux.h	/^    SpinMutex();$/;"	p	class:kit::SpinMutex	access:public	signature:()
kit::SpinMutex::baseInit	.//kit/platform/linux/Thread_linux.cpp	/^bool SpinMutex::baseInit()$/;"	f	class:kit::SpinMutex	signature:()
kit::SpinMutex::baseInit	.//kit/platform/linux/Thread_linux.h	/^    virtual bool baseInit();$/;"	p	class:kit::SpinMutex	access:protected	signature:()
kit::SpinMutex::lock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t SpinMutex::lock()$/;"	f	class:kit::SpinMutex	signature:()
kit::SpinMutex::lock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t lock();$/;"	p	class:kit::SpinMutex	access:public	signature:()
kit::SpinMutex::mutex_	.//kit/platform/linux/Thread_linux.h	/^    pthread_spinlock_t mutex_;$/;"	m	class:kit::SpinMutex	access:protected
kit::SpinMutex::tryLock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t SpinMutex::tryLock()$/;"	f	class:kit::SpinMutex	signature:()
kit::SpinMutex::tryLock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t tryLock();$/;"	p	class:kit::SpinMutex	access:public	signature:()
kit::SpinMutex::unlock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t SpinMutex::unlock()$/;"	f	class:kit::SpinMutex	signature:()
kit::SpinMutex::unlock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t unlock(); $/;"	p	class:kit::SpinMutex	access:public	signature:()
kit::SpinMutex::~SpinMutex	.//kit/platform/linux/Thread_linux.cpp	/^SpinMutex::~SpinMutex()$/;"	f	class:kit::SpinMutex	signature:()
kit::SpinMutex::~SpinMutex	.//kit/platform/linux/Thread_linux.h	/^    virtual ~SpinMutex();$/;"	p	class:kit::SpinMutex	access:public	signature:()
kit::Terminal	.//network/Terminal.h	/^class Terminal : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Terminal::ProtocolMap	.//network/Terminal.h	/^    typedef Map<ProtocolID, Protocol*, PROTOCOL_LENGTH> ProtocolMap;$/;"	t	class:kit::Terminal	access:protected
kit::Terminal::SessionMap	.//network/Terminal.h	/^    typedef Map<SessionID, Session*, SESSION_LENGTH> SessionMap;$/;"	t	class:kit::Terminal	access:protected
kit::Terminal::Terminal	.//network/Terminal.cpp	/^Terminal::Terminal()$/;"	f	class:kit::Terminal	signature:()
kit::Terminal::Terminal	.//network/Terminal.h	/^	Terminal();$/;"	p	class:kit::Terminal	access:public	signature:()
kit::Terminal::addProtocol	.//network/Terminal.cpp	/^void Terminal::addProtocol(ProtocolID pid, Protocol* pto)$/;"	f	class:kit::Terminal	signature:(ProtocolID pid, Protocol* pto)
kit::Terminal::addProtocol	.//network/Terminal.h	/^    void addProtocol(ProtocolID pid, Protocol* pto);$/;"	p	class:kit::Terminal	access:public	signature:(ProtocolID pid, Protocol* pto)
kit::Terminal::addSession	.//network/Terminal.cpp	/^void Terminal::addSession(Session* session)$/;"	f	class:kit::Terminal	signature:(Session* session)
kit::Terminal::addSession	.//network/Terminal.h	/^    void addSession(Session* session);$/;"	p	class:kit::Terminal	access:public	signature:(Session* session)
kit::Terminal::baseInit	.//network/Terminal.cpp	/^bool Terminal::baseInit()$/;"	f	class:kit::Terminal	signature:()
kit::Terminal::baseInit	.//network/Terminal.h	/^    virtual bool baseInit();$/;"	p	class:kit::Terminal	access:protected	signature:()
kit::Terminal::clearProtocols	.//network/Terminal.cpp	/^void Terminal::clearProtocols()$/;"	f	class:kit::Terminal	signature:()
kit::Terminal::clearProtocols	.//network/Terminal.h	/^    void clearProtocols();$/;"	p	class:kit::Terminal	access:public	signature:()
kit::Terminal::clearSessions	.//network/Terminal.cpp	/^void Terminal::clearSessions()$/;"	f	class:kit::Terminal	signature:()
kit::Terminal::clearSessions	.//network/Terminal.h	/^    void clearSessions();$/;"	p	class:kit::Terminal	access:public	signature:()
kit::Terminal::delProtocol	.//network/Terminal.cpp	/^void Terminal::delProtocol(ProtocolID pid)$/;"	f	class:kit::Terminal	signature:(ProtocolID pid)
kit::Terminal::delProtocol	.//network/Terminal.h	/^    void delProtocol(ProtocolID pid);$/;"	p	class:kit::Terminal	access:public	signature:(ProtocolID pid)
kit::Terminal::delSession	.//network/Terminal.cpp	/^void Terminal::delSession(SessionID sid)$/;"	f	class:kit::Terminal	signature:(SessionID sid)
kit::Terminal::delSession	.//network/Terminal.h	/^    void delSession(SessionID sid);$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid)
kit::Terminal::getProtocol	.//network/Terminal.cpp	/^Protocol* Terminal::getProtocol(ProtocolID pid) const$/;"	f	class:kit::Terminal	signature:(ProtocolID pid) const
kit::Terminal::getProtocol	.//network/Terminal.h	/^    Protocol* getProtocol(ProtocolID pid) const;$/;"	p	class:kit::Terminal	access:public	signature:(ProtocolID pid) const
kit::Terminal::getSession	.//network/Terminal.cpp	/^Session* Terminal::getSession(SessionID sid) const$/;"	f	class:kit::Terminal	signature:(SessionID sid) const
kit::Terminal::getSession	.//network/Terminal.h	/^    Session* getSession(SessionID sid) const;$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid) const
kit::Terminal::handleSessionRecv	.//network/Terminal.cpp	/^void Terminal::handleSessionRecv(Session* session)$/;"	f	class:kit::Terminal	signature:(Session* session)
kit::Terminal::handleSessionRecv	.//network/Terminal.h	/^    void handleSessionRecv(Session* session);$/;"	p	class:kit::Terminal	access:public	signature:(Session* session)
kit::Terminal::handleSessionSend	.//network/Terminal.cpp	/^void Terminal::handleSessionSend(Session* session)$/;"	f	class:kit::Terminal	signature:(Session* session)
kit::Terminal::handleSessionSend	.//network/Terminal.h	/^    void handleSessionSend(Session* session);$/;"	p	class:kit::Terminal	access:public	signature:(Session* session)
kit::Terminal::out_vec_	.//network/Terminal.h	/^    std::vector<Session*> out_vec_;$/;"	m	class:kit::Terminal	access:protected
kit::Terminal::protocol_map_	.//network/Terminal.h	/^    ProtocolMap protocol_map_;$/;"	m	class:kit::Terminal	access:protected
kit::Terminal::recvProtocol	.//network/Terminal.cpp	/^void Terminal::recvProtocol(SessionID sid, const Protocol* pto)$/;"	f	class:kit::Terminal	signature:(SessionID sid, const Protocol* pto)
kit::Terminal::recvProtocol	.//network/Terminal.h	/^    void recvProtocol(SessionID sid, const Protocol* pto);$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid, const Protocol* pto)
kit::Terminal::sendProtocol	.//network/Terminal.cpp	/^void Terminal::sendProtocol(SessionID sid, const Protocol* pto)$/;"	f	class:kit::Terminal	signature:(SessionID sid, const Protocol* pto)
kit::Terminal::sendProtocol	.//network/Terminal.h	/^    void sendProtocol(SessionID sid, const Protocol* pto);$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid, const Protocol* pto)
kit::Terminal::session_map_	.//network/Terminal.h	/^    SessionMap session_map_;$/;"	m	class:kit::Terminal	access:protected
kit::Terminal::~Terminal	.//network/Terminal.cpp	/^Terminal::~Terminal()$/;"	f	class:kit::Terminal	signature:()
kit::Terminal::~Terminal	.//network/Terminal.h	/^    virtual ~Terminal();$/;"	p	class:kit::Terminal	access:public	signature:()
kit::Thread	.//kit/platform/linux/Thread_linux.h	/^class Thread : public IThread$/;"	c	namespace:kit	inherits:IThread
kit::Thread::Thread	.//kit/platform/linux/Thread_linux.cpp	/^Thread::Thread()$/;"	f	class:kit::Thread	signature:()
kit::Thread::Thread	.//kit/platform/linux/Thread_linux.h	/^    Thread();$/;"	p	class:kit::Thread	access:public	signature:()
kit::Thread::join	.//kit/platform/linux/Thread_linux.cpp	/^void Thread::join()$/;"	f	class:kit::Thread	signature:()
kit::Thread::join	.//kit/platform/linux/Thread_linux.h	/^    virtual void join();$/;"	p	class:kit::Thread	access:public	signature:()
kit::Thread::pid_	.//kit/platform/linux/Thread_linux.h	/^    pthread_t pid_;$/;"	m	class:kit::Thread	access:private
kit::Thread::start	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Thread::start()$/;"	f	class:kit::Thread	signature:()
kit::Thread::start	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t start();$/;"	p	class:kit::Thread	access:public	signature:()
kit::Thread::~Thread	.//kit/platform/linux/Thread_linux.cpp	/^Thread::~Thread()$/;"	f	class:kit::Thread	signature:()
kit::Thread::~Thread	.//kit/platform/linux/Thread_linux.h	/^    virtual ~Thread();$/;"	p	class:kit::Thread	access:public	signature:()
kit::ThreadHandler	.//kit/Thread.h	/^struct ThreadHandler$/;"	s	namespace:kit
kit::ThreadHandler::handleThread	.//kit/Thread.h	/^    virtual void handleThread() = 0;$/;"	p	struct:kit::ThreadHandler	access:public	signature:()
kit::Timer	.//kit/Timer.h	/^class Timer : public Ref$/;"	c	namespace:kit	inherits:Ref
kit::Timer::Node	.//kit/Timer.h	/^struct Node $/;"	s	class:kit::Timer	access:private
kit::Timer::Node::Node	.//kit/Timer.h	/^    Node(uint32_t _id, uint32_t _delay, uint32_t _cycle = 0)$/;"	f	struct:kit::Timer::Node	access:public	signature:(uint32_t _id, uint32_t _delay, uint32_t _cycle = 0)
kit::Timer::Node::__anon3::bits	.//kit/Timer.h	/^        uint8_t bits[4];$/;"	m	union:kit::Timer::Node::__anon3	access:public
kit::Timer::Node::__anon3::delay	.//kit/Timer.h	/^        uint32_t delay;$/;"	m	union:kit::Timer::Node::__anon3	access:public
kit::Timer::Node::cycle	.//kit/Timer.h	/^    uint32_t cycle;$/;"	m	struct:kit::Timer::Node	access:public
kit::Timer::Node::id	.//kit/Timer.h	/^    uint32_t id;$/;"	m	struct:kit::Timer::Node	access:public
kit::Timer::Node::next	.//kit/Timer.h	/^    Node* next;$/;"	m	struct:kit::Timer::Node	access:public
kit::Timer::Timer	.//kit/Timer.cpp	/^Timer::Timer()$/;"	f	class:kit::Timer	signature:()
kit::Timer::Timer	.//kit/Timer.h	/^    Timer();$/;"	p	class:kit::Timer	access:public	signature:()
kit::Timer::Wheel	.//kit/Timer.h	/^struct Wheel$/;"	s	class:kit::Timer	access:private
kit::Timer::Wheel::Wheel	.//kit/Timer.cpp	/^Timer::Wheel::Wheel()$/;"	f	class:kit::Timer::Wheel	signature:()
kit::Timer::Wheel::Wheel	.//kit/Timer.h	/^    Wheel();$/;"	p	struct:kit::Timer::Wheel	access:public	signature:()
kit::Timer::Wheel::nodes	.//kit/Timer.h	/^    Node* nodes[512];$/;"	m	struct:kit::Timer::Wheel	access:public
kit::Timer::Wheel::pos	.//kit/Timer.h	/^    uint8_t pos;$/;"	m	struct:kit::Timer::Wheel	access:public
kit::Timer::Wheel::~Wheel	.//kit/Timer.cpp	/^Timer::Wheel::~Wheel()$/;"	f	class:kit::Timer::Wheel	signature:()
kit::Timer::Wheel::~Wheel	.//kit/Timer.h	/^    ~Wheel();$/;"	p	struct:kit::Timer::Wheel	access:public	signature:()
kit::Timer::addNode	.//kit/Timer.cpp	/^bool Timer::addNode(uint8_t index, Node* node)$/;"	f	class:kit::Timer	signature:(uint8_t index, Node* node)
kit::Timer::addNode	.//kit/Timer.h	/^    bool addNode(uint8_t index, Node* node);$/;"	p	class:kit::Timer	access:private	signature:(uint8_t index, Node* node)
kit::Timer::addTimer	.//kit/Timer.cpp	/^uint32_t Timer::addTimer(uint32_t delay, TimerHandler handler, uint32_t cycle)$/;"	f	class:kit::Timer	signature:(uint32_t delay, TimerHandler handler, uint32_t cycle)
kit::Timer::addTimer	.//kit/Timer.h	/^    uint32_t addTimer(uint32_t delay, TimerHandler handler, uint32_t cycle = 0);$/;"	p	class:kit::Timer	access:public	signature:(uint32_t delay, TimerHandler handler, uint32_t cycle = 0)
kit::Timer::delTimer	.//kit/Timer.cpp	/^void Timer::delTimer(uint32_t id)$/;"	f	class:kit::Timer	signature:(uint32_t id)
kit::Timer::delTimer	.//kit/Timer.h	/^    void delTimer(uint32_t id);$/;"	p	class:kit::Timer	access:public	signature:(uint32_t id)
kit::Timer::handleTimer	.//kit/Timer.cpp	/^bool Timer::handleTimer(uint32_t id)$/;"	f	class:kit::Timer	signature:(uint32_t id)
kit::Timer::handleTimer	.//kit/Timer.h	/^    bool handleTimer(uint32_t id);$/;"	p	class:kit::Timer	access:private	signature:(uint32_t id)
kit::Timer::handler_map_	.//kit/Timer.h	/^    Map<uint32_t, TimerHandler, TIMER_MAP_SIZE> handler_map_;$/;"	m	class:kit::Timer	access:private
kit::Timer::id_	.//kit/Timer.h	/^    uint32_t id_;$/;"	m	class:kit::Timer	access:private
kit::Timer::update	.//kit/Timer.cpp	/^void Timer::update()$/;"	f	class:kit::Timer	signature:()
kit::Timer::update	.//kit/Timer.h	/^    void update();$/;"	p	class:kit::Timer	access:public	signature:()
kit::Timer::wheeling	.//kit/Timer.cpp	/^void Timer::wheeling(uint8_t index)$/;"	f	class:kit::Timer	signature:(uint8_t index)
kit::Timer::wheeling	.//kit/Timer.h	/^    void wheeling(uint8_t index = 0);$/;"	p	class:kit::Timer	access:private	signature:(uint8_t index = 0)
kit::Timer::wheels_	.//kit/Timer.h	/^    Wheel wheels_[4];$/;"	m	class:kit::Timer	access:private
kit::Timer::~Timer	.//kit/Timer.cpp	/^Timer::~Timer()$/;"	f	class:kit::Timer	signature:()
kit::Timer::~Timer	.//kit/Timer.h	/^    virtual ~Timer();$/;"	p	class:kit::Timer	access:public	signature:()
kit::TimerHandler	.//kit/Timer.h	/^typedef std::function<bool(uint32_t)> TimerHandler;$/;"	t	namespace:kit
kit::formatString	.//kit/Functions.cpp	/^std::string formatString(const char* format, ...)$/;"	f	namespace:kit	signature:(const char* format, ...)
kit::formatString	.//kit/Functions.h	/^std::string formatString(const char* format, ...);$/;"	p	namespace:kit	signature:(const char* format, ...)
kit::get_cpu_tick	.//kit/kitsys.cpp	/^static uint64_t get_cpu_tick()$/;"	f	namespace:kit	signature:()
kit::get_num_from_sysfile	.//kit/kitsys.cpp	/^static int64_t get_num_from_sysfile( const char* _name, const char* _head )$/;"	f	namespace:kit	signature:( const char* _name, const char* _head )
kit::sleep	.//kit/kitsys.cpp	/^void sleep(uint32_t msec)$/;"	f	namespace:kit	signature:(uint32_t msec)
kit::sleep	.//kit/kitsys.h	/^void sleep(uint32_t msec);$/;"	p	namespace:kit	signature:(uint32_t msec)
kit::split	.//kit/Functions.cpp	/^void split(const std::string& text, std::vector<std::string>& vec, char separator)$/;"	f	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, char separator)
kit::split	.//kit/Functions.h	/^void split(const std::string& text, std::vector<std::string>& vec, const char separator);$/;"	p	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, const char separator)
kit::splitWithString	.//kit/Functions.cpp	/^void splitWithString(const std::string& text, std::vector<std::string>& vec, const std::string& separator)$/;"	f	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, const std::string& separator)
kit::splitWithString	.//kit/Functions.h	/^void splitWithString(const std::string& text, std::vector<std::string>& vec, const std::string& separator);$/;"	p	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, const std::string& separator)
kit::thread_start	.//kit/platform/linux/Thread_linux.cpp	/^void* thread_start(void *p)$/;"	f	namespace:kit	signature:(void *p)
kit::tick	.//kit/kitsys.cpp	/^static inline uint64_t tick()$/;"	f	namespace:kit	signature:()
kit::time	.//kit/kitsys.cpp	/^uint32_t time()$/;"	f	namespace:kit	signature:()
kit::time	.//kit/kitsys.h	/^uint32_t time();$/;"	p	namespace:kit	signature:()
kit::toint	.//network/Protocol.h	/^inline constexpr int toint(PTType t)$/;"	f	namespace:kit	signature:(PTType t)
kname	.//script/lua/lua-5.3.4/src/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:	signature:(Proto *p, int pc, int c, const char **name)
l	.//script/lua/lua-5.3.4/src/llimits.h	/^  long l;$/;"	m	union:__anon9	access:public
l	.//script/lua/lua-5.3.4/src/lobject.h	/^  LClosure l;$/;"	m	union:Closure	access:public
l	.//script/lua/lua-5.3.4/src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:	access:public
l	.//script/lua/lua-5.3.4/src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:	access:public
l	.//script/lua/lua-5.3.4/src/lstate.h	/^    } l;$/;"	m	union:CallInfo::__anon18	typeref:struct:CallInfo::__anon18::__anon19	access:public
l_G	.//script/lua/lua-5.3.4/src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State	access:public
l_alloc	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:	signature:(void *ud, void *ptr, size_t osize, size_t nsize)
l_castS2U	.//script/lua/lua-5.3.4/src/llimits.h	/^#define l_castS2U(/;"	d
l_castU2S	.//script/lua/lua-5.3.4/src/llimits.h	/^#define l_castU2S(/;"	d
l_checkmode	.//script/lua/lua-5.3.4/src/liolib.c	/^static int l_checkmode (const char *mode) {$/;"	f	file:	signature:(const char *mode)
l_checktime	.//script/lua/lua-5.3.4/src/loslib.c	/^static time_t l_checktime (lua_State *L, int arg) {$/;"	f	file:	signature:(lua_State *L, int arg)
l_floor	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define l_floor(/;"	d
l_fseek	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_fseek(/;"	d	file:
l_ftell	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_ftell(/;"	d	file:
l_getc	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_getc(/;"	d	file:
l_gmtime	.//script/lua/lua-5.3.4/src/loslib.c	/^#define l_gmtime(/;"	d	file:
l_hashfloat	.//script/lua/lua-5.3.4/src/ltable.c	/^static int l_hashfloat (lua_Number n) {$/;"	f	file:	signature:(lua_Number n)
l_inspectstat	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define l_inspectstat(/;"	d	file:
l_intfitsf	.//script/lua/lua-5.3.4/src/lvm.c	/^#define l_intfitsf(/;"	d	file:
l_isfalse	.//script/lua/lua-5.3.4/src/lobject.h	/^#define l_isfalse(/;"	d
l_localtime	.//script/lua/lua-5.3.4/src/loslib.c	/^#define l_localtime(/;"	d	file:
l_lockfile	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_lockfile(/;"	d	file:
l_mathlim	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define l_mathlim(/;"	d
l_mathop	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define l_mathop(/;"	d
l_mathop	.//script/lua/lua-5.3.4/src/luaconf.h	/^#undef l_mathop /;"	d
l_mem	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t
l_mem	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef long l_mem;$/;"	t
l_mem	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef ptrdiff_t l_mem;$/;"	t
l_message	.//script/lua/lua-5.3.4/src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:	signature:(const char *pname, const char *msg)
l_noret	.//script/lua/lua-5.3.4/src/llimits.h	/^#define l_noret	/;"	d
l_pclose	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_pclose(/;"	d	file:
l_popen	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_popen(/;"	d	file:
l_print	.//script/lua/lua-5.3.4/src/lua.c	/^static void l_print (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
l_pushtime	.//script/lua/lua-5.3.4/src/loslib.c	/^#define l_pushtime(/;"	d	file:
l_rand	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#define l_rand(/;"	d	file:
l_randomizePivot	.//script/lua/lua-5.3.4/src/ltablib.c	/^static unsigned int l_randomizePivot (void) {$/;"	f	file:	signature:(void)
l_registry	.//script/lua/lua-5.3.4/src/lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State	access:public
l_seeknum	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_seeknum	/;"	d	file:
l_setbit	.//script/lua/lua-5.3.4/src/lgc.h	/^#define l_setbit(/;"	d
l_signalT	.//script/lua/lua-5.3.4/src/lstate.h	/^#define l_signalT	/;"	d
l_sprintf	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define l_sprintf(/;"	d
l_srand	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#define l_srand(/;"	d	file:
l_str2d	.//script/lua/lua-5.3.4/src/lobject.c	/^static const char *l_str2d (const char *s, lua_Number *result) {$/;"	f	file:	signature:(const char *s, lua_Number *result)
l_str2dloc	.//script/lua/lua-5.3.4/src/lobject.c	/^static const char *l_str2dloc (const char *s, lua_Number *result, int mode) {$/;"	f	file:	signature:(const char *s, lua_Number *result, int mode)
l_str2int	.//script/lua/lua-5.3.4/src/lobject.c	/^static const char *l_str2int (const char *s, lua_Integer *result) {$/;"	f	file:	signature:(const char *s, lua_Integer *result)
l_strcmp	.//script/lua/lua-5.3.4/src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:	signature:(const TString *ls, const TString *rs)
l_timet	.//script/lua/lua-5.3.4/src/loslib.c	/^#define l_timet	/;"	d	file:
l_uacInt	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef LUAI_UACINT l_uacInt;$/;"	t
l_uacNumber	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t
l_unlockfile	.//script/lua/lua-5.3.4/src/liolib.c	/^#define l_unlockfile(/;"	d	file:
label	.//script/lua/lua-5.3.4/src/lparser.h	/^  Labellist label;   \/* list of active labels *\/$/;"	m	struct:Dyndata	access:public
labelstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:	signature:(LexState *ls, TString *label, int line)
laction	.//script/lua/lua-5.3.4/src/lua.c	/^static void laction (int i) {$/;"	f	file:	signature:(int i)
lapi_c	.//script/lua/lua-5.3.4/src/lapi.c	/^#define lapi_c$/;"	d	file:
lapi_h	.//script/lua/lua-5.3.4/src/lapi.h	/^#define lapi_h$/;"	d
lastfree	.//script/lua/lua-5.3.4/src/lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table	access:public
lastlevel	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int lastlevel (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
lastline	.//script/lua/lua-5.3.4/src/llex.h	/^  int lastline;  \/* line of last token 'consumed' *\/$/;"	m	struct:LexState	access:public
lastlinedefined	.//script/lua/lua-5.3.4/src/lobject.h	/^  int lastlinedefined;  \/* debug information  *\/$/;"	m	struct:Proto	access:public
lastlinedefined	.//script/lua/lua-5.3.4/src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lastlistfield	.//script/lua/lua-5.3.4/src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:	signature:(FuncState *fs, struct ConsControl *cc)
lastmatch	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *lastmatch;  \/* end of last match *\/$/;"	m	struct:GMatchState	file:	access:public
lasttarget	.//script/lua/lua-5.3.4/src/lparser.h	/^  int lasttarget;   \/* 'label' of last 'jump label' *\/$/;"	m	struct:FuncState	access:public
lauxlib_c	.//script/lua/lua-5.3.4/src/lauxlib.c	/^#define lauxlib_c$/;"	d	file:
lauxlib_h	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define lauxlib_h$/;"	d
lbaselib_c	.//script/lua/lua-5.3.4/src/lbaselib.c	/^#define lbaselib_c$/;"	d	file:
lbitlib_c	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define lbitlib_c$/;"	d	file:
lcode_c	.//script/lua/lua-5.3.4/src/lcode.c	/^#define lcode_c$/;"	d	file:
lcode_h	.//script/lua/lua-5.3.4/src/lcode.h	/^#define lcode_h$/;"	d
lcorolib_c	.//script/lua/lua-5.3.4/src/lcorolib.c	/^#define lcorolib_c$/;"	d	file:
lctype_c	.//script/lua/lua-5.3.4/src/lctype.c	/^#define lctype_c$/;"	d	file:
lctype_h	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lctype_h$/;"	d
ldblib_c	.//script/lua/lua-5.3.4/src/ldblib.c	/^#define ldblib_c$/;"	d	file:
ldebug_c	.//script/lua/lua-5.3.4/src/ldebug.c	/^#define ldebug_c$/;"	d	file:
ldebug_h	.//script/lua/lua-5.3.4/src/ldebug.h	/^#define ldebug_h$/;"	d
ldo_c	.//script/lua/lua-5.3.4/src/ldo.c	/^#define ldo_c$/;"	d	file:
ldo_h	.//script/lua/lua-5.3.4/src/ldo.h	/^#define ldo_h$/;"	d
ldump_c	.//script/lua/lua-5.3.4/src/ldump.c	/^#define ldump_c$/;"	d	file:
leaveblock	.//script/lua/lua-5.3.4/src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:	signature:(FuncState *fs)
leavelevel	.//script/lua/lua-5.3.4/src/lparser.c	/^#define leavelevel(/;"	d	file:
left	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon13	file:	access:public
len	.//script/lua/lua-5.3.4/src/lobject.h	/^  size_t len;  \/* number of bytes *\/$/;"	m	struct:Udata	access:public
len	.//script/lua/lua-5.3.4/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon21	file:	access:public
length	.//network/Packet.h	/^    uint16_t length; \/\/包体长度$/;"	m	struct:kit::PacketHeader	access:public
level	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  unsigned char level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:	access:public
lexerror	.//script/lua/lua-5.3.4/src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:	signature:(LexState *ls, const char *msg, int token)
lexerror	.//script/lua/lua-5.3.4/src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token);$/;"	p	file:	signature:(LexState *ls, const char *msg, int token)
lfunc_c	.//script/lua/lua-5.3.4/src/lfunc.c	/^#define lfunc_c$/;"	d	file:
lfunc_h	.//script/lua/lua-5.3.4/src/lfunc.h	/^#define lfunc_h$/;"	d
lgc_c	.//script/lua/lua-5.3.4/src/lgc.c	/^#define lgc_c$/;"	d	file:
lgc_h	.//script/lua/lua-5.3.4/src/lgc.h	/^#define lgc_h$/;"	d
libsize	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:	signature:(const luaL_Reg *l)
line	.//script/lua/lua-5.3.4/src/lparser.h	/^  int line;  \/* line where it appeared *\/$/;"	m	struct:Labeldesc	access:public
linedefined	.//script/lua/lua-5.3.4/src/lobject.h	/^  int linedefined;  \/* debug information  *\/$/;"	m	struct:Proto	access:public
linedefined	.//script/lua/lua-5.3.4/src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lineinfo	.//script/lua/lua-5.3.4/src/lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines (debug information) *\/$/;"	m	struct:Proto	access:public
linenumber	.//script/lua/lua-5.3.4/src/llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState	access:public
linit_c	.//script/lua/lua-5.3.4/src/linit.c	/^#define linit_c$/;"	d	file:
linkgclist	.//script/lua/lua-5.3.4/src/lgc.c	/^#define linkgclist(/;"	d	file:
liolib_c	.//script/lua/lua-5.3.4/src/liolib.c	/^#define liolib_c$/;"	d	file:
lisdigit	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lisdigit(/;"	d
lislalnum	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lislalnum(/;"	d
lislalpha	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lislalpha(/;"	d
lisprint	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lisprint(/;"	d
lisspace	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lisspace(/;"	d
list_	.//base/QList.h	/^    List<Type> list_;$/;"	m	class:kit::QList	access:private
listen	.//network/Socket.cpp	/^int32_t ISocket::listen(int32_t count)$/;"	f	class:kit::ISocket	signature:(int32_t count)
listen	.//network/Socket.h	/^	int32_t listen(int32_t count);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t count)
listen	.//network/platform/win/Socket.cpp	/^int32_t Socket::listen(int32_t count)$/;"	f	class:kit::Socket	signature:(int32_t count)
listfield	.//script/lua/lua-5.3.4/src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:	signature:(LexState *ls, struct ConsControl *cc)
listing	.//script/lua/lua-5.3.4/src/luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	file:
lisxdigit	.//script/lua/lua-5.3.4/src/lctype.h	/^#define lisxdigit(/;"	d
little	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  char little;  \/* true iff machine is little endian *\/$/;"	m	union:__anon22	file:	access:public
ll_funcs	.//script/lua/lua-5.3.4/src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_loadlib	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
ll_module	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
ll_require	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
ll_searchpath	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
ll_seeall	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
llex	.//script/lua/lua-5.3.4/src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:	signature:(LexState *ls, SemInfo *seminfo)
llex_c	.//script/lua/lua-5.3.4/src/llex.c	/^#define llex_c$/;"	d	file:
llex_h	.//script/lua/lua-5.3.4/src/llex.h	/^#define llex_h$/;"	d
llimits_h	.//script/lua/lua-5.3.4/src/llimits.h	/^#define llimits_h$/;"	d
lmathlib_c	.//script/lua/lua-5.3.4/src/lmathlib.c	/^#define lmathlib_c$/;"	d	file:
lmem_c	.//script/lua/lua-5.3.4/src/lmem.c	/^#define lmem_c$/;"	d	file:
lmem_h	.//script/lua/lua-5.3.4/src/lmem.h	/^#define lmem_h$/;"	d
lmemfind	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:	signature:(const char *s1, size_t l1, const char *s2, size_t l2)
lmod	.//script/lua/lua-5.3.4/src/lobject.h	/^#define lmod(/;"	d
lnglen	.//script/lua/lua-5.3.4/src/lobject.h	/^    size_t lnglen;  \/* length for long strings *\/$/;"	m	union:TString::__anon10	access:public
load_aux	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:	signature:(lua_State *L, int status, int envidx)
loadedlibs	.//script/lua/lua-5.3.4/src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:	signature:(lua_State *L, const char *filename, const char *modname)
loadlib_c	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define loadlib_c$/;"	d	file:
loadline	.//script/lua/lua-5.3.4/src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
lobject_c	.//script/lua/lua-5.3.4/src/lobject.c	/^#define lobject_c$/;"	d	file:
lobject_h	.//script/lua/lua-5.3.4/src/lobject.h	/^#define lobject_h$/;"	d
localfunc	.//script/lua/lua-5.3.4/src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
localstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
lock	.//kit/Thread.h	/^    virtual int32_t lock() = 0;$/;"	p	class:kit::IMutex	access:public	signature:()
lock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Mutex::lock()$/;"	f	class:kit::Mutex	signature:()
lock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t SpinMutex::lock()$/;"	f	class:kit::SpinMutex	signature:()
lock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t lock();$/;"	p	class:kit::Mutex	access:public	signature:()
lock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t lock();$/;"	p	class:kit::SpinMutex	access:public	signature:()
locvars	.//script/lua/lua-5.3.4/src/lobject.h	/^  LocVar *locvars;  \/* information about local variables (debug information) *\/$/;"	m	struct:Proto	access:public
logic	.//Gear.cpp	/^void Gear::logic()$/;"	f	class:kit::Gear	signature:()
logic	.//Gear.h	/^    virtual void logic();$/;"	p	class:kit::Gear	access:public	signature:()
lookahead	.//script/lua/lua-5.3.4/src/llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState	access:public
lookforfunc	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int lookforfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:	signature:(lua_State *L, const char *path, const char *sym)
lopcodes_c	.//script/lua/lua-5.3.4/src/lopcodes.c	/^#define lopcodes_c$/;"	d	file:
lopcodes_h	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define lopcodes_h$/;"	d
loslib_c	.//script/lua/lua-5.3.4/src/loslib.c	/^#define loslib_c$/;"	d	file:
lparser_c	.//script/lua/lua-5.3.4/src/lparser.c	/^#define lparser_c$/;"	d	file:
lparser_h	.//script/lua/lua-5.3.4/src/lparser.h	/^#define lparser_h$/;"	d
lprefix_h	.//script/lua/lua-5.3.4/src/lprefix.h	/^#define lprefix_h$/;"	d
ls	.//script/lua/lua-5.3.4/src/lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::LexState	access:public
lsizenode	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of 'node' array *\/$/;"	m	struct:Table	access:public
lstate_c	.//script/lua/lua-5.3.4/src/lstate.c	/^#define lstate_c$/;"	d	file:
lstate_h	.//script/lua/lua-5.3.4/src/lstate.h	/^#define lstate_h$/;"	d
lstop	.//script/lua/lua-5.3.4/src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:	signature:(lua_State *L, lua_Debug *ar)
lstring_c	.//script/lua/lua-5.3.4/src/lstring.c	/^#define lstring_c$/;"	d	file:
lstring_h	.//script/lua/lua-5.3.4/src/lstring.h	/^#define lstring_h$/;"	d
lstrlib_c	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define lstrlib_c$/;"	d	file:
lsys_load	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void *lsys_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:	signature:(lua_State *L, const char *path, int seeglb)
lsys_load	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void *lsys_load (lua_State *L, const char *path, int seeglb);$/;"	p	file:	signature:(lua_State *L, const char *path, int seeglb)
lsys_sym	.//script/lua/lua-5.3.4/src/loadlib.c	/^static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:	signature:(lua_State *L, void *lib, const char *sym)
lsys_sym	.//script/lua/lua-5.3.4/src/loadlib.c	/^static lua_CFunction lsys_sym (lua_State *L, void *lib, const char *sym);$/;"	p	file:	signature:(lua_State *L, void *lib, const char *sym)
lsys_unloadlib	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void lsys_unloadlib (void *lib) {$/;"	f	file:	signature:(void *lib)
lsys_unloadlib	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void lsys_unloadlib (void *lib);$/;"	p	file:	signature:(void *lib)
ltable_c	.//script/lua/lua-5.3.4/src/ltable.c	/^#define ltable_c$/;"	d	file:
ltable_h	.//script/lua/lua-5.3.4/src/ltable.h	/^#define ltable_h$/;"	d
ltablib_c	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define ltablib_c$/;"	d	file:
ltm_c	.//script/lua/lua-5.3.4/src/ltm.c	/^#define ltm_c$/;"	d	file:
ltm_h	.//script/lua/lua-5.3.4/src/ltm.h	/^#define ltm_h$/;"	d
ltolower	.//script/lua/lua-5.3.4/src/lctype.h	/^#define ltolower(/;"	d
lu_byte	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef unsigned char lu_byte;$/;"	t
lu_mem	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t
lu_mem	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef size_t lu_mem;$/;"	t
lu_mem	.//script/lua/lua-5.3.4/src/llimits.h	/^typedef unsigned long lu_mem;$/;"	t
luaB_assert	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_auxwrap	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_cocreate	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_collectgarbage	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_coresume	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_corunning	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_costatus	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_cowrap	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_dofile	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_error	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_getmetatable	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_ipairs	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_load	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_loadfile	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_next	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_pairs	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_pcall	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_print	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_rawequal	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_rawget	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_rawlen	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_rawset	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_select	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_setmetatable	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_tonumber	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_tostring	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_type	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_xpcall	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_yield	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaB_yieldable	.//script/lua/lua-5.3.4/src/lcorolib.c	/^static int luaB_yieldable (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
luaC_barrier	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_barrier(/;"	d
luaC_barrier_	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f	signature:(lua_State *L, GCObject *o, GCObject *v)
luaC_barrier_	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v);$/;"	p	signature:(lua_State *L, GCObject *o, GCObject *v)
luaC_barrierback	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_barrierback(/;"	d
luaC_barrierback_	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_barrierback_ (lua_State *L, Table *t) {$/;"	f	signature:(lua_State *L, Table *t)
luaC_barrierback_	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_barrierback_ (lua_State *L, Table *o);$/;"	p	signature:(lua_State *L, Table *o)
luaC_checkGC	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_checkGC(/;"	d
luaC_checkfinalizer	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f	signature:(lua_State *L, GCObject *o, Table *mt)
luaC_checkfinalizer	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt);$/;"	p	signature:(lua_State *L, GCObject *o, Table *mt)
luaC_condGC	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_condGC(/;"	d
luaC_fix	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_fix (lua_State *L, GCObject *o) {$/;"	f	signature:(lua_State *L, GCObject *o)
luaC_fix	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_fix (lua_State *L, GCObject *o);$/;"	p	signature:(lua_State *L, GCObject *o)
luaC_freeallobjects	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaC_freeallobjects	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_freeallobjects (lua_State *L);$/;"	p	signature:(lua_State *L)
luaC_fullgc	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f	signature:(lua_State *L, int isemergency)
luaC_fullgc	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_fullgc (lua_State *L, int isemergency);$/;"	p	signature:(lua_State *L, int isemergency)
luaC_newobj	.//script/lua/lua-5.3.4/src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {$/;"	f	signature:(lua_State *L, int tt, size_t sz)
luaC_newobj	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC GCObject *luaC_newobj (lua_State *L, int tt, size_t sz);$/;"	p	signature:(lua_State *L, int tt, size_t sz)
luaC_objbarrier	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_objbarrier(/;"	d
luaC_runtilstate	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f	signature:(lua_State *L, int statesmask)
luaC_runtilstate	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_runtilstate (lua_State *L, int statesmask);$/;"	p	signature:(lua_State *L, int statesmask)
luaC_step	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaC_step	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_step (lua_State *L);$/;"	p	signature:(lua_State *L)
luaC_upvalbarrier	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_upvalbarrier(/;"	d
luaC_upvalbarrier_	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_upvalbarrier_ (lua_State *L, UpVal *uv) {$/;"	f	signature:(lua_State *L, UpVal *uv)
luaC_upvalbarrier_	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_upvalbarrier_ (lua_State *L, UpVal *uv);$/;"	p	signature:(lua_State *L, UpVal *uv)
luaC_upvdeccount	.//script/lua/lua-5.3.4/src/lgc.c	/^void luaC_upvdeccount (lua_State *L, UpVal *uv) {$/;"	f	signature:(lua_State *L, UpVal *uv)
luaC_upvdeccount	.//script/lua/lua-5.3.4/src/lgc.h	/^LUAI_FUNC void luaC_upvdeccount (lua_State *L, UpVal *uv);$/;"	p	signature:(lua_State *L, UpVal *uv)
luaC_white	.//script/lua/lua-5.3.4/src/lgc.h	/^#define luaC_white(/;"	d
luaD_call	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f	signature:(lua_State *L, StkId func, int nResults)
luaD_call	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_call (lua_State *L, StkId func, int nResults);$/;"	p	signature:(lua_State *L, StkId func, int nResults)
luaD_callnoyield	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_callnoyield (lua_State *L, StkId func, int nResults) {$/;"	f	signature:(lua_State *L, StkId func, int nResults)
luaD_callnoyield	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_callnoyield (lua_State *L, StkId func, int nResults);$/;"	p	signature:(lua_State *L, StkId func, int nResults)
luaD_checkstack	.//script/lua/lua-5.3.4/src/ldo.h	/^#define luaD_checkstack(/;"	d
luaD_checkstackaux	.//script/lua/lua-5.3.4/src/ldo.h	/^#define luaD_checkstackaux(/;"	d
luaD_growstack	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f	signature:(lua_State *L, int n)
luaD_growstack	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_growstack (lua_State *L, int n);$/;"	p	signature:(lua_State *L, int n)
luaD_hook	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f	signature:(lua_State *L, int event, int line)
luaD_hook	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_hook (lua_State *L, int event, int line);$/;"	p	signature:(lua_State *L, int event, int line)
luaD_inctop	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_inctop (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaD_inctop	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_inctop (lua_State *L);$/;"	p	signature:(lua_State *L)
luaD_pcall	.//script/lua/lua-5.3.4/src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f	signature:(lua_State *L, Pfunc func, void *u, ptrdiff_t old_top, ptrdiff_t ef)
luaD_pcall	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	p	signature:(lua_State *L, Pfunc func, void *u, ptrdiff_t oldtop, ptrdiff_t ef)
luaD_poscall	.//script/lua/lua-5.3.4/src/ldo.c	/^int luaD_poscall (lua_State *L, CallInfo *ci, StkId firstResult, int nres) {$/;"	f	signature:(lua_State *L, CallInfo *ci, StkId firstResult, int nres)
luaD_poscall	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC int luaD_poscall (lua_State *L, CallInfo *ci, StkId firstResult,$/;"	p	signature:(lua_State *L, CallInfo *ci, StkId firstResult, int nres)
luaD_precall	.//script/lua/lua-5.3.4/src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f	signature:(lua_State *L, StkId func, int nresults)
luaD_precall	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC int luaD_precall (lua_State *L, StkId func, int nresults);$/;"	p	signature:(lua_State *L, StkId func, int nresults)
luaD_protectedparser	.//script/lua/lua-5.3.4/src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f	signature:(lua_State *L, ZIO *z, const char *name, const char *mode)
luaD_protectedparser	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	p	signature:(lua_State *L, ZIO *z, const char *name, const char *mode)
luaD_rawrunprotected	.//script/lua/lua-5.3.4/src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f	signature:(lua_State *L, Pfunc f, void *ud)
luaD_rawrunprotected	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud);$/;"	p	signature:(lua_State *L, Pfunc f, void *ud)
luaD_reallocstack	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f	signature:(lua_State *L, int newsize)
luaD_reallocstack	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_reallocstack (lua_State *L, int newsize);$/;"	p	signature:(lua_State *L, int newsize)
luaD_shrinkstack	.//script/lua/lua-5.3.4/src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaD_shrinkstack	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC void luaD_shrinkstack (lua_State *L);$/;"	p	signature:(lua_State *L)
luaD_throw	.//script/lua/lua-5.3.4/src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f	signature:(lua_State *L, int errcode)
luaD_throw	.//script/lua/lua-5.3.4/src/ldo.h	/^LUAI_FUNC l_noret luaD_throw (lua_State *L, int errcode);$/;"	p	signature:(lua_State *L, int errcode)
luaE_extendCI	.//script/lua/lua-5.3.4/src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaE_extendCI	.//script/lua/lua-5.3.4/src/lstate.h	/^LUAI_FUNC CallInfo *luaE_extendCI (lua_State *L);$/;"	p	signature:(lua_State *L)
luaE_freeCI	.//script/lua/lua-5.3.4/src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaE_freeCI	.//script/lua/lua-5.3.4/src/lstate.h	/^LUAI_FUNC void luaE_freeCI (lua_State *L);$/;"	p	signature:(lua_State *L)
luaE_freethread	.//script/lua/lua-5.3.4/src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f	signature:(lua_State *L, lua_State *L1)
luaE_freethread	.//script/lua/lua-5.3.4/src/lstate.h	/^LUAI_FUNC void luaE_freethread (lua_State *L, lua_State *L1);$/;"	p	signature:(lua_State *L, lua_State *L1)
luaE_setdebt	.//script/lua/lua-5.3.4/src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f	signature:(global_State *g, l_mem debt)
luaE_setdebt	.//script/lua/lua-5.3.4/src/lstate.h	/^LUAI_FUNC void luaE_setdebt (global_State *g, l_mem debt);$/;"	p	signature:(global_State *g, l_mem debt)
luaE_shrinkCI	.//script/lua/lua-5.3.4/src/lstate.c	/^void luaE_shrinkCI (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaE_shrinkCI	.//script/lua/lua-5.3.4/src/lstate.h	/^LUAI_FUNC void luaE_shrinkCI (lua_State *L);$/;"	p	signature:(lua_State *L)
luaF_close	.//script/lua/lua-5.3.4/src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f	signature:(lua_State *L, StkId level)
luaF_close	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC void luaF_close (lua_State *L, StkId level);$/;"	p	signature:(lua_State *L, StkId level)
luaF_findupval	.//script/lua/lua-5.3.4/src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f	signature:(lua_State *L, StkId level)
luaF_findupval	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC UpVal *luaF_findupval (lua_State *L, StkId level);$/;"	p	signature:(lua_State *L, StkId level)
luaF_freeproto	.//script/lua/lua-5.3.4/src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f	signature:(lua_State *L, Proto *f)
luaF_freeproto	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC void luaF_freeproto (lua_State *L, Proto *f);$/;"	p	signature:(lua_State *L, Proto *f)
luaF_getlocalname	.//script/lua/lua-5.3.4/src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f	signature:(const Proto *f, int local_number, int pc)
luaF_getlocalname	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC const char *luaF_getlocalname (const Proto *func, int local_number,$/;"	p	signature:(const Proto *func, int local_number, int pc)
luaF_initupvals	.//script/lua/lua-5.3.4/src/lfunc.c	/^void luaF_initupvals (lua_State *L, LClosure *cl) {$/;"	f	signature:(lua_State *L, LClosure *cl)
luaF_initupvals	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC void luaF_initupvals (lua_State *L, LClosure *cl);$/;"	p	signature:(lua_State *L, LClosure *cl)
luaF_newCclosure	.//script/lua/lua-5.3.4/src/lfunc.c	/^CClosure *luaF_newCclosure (lua_State *L, int n) {$/;"	f	signature:(lua_State *L, int n)
luaF_newCclosure	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC CClosure *luaF_newCclosure (lua_State *L, int nelems);$/;"	p	signature:(lua_State *L, int nelems)
luaF_newLclosure	.//script/lua/lua-5.3.4/src/lfunc.c	/^LClosure *luaF_newLclosure (lua_State *L, int n) {$/;"	f	signature:(lua_State *L, int n)
luaF_newLclosure	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC LClosure *luaF_newLclosure (lua_State *L, int nelems);$/;"	p	signature:(lua_State *L, int nelems)
luaF_newproto	.//script/lua/lua-5.3.4/src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaF_newproto	.//script/lua/lua-5.3.4/src/lfunc.h	/^LUAI_FUNC Proto *luaF_newproto (lua_State *L);$/;"	p	signature:(lua_State *L)
luaG_addinfo	.//script/lua/lua-5.3.4/src/ldebug.c	/^const char *luaG_addinfo (lua_State *L, const char *msg, TString *src,$/;"	f	signature:(lua_State *L, const char *msg, TString *src, int line)
luaG_addinfo	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC const char *luaG_addinfo (lua_State *L, const char *msg,$/;"	p	signature:(lua_State *L, const char *msg, TString *src, int line)
luaG_concaterror	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2)
luaG_concaterror	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_concaterror (lua_State *L, const TValue *p1,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2)
luaG_errormsg	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaG_errormsg	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_errormsg (lua_State *L);$/;"	p	signature:(lua_State *L)
luaG_opinterror	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_opinterror (lua_State *L, const TValue *p1,$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2, const char *msg)
luaG_opinterror	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_opinterror (lua_State *L, const TValue *p1,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2, const char *msg)
luaG_ordererror	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2)
luaG_ordererror	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_ordererror (lua_State *L, const TValue *p1,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2)
luaG_runerror	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f	signature:(lua_State *L, const char *fmt, ...)
luaG_runerror	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_runerror (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
luaG_tointerror	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_tointerror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2)
luaG_tointerror	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_tointerror (lua_State *L, const TValue *p1,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2)
luaG_traceexec	.//script/lua/lua-5.3.4/src/ldebug.c	/^void luaG_traceexec (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaG_traceexec	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC void luaG_traceexec (lua_State *L);$/;"	p	signature:(lua_State *L)
luaG_typeerror	.//script/lua/lua-5.3.4/src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f	signature:(lua_State *L, const TValue *o, const char *op)
luaG_typeerror	.//script/lua/lua-5.3.4/src/ldebug.h	/^LUAI_FUNC l_noret luaG_typeerror (lua_State *L, const TValue *o,$/;"	p	signature:(lua_State *L, const TValue *o, const char *opname)
luaH_free	.//script/lua/lua-5.3.4/src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f	signature:(lua_State *L, Table *t)
luaH_free	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC void luaH_free (lua_State *L, Table *t);$/;"	p	signature:(lua_State *L, Table *t)
luaH_get	.//script/lua/lua-5.3.4/src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f	signature:(Table *t, const TValue *key)
luaH_get	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC const TValue *luaH_get (Table *t, const TValue *key);$/;"	p	signature:(Table *t, const TValue *key)
luaH_getint	.//script/lua/lua-5.3.4/src/ltable.c	/^const TValue *luaH_getint (Table *t, lua_Integer key) {$/;"	f	signature:(Table *t, lua_Integer key)
luaH_getint	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC const TValue *luaH_getint (Table *t, lua_Integer key);$/;"	p	signature:(Table *t, lua_Integer key)
luaH_getn	.//script/lua/lua-5.3.4/src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f	signature:(Table *t)
luaH_getn	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC int luaH_getn (Table *t);$/;"	p	signature:(Table *t)
luaH_getshortstr	.//script/lua/lua-5.3.4/src/ltable.c	/^const TValue *luaH_getshortstr (Table *t, TString *key) {$/;"	f	signature:(Table *t, TString *key)
luaH_getshortstr	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC const TValue *luaH_getshortstr (Table *t, TString *key);$/;"	p	signature:(Table *t, TString *key)
luaH_getstr	.//script/lua/lua-5.3.4/src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f	signature:(Table *t, TString *key)
luaH_getstr	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC const TValue *luaH_getstr (Table *t, TString *key);$/;"	p	signature:(Table *t, TString *key)
luaH_isdummy	.//script/lua/lua-5.3.4/src/ltable.c	/^int luaH_isdummy (const Table *t) { return isdummy(t); }$/;"	f	signature:(const Table *t)
luaH_isdummy	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC int luaH_isdummy (const Table *t);$/;"	p	signature:(const Table *t)
luaH_mainposition	.//script/lua/lua-5.3.4/src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f	signature:(const Table *t, const TValue *key)
luaH_mainposition	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC Node *luaH_mainposition (const Table *t, const TValue *key);$/;"	p	signature:(const Table *t, const TValue *key)
luaH_new	.//script/lua/lua-5.3.4/src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaH_new	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC Table *luaH_new (lua_State *L);$/;"	p	signature:(lua_State *L)
luaH_newkey	.//script/lua/lua-5.3.4/src/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f	signature:(lua_State *L, Table *t, const TValue *key)
luaH_newkey	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key);$/;"	p	signature:(lua_State *L, Table *t, const TValue *key)
luaH_next	.//script/lua/lua-5.3.4/src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f	signature:(lua_State *L, Table *t, StkId key)
luaH_next	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC int luaH_next (lua_State *L, Table *t, StkId key);$/;"	p	signature:(lua_State *L, Table *t, StkId key)
luaH_resize	.//script/lua/lua-5.3.4/src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, unsigned int nasize,$/;"	f	signature:(lua_State *L, Table *t, unsigned int nasize, unsigned int nhsize)
luaH_resize	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC void luaH_resize (lua_State *L, Table *t, unsigned int nasize,$/;"	p	signature:(lua_State *L, Table *t, unsigned int nasize, unsigned int nhsize)
luaH_resizearray	.//script/lua/lua-5.3.4/src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, unsigned int nasize) {$/;"	f	signature:(lua_State *L, Table *t, unsigned int nasize)
luaH_resizearray	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC void luaH_resizearray (lua_State *L, Table *t, unsigned int nasize);$/;"	p	signature:(lua_State *L, Table *t, unsigned int nasize)
luaH_set	.//script/lua/lua-5.3.4/src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f	signature:(lua_State *L, Table *t, const TValue *key)
luaH_set	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC TValue *luaH_set (lua_State *L, Table *t, const TValue *key);$/;"	p	signature:(lua_State *L, Table *t, const TValue *key)
luaH_setint	.//script/lua/lua-5.3.4/src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, lua_Integer key, TValue *value) {$/;"	f	signature:(lua_State *L, Table *t, lua_Integer key, TValue *value)
luaH_setint	.//script/lua/lua-5.3.4/src/ltable.h	/^LUAI_FUNC void luaH_setint (lua_State *L, Table *t, lua_Integer key,$/;"	p	signature:(lua_State *L, Table *t, lua_Integer key, TValue *value)
luaK_checkstack	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f	signature:(FuncState *fs, int n)
luaK_checkstack	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_checkstack (FuncState *fs, int n);$/;"	p	signature:(FuncState *fs, int n)
luaK_code	.//script/lua/lua-5.3.4/src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:	signature:(FuncState *fs, Instruction i)
luaK_codeABC	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f	signature:(FuncState *fs, OpCode o, int a, int b, int c)
luaK_codeABC	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);$/;"	p	signature:(FuncState *fs, OpCode o, int A, int B, int C)
luaK_codeABx	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f	signature:(FuncState *fs, OpCode o, int a, unsigned int bc)
luaK_codeABx	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);$/;"	p	signature:(FuncState *fs, OpCode o, int A, unsigned int Bx)
luaK_codeAsBx	.//script/lua/lua-5.3.4/src/lcode.h	/^#define luaK_codeAsBx(/;"	d
luaK_codek	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f	signature:(FuncState *fs, int reg, int k)
luaK_codek	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_codek (FuncState *fs, int reg, int k);$/;"	p	signature:(FuncState *fs, int reg, int k)
luaK_concat	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f	signature:(FuncState *fs, int *l1, int l2)
luaK_concat	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_concat (FuncState *fs, int *l1, int l2);$/;"	p	signature:(FuncState *fs, int *l1, int l2)
luaK_dischargevars	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_dischargevars	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_dischargevars (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_exp2RK	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_exp2RK	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_exp2RK (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_exp2anyreg	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_exp2anyreg	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_exp2anyreg (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_exp2anyregup	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_exp2anyregup	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_exp2anyregup (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_exp2nextreg	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_exp2nextreg	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_exp2nextreg (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_exp2val	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_exp2val	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_exp2val (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_fixline	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f	signature:(FuncState *fs, int line)
luaK_fixline	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_fixline (FuncState *fs, int line);$/;"	p	signature:(FuncState *fs, int line)
luaK_getlabel	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f	signature:(FuncState *fs)
luaK_getlabel	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_getlabel (FuncState *fs);$/;"	p	signature:(FuncState *fs)
luaK_goiffalse	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_goiffalse	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_goiffalse (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_goiftrue	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_goiftrue	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_goiftrue (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_indexed	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f	signature:(FuncState *fs, expdesc *t, expdesc *k)
luaK_indexed	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k);$/;"	p	signature:(FuncState *fs, expdesc *t, expdesc *k)
luaK_infix	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f	signature:(FuncState *fs, BinOpr op, expdesc *v)
luaK_infix	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_infix (FuncState *fs, BinOpr op, expdesc *v);$/;"	p	signature:(FuncState *fs, BinOpr op, expdesc *v)
luaK_intK	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_intK (FuncState *fs, lua_Integer n) {$/;"	f	signature:(FuncState *fs, lua_Integer n)
luaK_intK	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_intK (FuncState *fs, lua_Integer n);$/;"	p	signature:(FuncState *fs, lua_Integer n)
luaK_jump	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f	signature:(FuncState *fs)
luaK_jump	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_jump (FuncState *fs);$/;"	p	signature:(FuncState *fs)
luaK_jumpto	.//script/lua/lua-5.3.4/src/lcode.h	/^#define luaK_jumpto(/;"	d
luaK_nil	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f	signature:(FuncState *fs, int from, int n)
luaK_nil	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_nil (FuncState *fs, int from, int n);$/;"	p	signature:(FuncState *fs, int from, int n)
luaK_numberK	.//script/lua/lua-5.3.4/src/lcode.c	/^static int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f	file:	signature:(FuncState *fs, lua_Number r)
luaK_patchclose	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f	signature:(FuncState *fs, int list, int level)
luaK_patchclose	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_patchclose (FuncState *fs, int list, int level);$/;"	p	signature:(FuncState *fs, int list, int level)
luaK_patchlist	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f	signature:(FuncState *fs, int list, int target)
luaK_patchlist	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_patchlist (FuncState *fs, int list, int target);$/;"	p	signature:(FuncState *fs, int list, int target)
luaK_patchtohere	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f	signature:(FuncState *fs, int list)
luaK_patchtohere	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_patchtohere (FuncState *fs, int list);$/;"	p	signature:(FuncState *fs, int list)
luaK_posfix	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f	signature:(FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2, int line)
luaK_posfix	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1,$/;"	p	signature:(FuncState *fs, BinOpr op, expdesc *v1, expdesc *v2, int line)
luaK_prefix	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f	signature:(FuncState *fs, UnOpr op, expdesc *e, int line)
luaK_prefix	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_prefix (FuncState *fs, UnOpr op, expdesc *v, int line);$/;"	p	signature:(FuncState *fs, UnOpr op, expdesc *v, int line)
luaK_reserveregs	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f	signature:(FuncState *fs, int n)
luaK_reserveregs	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_reserveregs (FuncState *fs, int n);$/;"	p	signature:(FuncState *fs, int n)
luaK_ret	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f	signature:(FuncState *fs, int first, int nret)
luaK_ret	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_ret (FuncState *fs, int first, int nret);$/;"	p	signature:(FuncState *fs, int first, int nret)
luaK_self	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f	signature:(FuncState *fs, expdesc *e, expdesc *key)
luaK_self	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_self (FuncState *fs, expdesc *e, expdesc *key);$/;"	p	signature:(FuncState *fs, expdesc *e, expdesc *key)
luaK_setlist	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f	signature:(FuncState *fs, int base, int nelems, int tostore)
luaK_setlist	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_setlist (FuncState *fs, int base, int nelems, int tostore);$/;"	p	signature:(FuncState *fs, int base, int nelems, int tostore)
luaK_setmultret	.//script/lua/lua-5.3.4/src/lcode.h	/^#define luaK_setmultret(/;"	d
luaK_setoneret	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f	signature:(FuncState *fs, expdesc *e)
luaK_setoneret	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_setoneret (FuncState *fs, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *e)
luaK_setreturns	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f	signature:(FuncState *fs, expdesc *e, int nresults)
luaK_setreturns	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_setreturns (FuncState *fs, expdesc *e, int nresults);$/;"	p	signature:(FuncState *fs, expdesc *e, int nresults)
luaK_storevar	.//script/lua/lua-5.3.4/src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f	signature:(FuncState *fs, expdesc *var, expdesc *ex)
luaK_storevar	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC void luaK_storevar (FuncState *fs, expdesc *var, expdesc *e);$/;"	p	signature:(FuncState *fs, expdesc *var, expdesc *e)
luaK_stringK	.//script/lua/lua-5.3.4/src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f	signature:(FuncState *fs, TString *s)
luaK_stringK	.//script/lua/lua-5.3.4/src/lcode.h	/^LUAI_FUNC int luaK_stringK (FuncState *fs, TString *s);$/;"	p	signature:(FuncState *fs, TString *s)
luaL_Buffer	.//script/lua/lua-5.3.4/src/lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	.//script/lua/lua-5.3.4/src/lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Buffer::L	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::b	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  char *b;  \/* buffer address *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::initb	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  char initb[LUAL_BUFFERSIZE];  \/* initial buffer *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::n	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Buffer::size	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer	access:public
luaL_Reg	.//script/lua/lua-5.3.4/src/lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	.//script/lua/lua-5.3.4/src/lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Reg::func	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	access:public
luaL_Reg::name	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	access:public
luaL_Stream	.//script/lua/lua-5.3.4/src/lauxlib.h	/^typedef struct luaL_Stream {$/;"	s
luaL_Stream	.//script/lua/lua-5.3.4/src/lauxlib.h	/^} luaL_Stream;$/;"	t	typeref:struct:luaL_Stream
luaL_Stream::closef	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  lua_CFunction closef;  \/* to close stream (NULL for closed streams) *\/$/;"	m	struct:luaL_Stream	access:public
luaL_Stream::f	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  FILE *f;  \/* stream (NULL for incompletely created streams) *\/$/;"	m	struct:luaL_Stream	access:public
luaL_addchar	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_addchar(/;"	d
luaL_addlstring	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f	signature:(luaL_Buffer *B, const char *s, size_t l)
luaL_addlstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	p	signature:(luaL_Buffer *B, const char *s, size_t l)
luaL_addsize	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_addsize(/;"	d
luaL_addstring	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f	signature:(luaL_Buffer *B, const char *s)
luaL_addstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_addstring) (luaL_Buffer *B, const char *s);$/;"	p	signature:(luaL_Buffer *B, const char *s)
luaL_addvalue	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f	signature:(luaL_Buffer *B)
luaL_addvalue	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_addvalue) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_argcheck	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_argcheck(/;"	d
luaL_argerror	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int arg, const char *extramsg) {$/;"	f	signature:(lua_State *L, int arg, const char *extramsg)
luaL_argerror	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_argerror) (lua_State *L, int arg, const char *extramsg);$/;"	p	signature:(lua_State *L, int arg, const char *extramsg)
luaL_buffinit	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f	signature:(lua_State *L, luaL_Buffer *B)
luaL_buffinit	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	p	signature:(lua_State *L, luaL_Buffer *B)
luaL_buffinitsize	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f	signature:(lua_State *L, luaL_Buffer *B, size_t sz)
luaL_buffinitsize	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API char *(luaL_buffinitsize) (lua_State *L, luaL_Buffer *B, size_t sz);$/;"	p	signature:(lua_State *L, luaL_Buffer *B, size_t sz)
luaL_callmeta	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f	signature:(lua_State *L, int obj, const char *event)
luaL_callmeta	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_callmeta) (lua_State *L, int obj, const char *e);$/;"	p	signature:(lua_State *L, int obj, const char *e)
luaL_checkany	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int arg) {$/;"	f	signature:(lua_State *L, int arg)
luaL_checkany	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_checkany) (lua_State *L, int arg);$/;"	p	signature:(lua_State *L, int arg)
luaL_checkint	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_checkint(/;"	d
luaL_checkinteger	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int arg) {$/;"	f	signature:(lua_State *L, int arg)
luaL_checkinteger	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API lua_Integer (luaL_checkinteger) (lua_State *L, int arg);$/;"	p	signature:(lua_State *L, int arg)
luaL_checklong	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_checklong(/;"	d
luaL_checklstring	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {$/;"	f	signature:(lua_State *L, int arg, size_t *len)
luaL_checklstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API const char *(luaL_checklstring) (lua_State *L, int arg,$/;"	p	signature:(lua_State *L, int arg, size_t *l)
luaL_checknumber	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int arg) {$/;"	f	signature:(lua_State *L, int arg)
luaL_checknumber	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API lua_Number (luaL_checknumber) (lua_State *L, int arg);$/;"	p	signature:(lua_State *L, int arg)
luaL_checkoption	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int arg, const char *def,$/;"	f	signature:(lua_State *L, int arg, const char *def, const char *const lst[])
luaL_checkoption	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_checkoption) (lua_State *L, int arg, const char *def,$/;"	p	signature:(lua_State *L, int arg, const char *def, const char *const lst[])
luaL_checkstack	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f	signature:(lua_State *L, int space, const char *msg)
luaL_checkstack	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_checkstack) (lua_State *L, int sz, const char *msg);$/;"	p	signature:(lua_State *L, int sz, const char *msg)
luaL_checkstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_checkstring(/;"	d
luaL_checktype	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int arg, int t) {$/;"	f	signature:(lua_State *L, int arg, int t)
luaL_checktype	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_checktype) (lua_State *L, int arg, int t);$/;"	p	signature:(lua_State *L, int arg, int t)
luaL_checkudata	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f	signature:(lua_State *L, int ud, const char *tname)
luaL_checkudata	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void *(luaL_checkudata) (lua_State *L, int ud, const char *tname);$/;"	p	signature:(lua_State *L, int ud, const char *tname)
luaL_checkunsigned	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_checkunsigned(/;"	d
luaL_checkversion	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_checkversion(/;"	d
luaL_checkversion_	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver, size_t sz) {$/;"	f	signature:(lua_State *L, lua_Number ver, size_t sz)
luaL_checkversion_	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_checkversion_) (lua_State *L, lua_Number ver, size_t sz);$/;"	p	signature:(lua_State *L, lua_Number ver, size_t sz)
luaL_dofile	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_dofile(/;"	d
luaL_dostring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_dostring(/;"	d
luaL_error	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f	signature:(lua_State *L, const char *fmt, ...)
luaL_error	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_error) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
luaL_execresult	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f	signature:(lua_State *L, int stat)
luaL_execresult	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_execresult) (lua_State *L, int stat);$/;"	p	signature:(lua_State *L, int stat)
luaL_fileresult	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f	signature:(lua_State *L, int stat, const char *fname)
luaL_fileresult	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_fileresult) (lua_State *L, int stat, const char *fname);$/;"	p	signature:(lua_State *L, int stat, const char *fname)
luaL_findtable	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:	signature:(lua_State *L, int idx, const char *fname, int szhint)
luaL_getmetafield	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f	signature:(lua_State *L, int obj, const char *event)
luaL_getmetafield	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_getmetafield) (lua_State *L, int obj, const char *e);$/;"	p	signature:(lua_State *L, int obj, const char *e)
luaL_getmetatable	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_getmetatable(/;"	d
luaL_getsubtable	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f	signature:(lua_State *L, int idx, const char *fname)
luaL_getsubtable	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_getsubtable) (lua_State *L, int idx, const char *fname);$/;"	p	signature:(lua_State *L, int idx, const char *fname)
luaL_gsub	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f	signature:(lua_State *L, const char *s, const char *p, const char *r)
luaL_gsub	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API const char *(luaL_gsub) (lua_State *L, const char *s, const char *p,$/;"	p	signature:(lua_State *L, const char *s, const char *p, const char *r)
luaL_len	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_len (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
luaL_len	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API lua_Integer (luaL_len) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
luaL_loadbuffer	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_loadbuffer(/;"	d
luaL_loadbufferx	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f	signature:(lua_State *L, const char *buff, size_t size, const char *name, const char *mode)
luaL_loadbufferx	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_loadbufferx) (lua_State *L, const char *buff, size_t sz,$/;"	p	signature:(lua_State *L, const char *buff, size_t sz, const char *name, const char *mode)
luaL_loadfile	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_loadfile(/;"	d
luaL_loadfilex	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f	signature:(lua_State *L, const char *filename, const char *mode)
luaL_loadfilex	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_loadfilex) (lua_State *L, const char *filename,$/;"	p	signature:(lua_State *L, const char *filename, const char *mode)
luaL_loadstring	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f	signature:(lua_State *L, const char *s)
luaL_loadstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
luaL_newlib	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_newlib(/;"	d
luaL_newlibtable	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_newlibtable(/;"	d
luaL_newmetatable	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f	signature:(lua_State *L, const char *tname)
luaL_newmetatable	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int   (luaL_newmetatable) (lua_State *L, const char *tname);$/;"	p	signature:(lua_State *L, const char *tname)
luaL_newstate	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f	signature:(void)
luaL_newstate	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API lua_State *(luaL_newstate) (void);$/;"	p	signature:(void)
luaL_openlib	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f	signature:(lua_State *L, const char *libname, const luaL_Reg *l, int nup)
luaL_openlib	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_openlib) (lua_State *L, const char *libname,$/;"	p	signature:(lua_State *L, const char *libname, const luaL_Reg *l, int nup)
luaL_openlibs	.//script/lua/lua-5.3.4/src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaL_openlibs	.//script/lua/lua-5.3.4/src/lualib.h	/^LUALIB_API void (luaL_openlibs) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaL_opt	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_opt(/;"	d
luaL_optint	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_optint(/;"	d
luaL_optinteger	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int arg,$/;"	f	signature:(lua_State *L, int arg, lua_Integer def)
luaL_optinteger	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API lua_Integer (luaL_optinteger) (lua_State *L, int arg,$/;"	p	signature:(lua_State *L, int arg, lua_Integer def)
luaL_optlong	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_optlong(/;"	d
luaL_optlstring	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int arg,$/;"	f	signature:(lua_State *L, int arg, const char *def, size_t *len)
luaL_optlstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API const char *(luaL_optlstring) (lua_State *L, int arg,$/;"	p	signature:(lua_State *L, int arg, const char *def, size_t *l)
luaL_optnumber	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int arg, lua_Number def) {$/;"	f	signature:(lua_State *L, int arg, lua_Number def)
luaL_optnumber	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API lua_Number (luaL_optnumber) (lua_State *L, int arg, lua_Number def);$/;"	p	signature:(lua_State *L, int arg, lua_Number def)
luaL_optstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_optstring(/;"	d
luaL_optunsigned	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_optunsigned(/;"	d
luaL_prepbuffer	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_prepbuffer(/;"	d
luaL_prepbuffsize	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f	signature:(luaL_Buffer *B, size_t sz)
luaL_prepbuffsize	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API char *(luaL_prepbuffsize) (luaL_Buffer *B, size_t sz);$/;"	p	signature:(luaL_Buffer *B, size_t sz)
luaL_pushmodule	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f	signature:(lua_State *L, const char *modname, int sizehint)
luaL_pushmodule	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_pushmodule) (lua_State *L, const char *modname,$/;"	p	signature:(lua_State *L, const char *modname, int sizehint)
luaL_pushresult	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f	signature:(luaL_Buffer *B)
luaL_pushresult	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_pushresult) (luaL_Buffer *B);$/;"	p	signature:(luaL_Buffer *B)
luaL_pushresultsize	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f	signature:(luaL_Buffer *B, size_t sz)
luaL_pushresultsize	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_pushresultsize) (luaL_Buffer *B, size_t sz);$/;"	p	signature:(luaL_Buffer *B, size_t sz)
luaL_ref	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f	signature:(lua_State *L, int t)
luaL_ref	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API int (luaL_ref) (lua_State *L, int t);$/;"	p	signature:(lua_State *L, int t)
luaL_register	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_register(/;"	d
luaL_requiref	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f	signature:(lua_State *L, const char *modname, lua_CFunction openf, int glb)
luaL_requiref	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_requiref) (lua_State *L, const char *modname,$/;"	p	signature:(lua_State *L, const char *modname, lua_CFunction openf, int glb)
luaL_setfuncs	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f	signature:(lua_State *L, const luaL_Reg *l, int nup)
luaL_setfuncs	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_setfuncs) (lua_State *L, const luaL_Reg *l, int nup);$/;"	p	signature:(lua_State *L, const luaL_Reg *l, int nup)
luaL_setmetatable	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f	signature:(lua_State *L, const char *tname)
luaL_setmetatable	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void  (luaL_setmetatable) (lua_State *L, const char *tname);$/;"	p	signature:(lua_State *L, const char *tname)
luaL_testudata	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f	signature:(lua_State *L, int ud, const char *tname)
luaL_testudata	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void *(luaL_testudata) (lua_State *L, int ud, const char *tname);$/;"	p	signature:(lua_State *L, int ud, const char *tname)
luaL_tolstring	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f	signature:(lua_State *L, int idx, size_t *len)
luaL_tolstring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API const char *(luaL_tolstring) (lua_State *L, int idx, size_t *len);$/;"	p	signature:(lua_State *L, int idx, size_t *len)
luaL_traceback	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f	signature:(lua_State *L, lua_State *L1, const char *msg, int level)
luaL_traceback	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_traceback) (lua_State *L, lua_State *L1,$/;"	p	signature:(lua_State *L, lua_State *L1, const char *msg, int level)
luaL_typename	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define luaL_typename(/;"	d
luaL_unref	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f	signature:(lua_State *L, int t, int ref)
luaL_unref	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_unref) (lua_State *L, int t, int ref);$/;"	p	signature:(lua_State *L, int t, int ref)
luaL_where	.//script/lua/lua-5.3.4/src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f	signature:(lua_State *L, int level)
luaL_where	.//script/lua/lua-5.3.4/src/lauxlib.h	/^LUALIB_API void (luaL_where) (lua_State *L, int lvl);$/;"	p	signature:(lua_State *L, int lvl)
luaM_free	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_free(/;"	d
luaM_freearray	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_freearray(/;"	d
luaM_freemem	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_freemem(/;"	d
luaM_growaux_	.//script/lua/lua-5.3.4/src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f	signature:(lua_State *L, void *block, int *size, size_t size_elems, int limit, const char *what)
luaM_growaux_	.//script/lua/lua-5.3.4/src/lmem.h	/^LUAI_FUNC void *luaM_growaux_ (lua_State *L, void *block, int *size,$/;"	p	signature:(lua_State *L, void *block, int *size, size_t size_elem, int limit, const char *what)
luaM_growvector	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_growvector(/;"	d
luaM_malloc	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_malloc(/;"	d
luaM_new	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_new(/;"	d
luaM_newobject	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_newobject(/;"	d
luaM_newvector	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_newvector(/;"	d
luaM_realloc_	.//script/lua/lua-5.3.4/src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f	signature:(lua_State *L, void *block, size_t osize, size_t nsize)
luaM_realloc_	.//script/lua/lua-5.3.4/src/lmem.h	/^LUAI_FUNC void *luaM_realloc_ (lua_State *L, void *block, size_t oldsize,$/;"	p	signature:(lua_State *L, void *block, size_t oldsize, size_t size)
luaM_reallocv	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_reallocv(/;"	d
luaM_reallocvchar	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_reallocvchar(/;"	d
luaM_reallocvector	.//script/lua/lua-5.3.4/src/lmem.h	/^#define luaM_reallocvector(/;"	d
luaM_toobig	.//script/lua/lua-5.3.4/src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaM_toobig	.//script/lua/lua-5.3.4/src/lmem.h	/^LUAI_FUNC l_noret luaM_toobig (lua_State *L);$/;"	p	signature:(lua_State *L)
luaO_arith	.//script/lua/lua-5.3.4/src/lobject.c	/^void luaO_arith (lua_State *L, int op, const TValue *p1, const TValue *p2,$/;"	f	signature:(lua_State *L, int op, const TValue *p1, const TValue *p2, TValue *res)
luaO_arith	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC void luaO_arith (lua_State *L, int op, const TValue *p1,$/;"	p	signature:(lua_State *L, int op, const TValue *p1, const TValue *p2, TValue *res)
luaO_ceillog2	.//script/lua/lua-5.3.4/src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f	signature:(unsigned int x)
luaO_ceillog2	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC int luaO_ceillog2 (unsigned int x);$/;"	p	signature:(unsigned int x)
luaO_chunkid	.//script/lua/lua-5.3.4/src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f	signature:(char *out, const char *source, size_t bufflen)
luaO_chunkid	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC void luaO_chunkid (char *out, const char *source, size_t len);$/;"	p	signature:(char *out, const char *source, size_t len)
luaO_fb2int	.//script/lua/lua-5.3.4/src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f	signature:(int x)
luaO_fb2int	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC int luaO_fb2int (int x);$/;"	p	signature:(int x)
luaO_hexavalue	.//script/lua/lua-5.3.4/src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f	signature:(int c)
luaO_hexavalue	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC int luaO_hexavalue (int c);$/;"	p	signature:(int c)
luaO_int2fb	.//script/lua/lua-5.3.4/src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f	signature:(unsigned int x)
luaO_int2fb	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC int luaO_int2fb (unsigned int x);$/;"	p	signature:(unsigned int x)
luaO_nilobject	.//script/lua/lua-5.3.4/src/lobject.h	/^#define luaO_nilobject	/;"	d
luaO_nilobject_	.//script/lua/lua-5.3.4/src/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_nilobject_	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_DDEC const TValue luaO_nilobject_;$/;"	v
luaO_pushfstring	.//script/lua/lua-5.3.4/src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f	signature:(lua_State *L, const char *fmt, ...)
luaO_pushfstring	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC const char *luaO_pushfstring (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
luaO_pushvfstring	.//script/lua/lua-5.3.4/src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f	signature:(lua_State *L, const char *fmt, va_list argp)
luaO_pushvfstring	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC const char *luaO_pushvfstring (lua_State *L, const char *fmt,$/;"	p	signature:(lua_State *L, const char *fmt, va_list argp)
luaO_str2num	.//script/lua/lua-5.3.4/src/lobject.c	/^size_t luaO_str2num (const char *s, TValue *o) {$/;"	f	signature:(const char *s, TValue *o)
luaO_str2num	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC size_t luaO_str2num (const char *s, TValue *o);$/;"	p	signature:(const char *s, TValue *o)
luaO_tostring	.//script/lua/lua-5.3.4/src/lobject.c	/^void luaO_tostring (lua_State *L, StkId obj) {$/;"	f	signature:(lua_State *L, StkId obj)
luaO_tostring	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC void luaO_tostring (lua_State *L, StkId obj);$/;"	p	signature:(lua_State *L, StkId obj)
luaO_utf8esc	.//script/lua/lua-5.3.4/src/lobject.c	/^int luaO_utf8esc (char *buff, unsigned long x) {$/;"	f	signature:(char *buff, unsigned long x)
luaO_utf8esc	.//script/lua/lua-5.3.4/src/lobject.h	/^LUAI_FUNC int luaO_utf8esc (char *buff, unsigned long x);$/;"	p	signature:(char *buff, unsigned long x)
luaP_opmodes	.//script/lua/lua-5.3.4/src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opmodes	.//script/lua/lua-5.3.4/src/lopcodes.h	/^LUAI_DDEC const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v
luaP_opnames	.//script/lua/lua-5.3.4/src/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaP_opnames	.//script/lua/lua-5.3.4/src/lopcodes.h	/^LUAI_DDEC const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v
luaReadFormat	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaReadFormat(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
luaReadFormat	.//script/lua/LuaBuffer.h	/^    int32_t luaReadFormat(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
luaReadVector	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaReadVector(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
luaReadVector	.//script/lua/LuaBuffer.h	/^    int32_t luaReadVector(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
luaS_clearcache	.//script/lua/lua-5.3.4/src/lstring.c	/^void luaS_clearcache (global_State *g) {$/;"	f	signature:(global_State *g)
luaS_clearcache	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC void luaS_clearcache (global_State *g);$/;"	p	signature:(global_State *g)
luaS_createlngstrobj	.//script/lua/lua-5.3.4/src/lstring.c	/^TString *luaS_createlngstrobj (lua_State *L, size_t l) {$/;"	f	signature:(lua_State *L, size_t l)
luaS_createlngstrobj	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC TString *luaS_createlngstrobj (lua_State *L, size_t l);$/;"	p	signature:(lua_State *L, size_t l)
luaS_eqlngstr	.//script/lua/lua-5.3.4/src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f	signature:(TString *a, TString *b)
luaS_eqlngstr	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC int luaS_eqlngstr (TString *a, TString *b);$/;"	p	signature:(TString *a, TString *b)
luaS_hash	.//script/lua/lua-5.3.4/src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f	signature:(const char *str, size_t l, unsigned int seed)
luaS_hash	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC unsigned int luaS_hash (const char *str, size_t l, unsigned int seed);$/;"	p	signature:(const char *str, size_t l, unsigned int seed)
luaS_hashlongstr	.//script/lua/lua-5.3.4/src/lstring.c	/^unsigned int luaS_hashlongstr (TString *ts) {$/;"	f	signature:(TString *ts)
luaS_hashlongstr	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC unsigned int luaS_hashlongstr (TString *ts);$/;"	p	signature:(TString *ts)
luaS_init	.//script/lua/lua-5.3.4/src/lstring.c	/^void luaS_init (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaS_init	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC void luaS_init (lua_State *L);$/;"	p	signature:(lua_State *L)
luaS_new	.//script/lua/lua-5.3.4/src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f	signature:(lua_State *L, const char *str)
luaS_new	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC TString *luaS_new (lua_State *L, const char *str);$/;"	p	signature:(lua_State *L, const char *str)
luaS_newliteral	.//script/lua/lua-5.3.4/src/lstring.h	/^#define luaS_newliteral(/;"	d
luaS_newlstr	.//script/lua/lua-5.3.4/src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f	signature:(lua_State *L, const char *str, size_t l)
luaS_newlstr	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC TString *luaS_newlstr (lua_State *L, const char *str, size_t l);$/;"	p	signature:(lua_State *L, const char *str, size_t l)
luaS_newudata	.//script/lua/lua-5.3.4/src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s) {$/;"	f	signature:(lua_State *L, size_t s)
luaS_newudata	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC Udata *luaS_newudata (lua_State *L, size_t s);$/;"	p	signature:(lua_State *L, size_t s)
luaS_remove	.//script/lua/lua-5.3.4/src/lstring.c	/^void luaS_remove (lua_State *L, TString *ts) {$/;"	f	signature:(lua_State *L, TString *ts)
luaS_remove	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC void luaS_remove (lua_State *L, TString *ts);$/;"	p	signature:(lua_State *L, TString *ts)
luaS_resize	.//script/lua/lua-5.3.4/src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f	signature:(lua_State *L, int newsize)
luaS_resize	.//script/lua/lua-5.3.4/src/lstring.h	/^LUAI_FUNC void luaS_resize (lua_State *L, int newsize);$/;"	p	signature:(lua_State *L, int newsize)
luaSplit	.//script/lua/LuaFunctions.cpp	/^int32_t luaSplit(lua_State* L)$/;"	f	signature:(lua_State* L)
luaSplit	.//script/lua/LuaFunctions.h	/^int32_t luaSplit(lua_State* L);$/;"	p	signature:(lua_State* L)
luaT_callTM	.//script/lua/lua-5.3.4/src/ltm.c	/^void luaT_callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	signature:(lua_State *L, const TValue *f, const TValue *p1, const TValue *p2, TValue *p3, int hasres)
luaT_callTM	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC void luaT_callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	p	signature:(lua_State *L, const TValue *f, const TValue *p1, const TValue *p2, TValue *p3, int hasres)
luaT_callbinTM	.//script/lua/lua-5.3.4/src/ltm.c	/^int luaT_callbinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2, StkId res, TMS event)
luaT_callbinTM	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC int luaT_callbinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2, StkId res, TMS event)
luaT_callorderTM	.//script/lua/lua-5.3.4/src/ltm.c	/^int luaT_callorderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2, TMS event)
luaT_callorderTM	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC int luaT_callorderTM (lua_State *L, const TValue *p1,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2, TMS event)
luaT_gettm	.//script/lua/lua-5.3.4/src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f	signature:(Table *events, TMS event, TString *ename)
luaT_gettm	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC const TValue *luaT_gettm (Table *events, TMS event, TString *ename);$/;"	p	signature:(Table *events, TMS event, TString *ename)
luaT_gettmbyobj	.//script/lua/lua-5.3.4/src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f	signature:(lua_State *L, const TValue *o, TMS event)
luaT_gettmbyobj	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o,$/;"	p	signature:(lua_State *L, const TValue *o, TMS event)
luaT_init	.//script/lua/lua-5.3.4/src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaT_init	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC void luaT_init (lua_State *L);$/;"	p	signature:(lua_State *L)
luaT_objtypename	.//script/lua/lua-5.3.4/src/ltm.c	/^const char *luaT_objtypename (lua_State *L, const TValue *o) {$/;"	f	signature:(lua_State *L, const TValue *o)
luaT_objtypename	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC const char *luaT_objtypename (lua_State *L, const TValue *o);$/;"	p	signature:(lua_State *L, const TValue *o)
luaT_trybinTM	.//script/lua/lua-5.3.4/src/ltm.c	/^void luaT_trybinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	signature:(lua_State *L, const TValue *p1, const TValue *p2, StkId res, TMS event)
luaT_trybinTM	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_FUNC void luaT_trybinTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	p	signature:(lua_State *L, const TValue *p1, const TValue *p2, StkId res, TMS event)
luaT_typenames_	.//script/lua/lua-5.3.4/src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaT_typenames_	.//script/lua/lua-5.3.4/src/ltm.h	/^LUAI_DDEC const char *const luaT_typenames_[LUA_TOTALTAGS];$/;"	v
luaU_dump	.//script/lua/lua-5.3.4/src/ldump.c	/^int luaU_dump(lua_State *L, const Proto *f, lua_Writer w, void *data,$/;"	f	signature:(lua_State *L, const Proto *f, lua_Writer w, void *data, int strip)
luaU_dump	.//script/lua/lua-5.3.4/src/lundump.h	/^LUAI_FUNC int luaU_dump (lua_State* L, const Proto* f, lua_Writer w,$/;"	p	signature:(lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)
luaU_print	.//script/lua/lua-5.3.4/src/luac.c	/^#define luaU_print	/;"	d	file:
luaU_undump	.//script/lua/lua-5.3.4/src/lundump.c	/^LClosure *luaU_undump(lua_State *L, ZIO *Z, const char *name) {$/;"	f	signature:(lua_State *L, ZIO *Z, const char *name)
luaU_undump	.//script/lua/lua-5.3.4/src/lundump.h	/^LUAI_FUNC LClosure* luaU_undump (lua_State* L, ZIO* Z, const char* name);$/;"	p	signature:(lua_State* L, ZIO* Z, const char* name)
luaV_concat	.//script/lua/lua-5.3.4/src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f	signature:(lua_State *L, int total)
luaV_concat	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC void luaV_concat (lua_State *L, int total);$/;"	p	signature:(lua_State *L, int total)
luaV_div	.//script/lua/lua-5.3.4/src/lvm.c	/^lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f	signature:(lua_State *L, lua_Integer m, lua_Integer n)
luaV_div	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC lua_Integer luaV_div (lua_State *L, lua_Integer x, lua_Integer y);$/;"	p	signature:(lua_State *L, lua_Integer x, lua_Integer y)
luaV_equalobj	.//script/lua/lua-5.3.4/src/lvm.c	/^int luaV_equalobj (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f	signature:(lua_State *L, const TValue *t1, const TValue *t2)
luaV_equalobj	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC int luaV_equalobj (lua_State *L, const TValue *t1, const TValue *t2);$/;"	p	signature:(lua_State *L, const TValue *t1, const TValue *t2)
luaV_execute	.//script/lua/lua-5.3.4/src/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaV_execute	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC void luaV_execute (lua_State *L);$/;"	p	signature:(lua_State *L)
luaV_fastget	.//script/lua/lua-5.3.4/src/lvm.h	/^#define luaV_fastget(/;"	d
luaV_fastset	.//script/lua/lua-5.3.4/src/lvm.h	/^#define luaV_fastset(/;"	d
luaV_finishOp	.//script/lua/lua-5.3.4/src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaV_finishOp	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC void luaV_finishOp (lua_State *L);$/;"	p	signature:(lua_State *L)
luaV_finishget	.//script/lua/lua-5.3.4/src/lvm.c	/^void luaV_finishget (lua_State *L, const TValue *t, TValue *key, StkId val,$/;"	f	signature:(lua_State *L, const TValue *t, TValue *key, StkId val, const TValue *slot)
luaV_finishget	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC void luaV_finishget (lua_State *L, const TValue *t, TValue *key,$/;"	p	signature:(lua_State *L, const TValue *t, TValue *key, StkId val, const TValue *slot)
luaV_finishset	.//script/lua/lua-5.3.4/src/lvm.c	/^void luaV_finishset (lua_State *L, const TValue *t, TValue *key,$/;"	f	signature:(lua_State *L, const TValue *t, TValue *key, StkId val, const TValue *slot)
luaV_finishset	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC void luaV_finishset (lua_State *L, const TValue *t, TValue *key,$/;"	p	signature:(lua_State *L, const TValue *t, TValue *key, StkId val, const TValue *slot)
luaV_gettable	.//script/lua/lua-5.3.4/src/lvm.h	/^#define luaV_gettable(/;"	d
luaV_lessequal	.//script/lua/lua-5.3.4/src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	signature:(lua_State *L, const TValue *l, const TValue *r)
luaV_lessequal	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r);$/;"	p	signature:(lua_State *L, const TValue *l, const TValue *r)
luaV_lessthan	.//script/lua/lua-5.3.4/src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	signature:(lua_State *L, const TValue *l, const TValue *r)
luaV_lessthan	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r);$/;"	p	signature:(lua_State *L, const TValue *l, const TValue *r)
luaV_mod	.//script/lua/lua-5.3.4/src/lvm.c	/^lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {$/;"	f	signature:(lua_State *L, lua_Integer m, lua_Integer n)
luaV_mod	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC lua_Integer luaV_mod (lua_State *L, lua_Integer x, lua_Integer y);$/;"	p	signature:(lua_State *L, lua_Integer x, lua_Integer y)
luaV_objlen	.//script/lua/lua-5.3.4/src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f	signature:(lua_State *L, StkId ra, const TValue *rb)
luaV_objlen	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC void luaV_objlen (lua_State *L, StkId ra, const TValue *rb);$/;"	p	signature:(lua_State *L, StkId ra, const TValue *rb)
luaV_rawequalobj	.//script/lua/lua-5.3.4/src/lvm.h	/^#define luaV_rawequalobj(/;"	d
luaV_settable	.//script/lua/lua-5.3.4/src/lvm.h	/^#define luaV_settable(/;"	d
luaV_shiftl	.//script/lua/lua-5.3.4/src/lvm.c	/^lua_Integer luaV_shiftl (lua_Integer x, lua_Integer y) {$/;"	f	signature:(lua_Integer x, lua_Integer y)
luaV_shiftl	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC lua_Integer luaV_shiftl (lua_Integer x, lua_Integer y);$/;"	p	signature:(lua_Integer x, lua_Integer y)
luaV_tointeger	.//script/lua/lua-5.3.4/src/lvm.c	/^int luaV_tointeger (const TValue *obj, lua_Integer *p, int mode) {$/;"	f	signature:(const TValue *obj, lua_Integer *p, int mode)
luaV_tointeger	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC int luaV_tointeger (const TValue *obj, lua_Integer *p, int mode);$/;"	p	signature:(const TValue *obj, lua_Integer *p, int mode)
luaV_tonumber_	.//script/lua/lua-5.3.4/src/lvm.c	/^int luaV_tonumber_ (const TValue *obj, lua_Number *n) {$/;"	f	signature:(const TValue *obj, lua_Number *n)
luaV_tonumber_	.//script/lua/lua-5.3.4/src/lvm.h	/^LUAI_FUNC int luaV_tonumber_ (const TValue *obj, lua_Number *n);$/;"	p	signature:(const TValue *obj, lua_Number *n)
luaWriteFormat	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaWriteFormat(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
luaWriteFormat	.//script/lua/LuaBuffer.h	/^    int32_t luaWriteFormat(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
luaWriteVector	.//script/lua/LuaBuffer.cpp	/^int32_t LuaBuffer::luaWriteVector(lua_State* L)$/;"	f	class:LuaBuffer	signature:(lua_State* L)
luaWriteVector	.//script/lua/LuaBuffer.h	/^    int32_t luaWriteVector(lua_State* L);$/;"	p	class:LuaBuffer	access:public	signature:(lua_State* L)
luaX_init	.//script/lua/lua-5.3.4/src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaX_init	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC void luaX_init (lua_State *L);$/;"	p	signature:(lua_State *L)
luaX_lookahead	.//script/lua/lua-5.3.4/src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f	signature:(LexState *ls)
luaX_lookahead	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC int luaX_lookahead (LexState *ls);$/;"	p	signature:(LexState *ls)
luaX_newstring	.//script/lua/lua-5.3.4/src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f	signature:(LexState *ls, const char *str, size_t l)
luaX_newstring	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC TString *luaX_newstring (LexState *ls, const char *str, size_t l);$/;"	p	signature:(LexState *ls, const char *str, size_t l)
luaX_next	.//script/lua/lua-5.3.4/src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f	signature:(LexState *ls)
luaX_next	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC void luaX_next (LexState *ls);$/;"	p	signature:(LexState *ls)
luaX_setinput	.//script/lua/lua-5.3.4/src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f	signature:(lua_State *L, LexState *ls, ZIO *z, TString *source, int firstchar)
luaX_setinput	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC void luaX_setinput (lua_State *L, LexState *ls, ZIO *z,$/;"	p	signature:(lua_State *L, LexState *ls, ZIO *z, TString *source, int firstchar)
luaX_syntaxerror	.//script/lua/lua-5.3.4/src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f	signature:(LexState *ls, const char *msg)
luaX_syntaxerror	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC l_noret luaX_syntaxerror (LexState *ls, const char *s);$/;"	p	signature:(LexState *ls, const char *s)
luaX_token2str	.//script/lua/lua-5.3.4/src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f	signature:(LexState *ls, int token)
luaX_token2str	.//script/lua/lua-5.3.4/src/llex.h	/^LUAI_FUNC const char *luaX_token2str (LexState *ls, int token);$/;"	p	signature:(LexState *ls, int token)
luaX_tokens	.//script/lua/lua-5.3.4/src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	.//script/lua/lua-5.3.4/src/lparser.c	/^LClosure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f	signature:(lua_State *L, ZIO *z, Mbuffer *buff, Dyndata *dyd, const char *name, int firstchar)
luaY_parser	.//script/lua/lua-5.3.4/src/lparser.h	/^LUAI_FUNC LClosure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	p	signature:(lua_State *L, ZIO *z, Mbuffer *buff, Dyndata *dyd, const char *name, int firstchar)
luaZ_buffer	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_buffer(/;"	d
luaZ_bufflen	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_bufflen(/;"	d
luaZ_buffremove	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_buffremove(/;"	d
luaZ_fill	.//script/lua/lua-5.3.4/src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f	signature:(ZIO *z)
luaZ_fill	.//script/lua/lua-5.3.4/src/lzio.h	/^LUAI_FUNC int luaZ_fill (ZIO *z);$/;"	p	signature:(ZIO *z)
luaZ_freebuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_freebuffer(/;"	d
luaZ_init	.//script/lua/lua-5.3.4/src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f	signature:(lua_State *L, ZIO *z, lua_Reader reader, void *data)
luaZ_init	.//script/lua/lua-5.3.4/src/lzio.h	/^LUAI_FUNC void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader,$/;"	p	signature:(lua_State *L, ZIO *z, lua_Reader reader, void *data)
luaZ_initbuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_initbuffer(/;"	d
luaZ_read	.//script/lua/lua-5.3.4/src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f	signature:(ZIO *z, void *b, size_t n)
luaZ_read	.//script/lua/lua-5.3.4/src/lzio.h	/^LUAI_FUNC size_t luaZ_read (ZIO* z, void *b, size_t n);	\/* read next n bytes *\/$/;"	p	signature:(ZIO* z, void *b, size_t n)
luaZ_resetbuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_resetbuffer(/;"	d
luaZ_resizebuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_resizebuffer(/;"	d
luaZ_sizebuffer	.//script/lua/lua-5.3.4/src/lzio.h	/^#define luaZ_sizebuffer(/;"	d
lua_Alloc	.//script/lua/lua-5.3.4/src/lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t
lua_CFunction	.//script/lua/lua-5.3.4/src/lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t
lua_Debug	.//script/lua/lua-5.3.4/src/lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	.//script/lua/lua-5.3.4/src/lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Debug::currentline	.//script/lua/lua-5.3.4/src/lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::event	.//script/lua/lua-5.3.4/src/lua.h	/^  int event;$/;"	m	struct:lua_Debug	access:public
lua_Debug::i_ci	.//script/lua/lua-5.3.4/src/lua.h	/^  struct CallInfo *i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:struct:lua_Debug::CallInfo	access:public
lua_Debug::istailcall	.//script/lua/lua-5.3.4/src/lua.h	/^  char istailcall;	\/* (t) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::isvararg	.//script/lua/lua-5.3.4/src/lua.h	/^  char isvararg;        \/* (u) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::lastlinedefined	.//script/lua/lua-5.3.4/src/lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::linedefined	.//script/lua/lua-5.3.4/src/lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::name	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::namewhat	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::nparams	.//script/lua/lua-5.3.4/src/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::nups	.//script/lua/lua-5.3.4/src/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::short_src	.//script/lua/lua-5.3.4/src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::source	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
lua_Debug::what	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug	access:public
lua_Hook	.//script/lua/lua-5.3.4/src/lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t
lua_Integer	.//script/lua/lua-5.3.4/src/lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t
lua_KContext	.//script/lua/lua-5.3.4/src/lua.h	/^typedef LUA_KCONTEXT lua_KContext;$/;"	t
lua_KFunction	.//script/lua/lua-5.3.4/src/lua.h	/^typedef int (*lua_KFunction) (lua_State *L, int status, lua_KContext ctx);$/;"	t
lua_Number	.//script/lua/lua-5.3.4/src/lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t
lua_Reader	.//script/lua/lua-5.3.4/src/lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t
lua_State	.//script/lua/lua-5.3.4/src/lstate.h	/^struct lua_State {$/;"	s
lua_State	.//script/lua/lua-5.3.4/src/lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_State::CommonHeader	.//script/lua/lua-5.3.4/src/lstate.h	/^  CommonHeader;$/;"	m	struct:lua_State	access:public
lua_State::allowhook	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State	access:public
lua_State::base_ci	.//script/lua/lua-5.3.4/src/lstate.h	/^  CallInfo base_ci;  \/* CallInfo for first level (C calling Lua) *\/$/;"	m	struct:lua_State	access:public
lua_State::basehookcount	.//script/lua/lua-5.3.4/src/lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State	access:public
lua_State::ci	.//script/lua/lua-5.3.4/src/lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State	access:public
lua_State::errfunc	.//script/lua/lua-5.3.4/src/lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State	access:public
lua_State::errorJmp	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_longjmp	access:public
lua_State::gclist	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State	access:public
lua_State::hook	.//script/lua/lua-5.3.4/src/lstate.h	/^  volatile lua_Hook hook;$/;"	m	struct:lua_State	access:public
lua_State::hookcount	.//script/lua/lua-5.3.4/src/lstate.h	/^  int hookcount;$/;"	m	struct:lua_State	access:public
lua_State::hookmask	.//script/lua/lua-5.3.4/src/lstate.h	/^  l_signalT hookmask;$/;"	m	struct:lua_State	access:public
lua_State::l_G	.//script/lua/lua-5.3.4/src/lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State	access:public
lua_State::nCcalls	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State	access:public
lua_State::nci	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short nci;  \/* number of items in 'ci' list *\/$/;"	m	struct:lua_State	access:public
lua_State::nny	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short nny;  \/* number of non-yieldable calls in stack *\/$/;"	m	struct:lua_State	access:public
lua_State::oldpc	.//script/lua/lua-5.3.4/src/lstate.h	/^  const Instruction *oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State	access:public
lua_State::openupval	.//script/lua/lua-5.3.4/src/lstate.h	/^  UpVal *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State	access:public
lua_State::stack	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State	access:public
lua_State::stack_last	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State	access:public
lua_State::stacksize	.//script/lua/lua-5.3.4/src/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State	access:public
lua_State::status	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State	access:public
lua_State::top	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State	access:public
lua_State::twups	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_State	access:public
lua_TValue	.//script/lua/lua-5.3.4/src/lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_TValue::TValuefields	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValuefields;$/;"	m	struct:lua_TValue	access:public
lua_Unsigned	.//script/lua/lua-5.3.4/src/lua.h	/^typedef LUA_UNSIGNED lua_Unsigned;$/;"	t
lua_Writer	.//script/lua/lua-5.3.4/src/lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void *p, size_t sz, void *ud);$/;"	t
lua_absindex	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_absindex	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_absindex) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_arith	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f	signature:(lua_State *L, int op)
lua_arith	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_arith) (lua_State *L, int op);$/;"	p	signature:(lua_State *L, int op)
lua_assert	.//script/lua/lua-5.3.4/src/llimits.h	/^#define lua_assert(/;"	d
lua_assert	.//script/lua/lua-5.3.4/src/lualib.h	/^#define lua_assert(/;"	d
lua_atpanic	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f	signature:(lua_State *L, lua_CFunction panicf)
lua_atpanic	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_CFunction (lua_atpanic) (lua_State *L, lua_CFunction panicf);$/;"	p	signature:(lua_State *L, lua_CFunction panicf)
lua_c	.//script/lua/lua-5.3.4/src/lua.c	/^#define lua_c$/;"	d	file:
lua_call	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_call(/;"	d
lua_callk	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults,$/;"	f	signature:(lua_State *L, int nargs, int nresults, lua_KContext ctx, lua_KFunction k)
lua_callk	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_callk) (lua_State *L, int nargs, int nresults,$/;"	p	signature:(lua_State *L, int nargs, int nresults, lua_KContext ctx, lua_KFunction k)
lua_checkstack	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int n) {$/;"	f	signature:(lua_State *L, int n)
lua_checkstack	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_checkstack) (lua_State *L, int n);$/;"	p	signature:(lua_State *L, int n)
lua_close	.//script/lua/lua-5.3.4/src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_close	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void       (lua_close) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_compare	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f	signature:(lua_State *L, int index1, int index2, int op)
lua_compare	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_compare) (lua_State *L, int idx1, int idx2, int op);$/;"	p	signature:(lua_State *L, int idx1, int idx2, int op)
lua_concat	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f	signature:(lua_State *L, int n)
lua_concat	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_concat) (lua_State *L, int n);$/;"	p	signature:(lua_State *L, int n)
lua_copy	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f	signature:(lua_State *L, int fromidx, int toidx)
lua_copy	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_copy) (lua_State *L, int fromidx, int toidx);$/;"	p	signature:(lua_State *L, int fromidx, int toidx)
lua_cpcall	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_cpcall(/;"	d
lua_createtable	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f	signature:(lua_State *L, int narray, int nrec)
lua_createtable	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_createtable) (lua_State *L, int narr, int nrec);$/;"	p	signature:(lua_State *L, int narr, int nrec)
lua_dump	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data, int strip) {$/;"	f	signature:(lua_State *L, lua_Writer writer, void *data, int strip)
lua_dump	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_dump) (lua_State *L, lua_Writer writer, void *data, int strip);$/;"	p	signature:(lua_State *L, lua_Writer writer, void *data, int strip)
lua_equal	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_equal(/;"	d
lua_error	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_error	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_error) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_freeline	.//script/lua/lua-5.3.4/src/lua.c	/^#define lua_freeline(/;"	d	file:
lua_gc	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f	signature:(lua_State *L, int what, int data)
lua_gc	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_gc) (lua_State *L, int what, int data);$/;"	p	signature:(lua_State *L, int what, int data)
lua_getallocf	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f	signature:(lua_State *L, void **ud)
lua_getallocf	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_Alloc (lua_getallocf) (lua_State *L, void **ud);$/;"	p	signature:(lua_State *L, void **ud)
lua_getextraspace	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_getextraspace(/;"	d
lua_getfield	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f	signature:(lua_State *L, int idx, const char *k)
lua_getfield	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_getfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_getglobal	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_getglobal (lua_State *L, const char *name) {$/;"	f	signature:(lua_State *L, const char *name)
lua_getglobal	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_getglobal) (lua_State *L, const char *name);$/;"	p	signature:(lua_State *L, const char *name)
lua_gethook	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_gethook	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_Hook (lua_gethook) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookcount	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_gethookcount	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_gethookcount) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_gethookmask	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_gethookmask	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_gethookmask) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_geti	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_geti (lua_State *L, int idx, lua_Integer n) {$/;"	f	signature:(lua_State *L, int idx, lua_Integer n)
lua_geti	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_geti) (lua_State *L, int idx, lua_Integer n);$/;"	p	signature:(lua_State *L, int idx, lua_Integer n)
lua_getinfo	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f	signature:(lua_State *L, const char *what, lua_Debug *ar)
lua_getinfo	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_getinfo) (lua_State *L, const char *what, lua_Debug *ar);$/;"	p	signature:(lua_State *L, const char *what, lua_Debug *ar)
lua_getlocal	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_getlocal	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_getlocal) (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_getlocaledecpoint	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_getlocaledecpoint(/;"	d
lua_getmetatable	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f	signature:(lua_State *L, int objindex)
lua_getmetatable	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_getmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_getstack	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f	signature:(lua_State *L, int level, lua_Debug *ar)
lua_getstack	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_getstack) (lua_State *L, int level, lua_Debug *ar);$/;"	p	signature:(lua_State *L, int level, lua_Debug *ar)
lua_gettable	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_gettable (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_gettable	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_gettable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_gettop	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_gettop	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_gettop) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_getupvalue	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f	signature:(lua_State *L, int funcindex, int n)
lua_getupvalue	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_getupvalue) (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_getuservalue	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_getuservalue (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_getuservalue	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int  (lua_getuservalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_h	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_h$/;"	d
lua_ident	.//script/lua/lua-5.3.4/src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_insert(/;"	d
lua_integer2str	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_integer2str(/;"	d
lua_isboolean	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_isboolean(/;"	d
lua_iscfunction	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_iscfunction	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_iscfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isfunction	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_isfunction(/;"	d
lua_isinteger	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_isinteger (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_isinteger	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_isinteger) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_islightuserdata	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_islightuserdata(/;"	d
lua_isnil	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_isnil(/;"	d
lua_isnone	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_isnone(/;"	d
lua_isnoneornil	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_isnoneornil(/;"	d
lua_isnumber	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_isnumber	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_isnumber) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isstring	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_isstring	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_isstring) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_istable	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_istable(/;"	d
lua_isthread	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_isthread(/;"	d
lua_isuserdata	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_isuserdata	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_isuserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_isyieldable	.//script/lua/lua-5.3.4/src/ldo.c	/^LUA_API int lua_isyieldable (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_isyieldable	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_isyieldable) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_len	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_len	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_len)    (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_lessthan	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_lessthan(/;"	d
lua_load	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f	signature:(lua_State *L, lua_Reader reader, void *data, const char *chunkname, const char *mode)
lua_load	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_load) (lua_State *L, lua_Reader reader, void *dt,$/;"	p	signature:(lua_State *L, lua_Reader reader, void *dt, const char *chunkname, const char *mode)
lua_lock	.//script/lua/lua-5.3.4/src/llimits.h	/^#define lua_lock(/;"	d
lua_longassert	.//script/lua/lua-5.3.4/src/llimits.h	/^#define lua_longassert(/;"	d
lua_longjmp	.//script/lua/lua-5.3.4/src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_longjmp::b	.//script/lua/lua-5.3.4/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:	access:public
lua_longjmp::previous	.//script/lua/lua-5.3.4/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:	access:public
lua_longjmp::status	.//script/lua/lua-5.3.4/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:	access:public
lua_newstate	.//script/lua/lua-5.3.4/src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f	signature:(lua_Alloc f, void *ud)
lua_newstate	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_State *(lua_newstate) (lua_Alloc f, void *ud);$/;"	p	signature:(lua_Alloc f, void *ud)
lua_newtable	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_newtable(/;"	d
lua_newthread	.//script/lua/lua-5.3.4/src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_newthread	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_State *(lua_newthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_newuserdata	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f	signature:(lua_State *L, size_t size)
lua_newuserdata	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);$/;"	p	signature:(lua_State *L, size_t sz)
lua_next	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_next	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_next) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_number2str	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_number2str(/;"	d
lua_number2strx	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int lua_number2strx (lua_State *L, char *buff, int sz,$/;"	f	file:	signature:(lua_State *L, char *buff, int sz, const char *fmt, lua_Number x)
lua_number2strx	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_number2strx(/;"	d
lua_numbertointeger	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_numbertointeger(/;"	d
lua_objlen	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_objlen(/;"	d
lua_pcall	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_pcall(/;"	d
lua_pcallk	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f	signature:(lua_State *L, int nargs, int nresults, int errfunc, lua_KContext ctx, lua_KFunction k)
lua_pcallk	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_pcallk) (lua_State *L, int nargs, int nresults, int errfunc,$/;"	p	signature:(lua_State *L, int nargs, int nresults, int errfunc, lua_KContext ctx, lua_KFunction k)
lua_pop	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_pop(/;"	d
lua_pushboolean	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f	signature:(lua_State *L, int b)
lua_pushboolean	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_pushboolean) (lua_State *L, int b);$/;"	p	signature:(lua_State *L, int b)
lua_pushcclosure	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f	signature:(lua_State *L, lua_CFunction fn, int n)
lua_pushcclosure	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	p	signature:(lua_State *L, lua_CFunction fn, int n)
lua_pushcfunction	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_pushcfunction(/;"	d
lua_pushfstring	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f	signature:(lua_State *L, const char *fmt, ...)
lua_pushfstring	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	p	signature:(lua_State *L, const char *fmt, ...)
lua_pushglobaltable	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_pushglobaltable(/;"	d
lua_pushinteger	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f	signature:(lua_State *L, lua_Integer n)
lua_pushinteger	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void        (lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	p	signature:(lua_State *L, lua_Integer n)
lua_pushlightuserdata	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f	signature:(lua_State *L, void *p)
lua_pushlightuserdata	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_pushlightuserdata) (lua_State *L, void *p);$/;"	p	signature:(lua_State *L, void *p)
lua_pushliteral	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_pushliteral(/;"	d
lua_pushlstring	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f	signature:(lua_State *L, const char *s, size_t len)
lua_pushlstring	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_pushlstring) (lua_State *L, const char *s, size_t len);$/;"	p	signature:(lua_State *L, const char *s, size_t len)
lua_pushnil	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_pushnil	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void        (lua_pushnil) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushnumber	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f	signature:(lua_State *L, lua_Number n)
lua_pushnumber	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void        (lua_pushnumber) (lua_State *L, lua_Number n);$/;"	p	signature:(lua_State *L, lua_Number n)
lua_pushstring	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f	signature:(lua_State *L, const char *s)
lua_pushstring	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_pushstring) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
lua_pushthread	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_pushthread	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_pushthread) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_pushunsigned	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_pushunsigned(/;"	d
lua_pushvalue	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_pushvalue	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_pushvalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_pushvfstring	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f	signature:(lua_State *L, const char *fmt, va_list argp)
lua_pushvfstring	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_pushvfstring) (lua_State *L, const char *fmt,$/;"	p	signature:(lua_State *L, const char *fmt, va_list argp)
lua_rawequal	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f	signature:(lua_State *L, int index1, int index2)
lua_rawequal	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	p	signature:(lua_State *L, int idx1, int idx2)
lua_rawget	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_rawget (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_rawget	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_rawget) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawgeti	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_rawgeti (lua_State *L, int idx, lua_Integer n) {$/;"	f	signature:(lua_State *L, int idx, lua_Integer n)
lua_rawgeti	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_rawgeti) (lua_State *L, int idx, lua_Integer n);$/;"	p	signature:(lua_State *L, int idx, lua_Integer n)
lua_rawgetp	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f	signature:(lua_State *L, int idx, const void *p)
lua_rawgetp	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int (lua_rawgetp) (lua_State *L, int idx, const void *p);$/;"	p	signature:(lua_State *L, int idx, const void *p)
lua_rawlen	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_rawlen	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API size_t          (lua_rawlen) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawset	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_rawset	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_rawset) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_rawseti	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, lua_Integer n) {$/;"	f	signature:(lua_State *L, int idx, lua_Integer n)
lua_rawseti	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_rawseti) (lua_State *L, int idx, lua_Integer n);$/;"	p	signature:(lua_State *L, int idx, lua_Integer n)
lua_rawsetp	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f	signature:(lua_State *L, int idx, const void *p)
lua_rawsetp	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_rawsetp) (lua_State *L, int idx, const void *p);$/;"	p	signature:(lua_State *L, int idx, const void *p)
lua_readline	.//script/lua/lua-5.3.4/src/lua.c	/^#define lua_readline(/;"	d	file:
lua_register	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_register(/;"	d
lua_remove	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_remove(/;"	d
lua_replace	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_replace(/;"	d
lua_resume	.//script/lua/lua-5.3.4/src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f	signature:(lua_State *L, lua_State *from, int nargs)
lua_resume	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int  (lua_resume)     (lua_State *L, lua_State *from, int narg);$/;"	p	signature:(lua_State *L, lua_State *from, int narg)
lua_rotate	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_rotate (lua_State *L, int idx, int n) {$/;"	f	signature:(lua_State *L, int idx, int n)
lua_rotate	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_rotate) (lua_State *L, int idx, int n);$/;"	p	signature:(lua_State *L, int idx, int n)
lua_saveline	.//script/lua/lua-5.3.4/src/lua.c	/^#define lua_saveline(/;"	d	file:
lua_setallocf	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f	signature:(lua_State *L, lua_Alloc f, void *ud)
lua_setallocf	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void      (lua_setallocf) (lua_State *L, lua_Alloc f, void *ud);$/;"	p	signature:(lua_State *L, lua_Alloc f, void *ud)
lua_setfield	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f	signature:(lua_State *L, int idx, const char *k)
lua_setfield	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_setfield) (lua_State *L, int idx, const char *k);$/;"	p	signature:(lua_State *L, int idx, const char *k)
lua_setglobal	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *name) {$/;"	f	signature:(lua_State *L, const char *name)
lua_setglobal	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_setglobal) (lua_State *L, const char *name);$/;"	p	signature:(lua_State *L, const char *name)
lua_sethook	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API void lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f	signature:(lua_State *L, lua_Hook func, int mask, int count)
lua_sethook	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void (lua_sethook) (lua_State *L, lua_Hook func, int mask, int count);$/;"	p	signature:(lua_State *L, lua_Hook func, int mask, int count)
lua_seti	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_seti (lua_State *L, int idx, lua_Integer n) {$/;"	f	signature:(lua_State *L, int idx, lua_Integer n)
lua_seti	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_seti) (lua_State *L, int idx, lua_Integer n);$/;"	p	signature:(lua_State *L, int idx, lua_Integer n)
lua_setlocal	.//script/lua/lua-5.3.4/src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_setlocal	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_setlocal) (lua_State *L, const lua_Debug *ar, int n);$/;"	p	signature:(lua_State *L, const lua_Debug *ar, int n)
lua_setmetatable	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f	signature:(lua_State *L, int objindex)
lua_setmetatable	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int   (lua_setmetatable) (lua_State *L, int objindex);$/;"	p	signature:(lua_State *L, int objindex)
lua_settable	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_settable	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_settable) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_settop	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_settop	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_settop) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_setupvalue	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f	signature:(lua_State *L, int funcindex, int n)
lua_setupvalue	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char *(lua_setupvalue) (lua_State *L, int funcindex, int n);$/;"	p	signature:(lua_State *L, int funcindex, int n)
lua_setuservalue	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_setuservalue	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_setuservalue) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_status	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_status	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int  (lua_status)     (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_stdin_is_tty	.//script/lua/lua-5.3.4/src/lua.c	/^#define lua_stdin_is_tty(/;"	d	file:
lua_str2number	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_str2number(/;"	d
lua_str2number	.//script/lua/lua-5.3.4/src/luaconf.h	/^#undef lua_str2number$/;"	d
lua_stringtonumber	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API size_t lua_stringtonumber (lua_State *L, const char *s) {$/;"	f	signature:(lua_State *L, const char *s)
lua_stringtonumber	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API size_t   (lua_stringtonumber) (lua_State *L, const char *s);$/;"	p	signature:(lua_State *L, const char *s)
lua_strlen	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_strlen(/;"	d
lua_strx2number	.//script/lua/lua-5.3.4/src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:	signature:(const char *s, char **endptr)
lua_strx2number	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define lua_strx2number(/;"	d
lua_tmpnam	.//script/lua/lua-5.3.4/src/loslib.c	/^#define lua_tmpnam(/;"	d	file:
lua_toboolean	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_toboolean	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_toboolean) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tocfunction	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_tocfunction	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_CFunction   (lua_tocfunction) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tointeger	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_tointeger(/;"	d
lua_tointegerx	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *pisnum) {$/;"	f	signature:(lua_State *L, int idx, int *pisnum)
lua_tointegerx	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_Integer     (lua_tointegerx) (lua_State *L, int idx, int *isnum);$/;"	p	signature:(lua_State *L, int idx, int *isnum)
lua_tolstring	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f	signature:(lua_State *L, int idx, size_t *len)
lua_tolstring	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char     *(lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	p	signature:(lua_State *L, int idx, size_t *len)
lua_tonumber	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_tonumber(/;"	d
lua_tonumberx	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *pisnum) {$/;"	f	signature:(lua_State *L, int idx, int *pisnum)
lua_tonumberx	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_Number      (lua_tonumberx) (lua_State *L, int idx, int *isnum);$/;"	p	signature:(lua_State *L, int idx, int *isnum)
lua_topointer	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_topointer	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const void     *(lua_topointer) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tostring	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_tostring(/;"	d
lua_tothread	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_tothread	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API lua_State      *(lua_tothread) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_tounsigned	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_tounsigned(/;"	d
lua_tounsignedx	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_tounsignedx(/;"	d
lua_touserdata	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_touserdata	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void	       *(lua_touserdata) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_type	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f	signature:(lua_State *L, int idx)
lua_type	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int             (lua_type) (lua_State *L, int idx);$/;"	p	signature:(lua_State *L, int idx)
lua_typename	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f	signature:(lua_State *L, int t)
lua_typename	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const char     *(lua_typename) (lua_State *L, int tp);$/;"	p	signature:(lua_State *L, int tp)
lua_unlock	.//script/lua/lua-5.3.4/src/llimits.h	/^#define lua_unlock(/;"	d
lua_upvalueid	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f	signature:(lua_State *L, int fidx, int n)
lua_upvalueid	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void *(lua_upvalueid) (lua_State *L, int fidx, int n);$/;"	p	signature:(lua_State *L, int fidx, int n)
lua_upvalueindex	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_upvalueindex(/;"	d
lua_upvaluejoin	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f	signature:(lua_State *L, int fidx1, int n1, int fidx2, int n2)
lua_upvaluejoin	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_upvaluejoin) (lua_State *L, int fidx1, int n1,$/;"	p	signature:(lua_State *L, int fidx1, int n1, int fidx2, int n2)
lua_version	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f	signature:(lua_State *L)
lua_version	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API const lua_Number *(lua_version) (lua_State *L);$/;"	p	signature:(lua_State *L)
lua_writeline	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define lua_writeline(/;"	d
lua_writestring	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define lua_writestring(/;"	d
lua_writestringerror	.//script/lua/lua-5.3.4/src/lauxlib.h	/^#define lua_writestringerror(/;"	d
lua_xmove	.//script/lua/lua-5.3.4/src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f	signature:(lua_State *from, lua_State *to, int n)
lua_xmove	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API void  (lua_xmove) (lua_State *from, lua_State *to, int n);$/;"	p	signature:(lua_State *from, lua_State *to, int n)
lua_yield	.//script/lua/lua-5.3.4/src/lua.h	/^#define lua_yield(/;"	d
lua_yieldk	.//script/lua/lua-5.3.4/src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, lua_KContext ctx,$/;"	f	signature:(lua_State *L, int nresults, lua_KContext ctx, lua_KFunction k)
lua_yieldk	.//script/lua/lua-5.3.4/src/lua.h	/^LUA_API int  (lua_yieldk)     (lua_State *L, int nresults, lua_KContext ctx,$/;"	p	signature:(lua_State *L, int nresults, lua_KContext ctx, lua_KFunction k)
luac_c	.//script/lua/lua-5.3.4/src/luac.c	/^#define luac_c$/;"	d	file:
luaconf_h	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define luaconf_h$/;"	d
luai_apicheck	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_apicheck(/;"	d
luai_apicheck	.//script/lua/lua-5.3.4/src/luaconf.h	/^#define luai_apicheck(/;"	d
luai_ctype_	.//script/lua/lua-5.3.4/src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_ctype_	.//script/lua/lua-5.3.4/src/lctype.h	/^LUAI_DDEC const lu_byte luai_ctype_[UCHAR_MAX + 2];$/;"	v
luai_jmpbuf	.//script/lua/lua-5.3.4/src/ldo.c	/^#define luai_jmpbuf	/;"	d	file:
luai_makeseed	.//script/lua/lua-5.3.4/src/lstate.c	/^#define luai_makeseed(/;"	d	file:
luai_numadd	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numadd(/;"	d
luai_numdiv	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numdiv(/;"	d
luai_numeq	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numeq(/;"	d
luai_numidiv	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numidiv(/;"	d
luai_numisnan	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numisnan(/;"	d
luai_numle	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numle(/;"	d
luai_numlt	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numlt(/;"	d
luai_nummod	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_nummod(/;"	d
luai_nummul	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_nummul(/;"	d
luai_numpow	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numpow(/;"	d
luai_numsub	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numsub(/;"	d
luai_numunm	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_numunm(/;"	d
luai_threadyield	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_threadyield(/;"	d
luai_userstateclose	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_userstateclose(/;"	d
luai_userstatefree	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_userstatefree(/;"	d
luai_userstateopen	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_userstateopen(/;"	d
luai_userstateresume	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_userstateresume(/;"	d
luai_userstatethread	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_userstatethread(/;"	d
luai_userstateyield	.//script/lua/lua-5.3.4/src/llimits.h	/^#define luai_userstateyield(/;"	d
luai_verifycode	.//script/lua/lua-5.3.4/src/lundump.c	/^#define luai_verifycode(/;"	d	file:
lualib_h	.//script/lua/lua-5.3.4/src/lualib.h	/^#define lualib_h$/;"	d
luaopen_base	.//script/lua/lua-5.3.4/src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_base	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_base) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_bit32	.//script/lua/lua-5.3.4/src/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_bit32	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_bit32) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_coroutine	.//script/lua/lua-5.3.4/src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_coroutine	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_coroutine) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_debug	.//script/lua/lua-5.3.4/src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_debug	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_debug) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_io	.//script/lua/lua-5.3.4/src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_io	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_io) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_math	.//script/lua/lua-5.3.4/src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_math	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_math) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_os	.//script/lua/lua-5.3.4/src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_os	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_os) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_package	.//script/lua/lua-5.3.4/src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_package	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_package) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_string	.//script/lua/lua-5.3.4/src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_string	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_string) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_table	.//script/lua/lua-5.3.4/src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f	signature:(lua_State *L)
luaopen_table	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_table) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_utf8	.//script/lua/lua-5.3.4/src/lualib.h	/^LUAMOD_API int (luaopen_utf8) (lua_State *L);$/;"	p	signature:(lua_State *L)
luaopen_utf8	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^LUAMOD_API int luaopen_utf8 (lua_State *L) {$/;"	f	signature:(lua_State *L)
lundump_c	.//script/lua/lua-5.3.4/src/lundump.c	/^#define lundump_c$/;"	d	file:
lundump_h	.//script/lua/lua-5.3.4/src/lundump.h	/^#define lundump_h$/;"	d
lutf8lib_c	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^#define lutf8lib_c$/;"	d	file:
lvm_c	.//script/lua/lua-5.3.4/src/lvm.c	/^#define lvm_c$/;"	d	file:
lvm_h	.//script/lua/lua-5.3.4/src/lvm.h	/^#define lvm_h$/;"	d
lzio_c	.//script/lua/lua-5.3.4/src/lzio.c	/^#define lzio_c$/;"	d	file:
lzio_h	.//script/lua/lua-5.3.4/src/lzio.h	/^#define lzio_h$/;"	d
main	.//script/lua/lua-5.3.4/src/lua.c	/^int main (int argc, char **argv) {$/;"	f	signature:(int argc, char **argv)
main	.//script/lua/lua-5.3.4/src/luac.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
mainLoop	.//Gear.cpp	/^void Gear::mainLoop()$/;"	f	class:kit::Gear	signature:()
mainLoop	.//Gear.h	/^    void mainLoop();$/;"	p	class:kit::Gear	access:public	signature:()
mainfunc	.//script/lua/lua-5.3.4/src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:	signature:(LexState *ls, FuncState *fs)
mainposition	.//script/lua/lua-5.3.4/src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:	signature:(const Table *t, const TValue *key)
mainthread	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:global_State::lua_State	access:public
makemask	.//script/lua/lua-5.3.4/src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:	signature:(const char *smask, int count)
makeseed	.//script/lua/lua-5.3.4/src/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
makewhite	.//script/lua/lua-5.3.4/src/lgc.c	/^#define makewhite(/;"	d	file:
markbeingfnz	.//script/lua/lua-5.3.4/src/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:	signature:(global_State *g)
marklen	.//script/lua/lua-5.3.4/src/lua.c	/^#define marklen	/;"	d	file:
markmt	.//script/lua/lua-5.3.4/src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:	signature:(global_State *g)
markobject	.//script/lua/lua-5.3.4/src/lgc.c	/^#define markobject(/;"	d	file:
markobjectN	.//script/lua/lua-5.3.4/src/lgc.c	/^#define markobjectN(/;"	d	file:
markupval	.//script/lua/lua-5.3.4/src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:	signature:(FuncState *fs, int level)
markvalue	.//script/lua/lua-5.3.4/src/lgc.c	/^#define markvalue(/;"	d	file:
mask	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define mask(/;"	d	file:
maskcolors	.//script/lua/lua-5.3.4/src/lgc.c	/^#define maskcolors	/;"	d	file:
match	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p)
match	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p);$/;"	p	file:	signature:(MatchState *ms, const char *s, const char *p)
match_capture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:	signature:(MatchState *ms, const char *s, int l)
match_class	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:	signature:(int c, int cl)
matchbalance	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p)
matchbracketclass	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:	signature:(int c, const char *p, const char *ec)
matchdepth	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:	access:public
math_abs	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_acos	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_asin	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_atan	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_ceil	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_cos	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_cosh	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_deg	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_exp	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_floor	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_fmod	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_frexp	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_ldexp	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_log	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_log10	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_max	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_min	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_modf	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_pow	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_rad	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_random	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_randomseed	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_sin	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_sinh	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_sqrt	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_tan	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_tanh	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_toint	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_toint (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_type	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_type (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
math_ult	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static int math_ult (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
mathlib	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max_expand	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p, const char *ep)
maxalign	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  int maxalign;$/;"	m	struct:Header	file:	access:public
maxn	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
maxstacksize	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte maxstacksize;  \/* number of registers needed by this function *\/$/;"	m	struct:Proto	access:public
memerrmsg	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString *memerrmsg;  \/* memory-error message *\/$/;"	m	struct:global_State	access:public
metatable	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table::Table	access:public
metatable	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Table *metatable;$/;"	m	struct:Udata	typeref:struct:Udata::Table	access:public
min_expand	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p, const char *ep)
mode	.//script/lua/lua-5.3.4/src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:	access:public
modinit	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:	signature:(lua_State *L, const char *modname)
movegotosout	.//script/lua/lua-5.3.4/src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:	signature:(FuncState *fs, BlockCnt *bl)
moveresults	.//script/lua/lua-5.3.4/src/ldo.c	/^static int moveresults (lua_State *L, const TValue *firstResult, StkId res,$/;"	f	file:	signature:(lua_State *L, const TValue *firstResult, StkId res, int nres, int wanted)
ms	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  MatchState ms;  \/* match state *\/$/;"	m	struct:GMatchState	file:	access:public
msghandler	.//script/lua/lua-5.3.4/src/lua.c	/^static int msghandler (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
mt	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Table *mt[LUA_NUMTAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:global_State::Table	access:public
multiline	.//script/lua/lua-5.3.4/src/lua.c	/^static int multiline (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
mutex_	.//kit/Thread.h	/^    IMutex* mutex_;$/;"	m	class:kit::AutoLock	access:protected
mutex_	.//kit/Thread.h	/^    IMutex* mutex_;$/;"	m	class:kit::IThread	access:protected
mutex_	.//kit/platform/linux/Thread_linux.h	/^    pthread_mutex_t mutex_;$/;"	m	class:kit::Mutex	access:protected
mutex_	.//kit/platform/linux/Thread_linux.h	/^    pthread_spinlock_t mutex_;$/;"	m	class:kit::SpinMutex	access:protected
n	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:	access:public
n	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  size_t n;  \/* number of characters in buffer *\/$/;"	m	struct:luaL_Buffer	access:public
n	.//script/lua/lua-5.3.4/src/liolib.c	/^  int n;  \/* number of elements in buffer 'buff' *\/$/;"	m	struct:__anon7	file:	access:public
n	.//script/lua/lua-5.3.4/src/llimits.h	/^  lua_Number n;$/;"	m	union:__anon9	access:public
n	.//script/lua/lua-5.3.4/src/lobject.h	/^  lua_Number n;    \/* float numbers *\/$/;"	m	union:Value	access:public
n	.//script/lua/lua-5.3.4/src/lparser.h	/^    int n;$/;"	m	struct:Dyndata::__anon17	access:public
n	.//script/lua/lua-5.3.4/src/lparser.h	/^  int n;  \/* number of entries in use *\/$/;"	m	struct:Labellist	access:public
n	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  lua_Number n;$/;"	m	union:Ftypes	file:	access:public
n	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
n	.//script/lua/lua-5.3.4/src/lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio	access:public
n	.//script/lua/lua-5.3.4/src/lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer	access:public
nCcalls	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State	access:public
na	.//script/lua/lua-5.3.4/src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:	access:public
nactvar	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:	access:public
nactvar	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte nactvar;  \/* local level where it appears in current block *\/$/;"	m	struct:Labeldesc	access:public
nactvar	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState	access:public
name	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	access:public
name	.//script/lua/lua-5.3.4/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:	access:public
name	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString *name;  \/* upvalue name (for debug information) *\/$/;"	m	struct:Upvaldesc	access:public
name	.//script/lua/lua-5.3.4/src/lparser.h	/^  TString *name;  \/* label identifier *\/$/;"	m	struct:Labeldesc	access:public
name	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	access:public
name	.//script/lua/lua-5.3.4/src/lundump.c	/^  const char *name;$/;"	m	struct:__anon25	file:	access:public
namewhat	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *namewhat;	\/* (n) 'global', 'local', 'field', 'method' *\/$/;"	m	struct:lua_Debug	access:public
nativeendian	.//script/lua/lua-5.3.4/src/lstrlib.c	/^} nativeendian = {1};$/;"	v	typeref:union:__anon22	file:
nci	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short nci;  \/* number of items in 'ci' list *\/$/;"	m	struct:lua_State	access:public
need_value	.//script/lua/lua-5.3.4/src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:	signature:(FuncState *fs, int list)
negatecondition	.//script/lua/lua-5.3.4/src/lcode.c	/^static void negatecondition (FuncState *fs, expdesc *e) {$/;"	f	file:	signature:(FuncState *fs, expdesc *e)
new_localvar	.//script/lua/lua-5.3.4/src/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:	signature:(LexState *ls, TString *name)
new_localvarliteral	.//script/lua/lua-5.3.4/src/lparser.c	/^#define new_localvarliteral(/;"	d	file:
new_localvarliteral_	.//script/lua/lua-5.3.4/src/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:	signature:(LexState *ls, const char *name, size_t sz)
newbox	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static void *newbox (lua_State *L, size_t newsize) {$/;"	f	file:	signature:(lua_State *L, size_t newsize)
newfile	.//script/lua/lua-5.3.4/src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
newlabelentry	.//script/lua/lua-5.3.4/src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:	signature:(LexState *ls, Labellist *l, TString *name, int line, int pc)
newprefile	.//script/lua/lua-5.3.4/src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
newupvalue	.//script/lua/lua-5.3.4/src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:	signature:(FuncState *fs, TString *name, expdesc *v)
next	.//base/Array.h	/^        int next;$/;"	m	struct:kit::Array::Item	access:public
next	.//base/List.h	/^        Item* next;$/;"	m	struct:kit::List::Item	access:public
next	.//base/Map.h	/^        Item* next;$/;"	m	struct:kit::Map::Item	access:public
next	.//kit/Timer.h	/^    Node* next;$/;"	m	struct:kit::Timer::Node	access:public
next	.//script/lua/lua-5.3.4/src/lfunc.h	/^      UpVal *next;  \/* linked list *\/$/;"	m	struct:UpVal::__anon5::__anon6	access:public
next	.//script/lua/lua-5.3.4/src/llex.c	/^#define next(/;"	d	file:
next	.//script/lua/lua-5.3.4/src/lobject.h	/^    int next;  \/* for chaining (offset for next node) *\/$/;"	m	struct:TKey::__anon11	access:public
next	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::	access:public
next_ci	.//script/lua/lua-5.3.4/src/ldo.c	/^#define next_ci(/;"	d	file:
next_delta_zero_	.//Gear.h	/^    bool next_delta_zero_;$/;"	m	class:kit::Gear	access:protected
nextc	.//script/lua/lua-5.3.4/src/liolib.c	/^static int nextc (RN *rn) {$/;"	f	file:	signature:(RN *rn)
nh	.//script/lua/lua-5.3.4/src/lparser.c	/^  int nh;  \/* total number of 'record' elements *\/$/;"	m	struct:ConsControl	file:	access:public
nilK	.//script/lua/lua-5.3.4/src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:	signature:(FuncState *fs)
nk	.//script/lua/lua-5.3.4/src/lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anon11	access:public
nk	.//script/lua/lua-5.3.4/src/lparser.h	/^  int nk;  \/* number of elements in 'k' *\/$/;"	m	struct:FuncState	access:public
nlocvars	.//script/lua/lua-5.3.4/src/lparser.h	/^  short nlocvars;  \/* number of elements in 'f->locvars' *\/$/;"	m	struct:FuncState	access:public
nny	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned short nny;  \/* number of non-yieldable calls in stack *\/$/;"	m	struct:lua_State	access:public
noLuaClosure	.//script/lua/lua-5.3.4/src/ldebug.c	/^#define noLuaClosure(/;"	d	file:
node	.//script/lua/lua-5.3.4/src/lobject.h	/^  Node *node;$/;"	m	struct:Table	access:public
node_	.//base/List.h	/^        Item* node_;$/;"	m	class:kit::List::Iterator	access:public
nodes	.//kit/Timer.h	/^    Node* nodes[512];$/;"	m	struct:kit::Timer::Wheel	access:public
noenv	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
nospecials	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:	signature:(const char *p, size_t l)
novariant	.//script/lua/lua-5.3.4/src/lobject.h	/^#define novariant(/;"	d
np	.//script/lua/lua-5.3.4/src/lparser.h	/^  int np;  \/* number of elements in 'p' *\/$/;"	m	struct:FuncState	access:public
nparams	.//script/lua/lua-5.3.4/src/lua.h	/^  unsigned char nparams;\/* (u) number of parameters *\/$/;"	m	struct:lua_Debug	access:public
nresults	.//script/lua/lua-5.3.4/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:	access:public
nresults	.//script/lua/lua-5.3.4/src/lstate.h	/^  short nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo	access:public
num2straux	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int num2straux (char *buff, int sz, lua_Number x) {$/;"	f	file:	signature:(char *buff, int sz, lua_Number x)
numarith	.//script/lua/lua-5.3.4/src/lobject.c	/^static lua_Number numarith (lua_State *L, int op, lua_Number v1,$/;"	f	file:	signature:(lua_State *L, int op, lua_Number v1, lua_Number v2)
numparams	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte numparams;  \/* number of fixed parameters *\/$/;"	m	struct:Proto	access:public
numusearray	.//script/lua/lua-5.3.4/src/ltable.c	/^static unsigned int numusearray (const Table *t, unsigned int *nums) {$/;"	f	file:	signature:(const Table *t, unsigned int *nums)
numusehash	.//script/lua/lua-5.3.4/src/ltable.c	/^static int numusehash (const Table *t, unsigned int *nums, unsigned int *pna) {$/;"	f	file:	signature:(const Table *t, unsigned int *nums, unsigned int *pna)
nups	.//script/lua/lua-5.3.4/src/lparser.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:FuncState	access:public
nups	.//script/lua/lua-5.3.4/src/lua.h	/^  unsigned char nups;	\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	access:public
nuse	.//script/lua/lua-5.3.4/src/lstate.h	/^  int nuse;  \/* number of elements *\/$/;"	m	struct:stringtable	access:public
nval	.//script/lua/lua-5.3.4/src/lparser.h	/^    lua_Number nval;  \/* for VKFLT *\/$/;"	m	union:expdesc::__anon15	access:public
nvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define nvalue(/;"	d
obj2gco	.//script/lua/lua-5.3.4/src/lstate.h	/^#define obj2gco(/;"	d
off	.//kit/Emitter.h	/^    void off(int event_id, HandlerID id)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, HandlerID id)
old_errfunc	.//script/lua/lua-5.3.4/src/lstate.h	/^      ptrdiff_t old_errfunc;$/;"	m	struct:CallInfo::__anon18::__anon20	access:public
oldpc	.//script/lua/lua-5.3.4/src/lstate.h	/^  const Instruction *oldpc;  \/* last pc traced *\/$/;"	m	struct:lua_State	access:public
on	.//kit/Emitter.h	/^    HandlerID on(int event_id, Handler handler)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, Handler handler)
once	.//kit/Emitter.h	/^        bool once;$/;"	m	struct:kit::Emitter::__anon1	access:public
once	.//kit/Emitter.h	/^    void once(int event_id, Handler handler)$/;"	f	class:kit::Emitter	access:public	signature:(int event_id, Handler handler)
open	.//network/Socket.cpp	/^void ISocket::open()$/;"	f	class:kit::ISocket	signature:()
open	.//network/Socket.h	/^	void open();$/;"	p	class:kit::ISocket	access:public	signature:()
open	.//network/platform/win/Socket.cpp	/^void Socket::open()$/;"	f	class:kit::Socket	signature:()
open	.//script/lua/lua-5.3.4/src/lfunc.h	/^    } open;$/;"	m	union:UpVal::__anon5	typeref:struct:UpVal::__anon5::__anon6	access:public
open_func	.//script/lua/lua-5.3.4/src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:	signature:(LexState *ls, FuncState *fs, BlockCnt *bl)
opencheck	.//script/lua/lua-5.3.4/src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:	signature:(lua_State *L, const char *fname, const char *mode)
openupval	.//script/lua/lua-5.3.4/src/lstate.h	/^  UpVal *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State	access:public
operator !=	.//base/Array.h	/^        bool operator !=(const Iterator& it)$/;"	f	class:kit::Array::Iterator	access:public	signature:(const Iterator& it)
operator !=	.//base/List.h	/^        bool operator !=(const Iterator& it)$/;"	f	class:kit::List::Iterator	access:public	signature:(const Iterator& it)
operator *	.//base/Array.h	/^        Type& operator *()$/;"	f	class:kit::Array::Iterator	access:public	signature:()
operator *	.//base/List.h	/^        Type& operator *()$/;"	f	class:kit::List::Iterator	access:public	signature:()
operator ++	.//base/Array.h	/^        Iterator& operator ++()$/;"	f	class:kit::Array::Iterator	access:public	signature:()
operator ++	.//base/List.h	/^        Iterator& operator ++()$/;"	f	class:kit::List::Iterator	access:public	signature:()
operator <<	.//kit/Buffer.h	/^	bool operator<<(T v);$/;"	p	class:kit::Buffer	access:public	signature:(T v)
operator <<	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator<< <const char*>(const char* v)$/;"	f	class:kit::Buffer	signature:(const char* v)
operator <<	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator<<(T v)$/;"	f	class:kit::Buffer	signature:(T v)
operator ==	.//base/Array.h	/^        bool operator ==(const Iterator& it)$/;"	f	class:kit::Array::Iterator	access:public	signature:(const Iterator& it)
operator ==	.//base/List.h	/^        bool operator ==(const Iterator& it)$/;"	f	class:kit::List::Iterator	access:public	signature:(const Iterator& it)
operator >>	.//kit/Buffer.h	/^	bool operator>>(T& v);$/;"	p	class:kit::Buffer	access:public	signature:(T& v)
operator >>	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator>> <char*>(char*& v)$/;"	f	class:kit::Buffer	signature:(char*& v)
operator >>	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator>> <std::string>(std::string& v)$/;"	f	class:kit::Buffer	signature:(std::string& v)
operator >>	.//kit/impl/BufferImpl.h	/^inline bool Buffer::operator>>(T& v)$/;"	f	class:kit::Buffer	signature:(T& v)
operator []	.//base/Map.h	/^    ValueType& operator [] (KeyType key)$/;"	f	class:kit::Map	access:public	signature:(KeyType key)
operator sockaddr*	.//network/SockAddr.h	/^    operator sockaddr*() { return (sockaddr*)addr_; }$/;"	f	class:kit::ISockAddr	access:public	signature:()
operator sockaddr_in*	.//network/SockAddr.h	/^    operator sockaddr_in*() { return (sockaddr_in*)addr_; }$/;"	f	class:kit::ISockAddr	access:public	signature:()
opmode	.//script/lua/lua-5.3.4/src/lopcodes.c	/^#define opmode(/;"	d	file:
os_clock	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_date	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_difftime	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_execute	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_exit	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_getenv	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_remove	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_rename	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_setlocale	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_time	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
os_tmpname	.//script/lua/lua-5.3.4/src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
otherwhite	.//script/lua/lua-5.3.4/src/lgc.h	/^#define otherwhite(/;"	d
out_dirty	.//network/Session.h	/^    bool out_dirty = false;$/;"	m	class:kit::Session	access:public
out_vec_	.//network/Terminal.h	/^    std::vector<Session*> out_vec_;$/;"	m	class:kit::Terminal	access:protected
output	.//script/lua/lua-5.3.4/src/luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	file:
p	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto::Proto	access:public
p	.//script/lua/lua-5.3.4/src/lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:LClosure::Proto	access:public
p	.//script/lua/lua-5.3.4/src/lobject.h	/^  void *p;         \/* light userdata *\/$/;"	m	union:Value	access:public
p	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Proto p;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Proto	access:public
p	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *p;  \/* pattern *\/$/;"	m	struct:GMatchState	file:	access:public
p	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	union:cD::__anon23	file:	access:public
p	.//script/lua/lua-5.3.4/src/lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio	access:public
p_end	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:	access:public
pack	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
packHeader	.//network/Packet.cpp	/^void Packet::packHeader(Buffer* head_buf)$/;"	f	class:kit::Packet	signature:(Buffer* head_buf)
packHeader	.//network/Packet.h	/^    void packHeader(Buffer* head_buf);$/;"	p	class:kit::Packet	access:public	signature:(Buffer* head_buf)
packet_handler_	.//network/Client.h	/^    IPacketHandler* packet_handler_;$/;"	m	class:kit::IClient	access:protected
packet_seed_	.//network/Socket.h	/^    uint32_t packet_seed_;$/;"	m	class:kit::ISocket	access:private
packint	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void packint (luaL_Buffer *b, lua_Unsigned n,$/;"	f	file:	signature:(luaL_Buffer *b, lua_Unsigned n, int islittle, int size, int neg)
pairsmeta	.//script/lua/lua-5.3.4/src/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:	signature:(lua_State *L, const char *method, int iszero, lua_CFunction iter)
panic	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
panic	.//script/lua/lua-5.3.4/src/lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State	access:public
parent_	.//kit/Ref.h	/^    Ref* parent_;$/;"	m	class:kit::Ref	access:private
parlist	.//script/lua/lua-5.3.4/src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
partition	.//script/lua/lua-5.3.4/src/ltablib.c	/^static IdxT partition (lua_State *L, IdxT lo, IdxT up) {$/;"	f	file:	signature:(lua_State *L, IdxT lo, IdxT up)
patchlistaux	.//script/lua/lua-5.3.4/src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:	signature:(FuncState *fs, int list, int vtarget, int reg, int dtarget)
patchtestreg	.//script/lua/lua-5.3.4/src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:	signature:(FuncState *fs, int node, int reg)
path_	.//script/ScriptSupport.h	/^    std::string path_;$/;"	m	class:kit::ScriptCore	access:protected
pc	.//script/lua/lua-5.3.4/src/lparser.h	/^  int pc;  \/* next position to code (equivalent to 'ncode') *\/$/;"	m	struct:FuncState	access:public
pc	.//script/lua/lua-5.3.4/src/lparser.h	/^  int pc;  \/* position in code *\/$/;"	m	struct:Labeldesc	access:public
pcRel	.//script/lua/lua-5.3.4/src/ldebug.h	/^#define pcRel(/;"	d
pid	.//network/Packet.h	/^    uint16_t pid; \/\/协义$/;"	m	struct:kit::PacketHeader	access:public
pid_	.//kit/platform/linux/Thread_linux.h	/^    pthread_t pid_;$/;"	m	class:kit::Thread	access:private
pid_	.//network/Protocol.h	/^    int32_t pid_;$/;"	m	class:kit::Protocol	access:protected
pk_funcs	.//script/lua/lua-5.3.4/src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pmain	.//script/lua/lua-5.3.4/src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
pmain	.//script/lua/lua-5.3.4/src/luac.c	/^static int pmain(lua_State* L)$/;"	f	file:	signature:(lua_State* L)
point2uint	.//script/lua/lua-5.3.4/src/llimits.h	/^#define point2uint(/;"	d
poll_fd_	.//network/platform/linux/Client_linux.h	/^    int32_t poll_fd_;$/;"	m	class:kit::Client	access:private
poll_fd_	.//network/platform/linux/Server_linux.h	/^    int32_t poll_fd_;$/;"	m	class:kit::Server	access:private
pool_	.//kit/BufferPool.h	/^    BufferPool* pool_;$/;"	m	class:kit::BufferPoolManager	access:private
pool_vec_	.//kit/RefPool.h	/^    PoolVec pool_vec_;$/;"	m	class:kit::RefPoolManager	access:private
pop	.//base/List.h	/^    bool pop(Type& value)$/;"	f	class:kit::List	access:public	signature:(Type& value)
pop	.//base/QList.h	/^    bool pop(Type& value)$/;"	f	class:kit::QList	access:public	signature:(Type& value)
pop	.//base/Queue.h	/^    bool pop(Type& value)$/;"	f	class:kit::MinQueue	access:public	signature:(Type& value)
pop	.//base/Queue.h	/^    bool pop(Type& value)$/;"	f	class:kit::Queue	access:public	signature:(Type& value)
pop	.//kit/RefPool.cpp	/^void RefPoolManager::pop()$/;"	f	class:kit::RefPoolManager	signature:()
pop	.//kit/RefPool.h	/^    void pop();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
port	.//network/SockAddr.h	/^    uint16_t port;$/;"	m	class:kit::ISockAddr	access:public
pos	.//kit/Timer.h	/^    uint8_t pos;$/;"	m	struct:kit::Timer::Wheel	access:public
pos_	.//base/Array.h	/^    int pos_;$/;"	m	class:kit::Array	access:private
posrelat	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static lua_Integer posrelat (lua_Integer pos, size_t len) {$/;"	f	file:	signature:(lua_Integer pos, size_t len)
preinit_thread	.//script/lua/lua-5.3.4/src/lstate.c	/^static void preinit_thread (lua_State *L, global_State *g) {$/;"	f	file:	signature:(lua_State *L, global_State *g)
prepstate	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void prepstate (MatchState *ms, lua_State *L,$/;"	f	file:	signature:(MatchState *ms, lua_State *L, const char *s, size_t ls, const char *p, size_t lp)
prev	.//base/Array.h	/^        int prev;$/;"	m	struct:kit::Array::Item	access:public
prev	.//base/List.h	/^        Item* prev;$/;"	m	struct:kit::List::Item	access:public
prev	.//script/lua/lua-5.3.4/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:	access:public
prev	.//script/lua/lua-5.3.4/src/lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState::FuncState	access:public
previous	.//script/lua/lua-5.3.4/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:	access:public
previous	.//script/lua/lua-5.3.4/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:	access:public
previous	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct CallInfo *previous, *next;  \/* dynamic call link *\/$/;"	m	struct:CallInfo	typeref:struct:CallInfo::CallInfo	access:public
primaryexp	.//script/lua/lua-5.3.4/src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
print_usage	.//script/lua/lua-5.3.4/src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:	signature:(const char *badoption)
print_version	.//script/lua/lua-5.3.4/src/lua.c	/^static void print_version (void) {$/;"	f	file:	signature:(void)
priority	.//script/lua/lua-5.3.4/src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon13	file:
progname	.//script/lua/lua-5.3.4/src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
progname	.//script/lua/lua-5.3.4/src/luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	file:
propagateall	.//script/lua/lua-5.3.4/src/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:	signature:(global_State *g)
propagatemark	.//script/lua/lua-5.3.4/src/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:	signature:(global_State *g)
protocol_map_	.//network/Terminal.h	/^    ProtocolMap protocol_map_;$/;"	m	class:kit::Terminal	access:protected
pullPacketsToSession	.//network/Socket.cpp	/^void ISocket::pullPacketsToSession()$/;"	f	class:kit::ISocket	signature:()
pullPacketsToSession	.//network/Socket.h	/^    void pullPacketsToSession();$/;"	p	class:kit::ISocket	access:public	signature:()
push	.//base/List.h	/^    bool push(const Type& item)$/;"	f	class:kit::List	access:public	signature:(const Type& item)
push	.//base/QList.h	/^    bool push(const Type& value)$/;"	f	class:kit::QList	access:public	signature:(const Type& value)
push	.//base/Queue.h	/^    bool push(const Type& value)$/;"	f	class:kit::MinQueue	access:public	signature:(const Type& value)
push	.//base/Queue.h	/^    bool push(const Type& value)$/;"	f	class:kit::Queue	access:public	signature:(const Type& value)
push	.//kit/RefPool.cpp	/^void RefPoolManager::push(RefPool* pool)$/;"	f	class:kit::RefPoolManager	signature:(RefPool* pool)
push	.//kit/RefPool.h	/^    void push(RefPool* pool);$/;"	p	class:kit::RefPoolManager	access:public	signature:(RefPool* pool)
push_captures	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *e)
push_onecapture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:	signature:(MatchState *ms, int i, const char *s, const char *e)
pushargs	.//script/lua/lua-5.3.4/src/lua.c	/^static int pushargs (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
pushclosure	.//script/lua/lua-5.3.4/src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:	signature:(lua_State *L, Proto *p, UpVal **encup, StkId base, StkId ra)
pusherror	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
pushfuncname	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:	signature:(lua_State *L, lua_Debug *ar)
pushglobalfuncname	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:	signature:(lua_State *L, lua_Debug *ar)
pushline	.//script/lua/lua-5.3.4/src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:	signature:(lua_State *L, int firstline)
pushnexttemplate	.//script/lua/lua-5.3.4/src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:	signature:(lua_State *L, const char *path)
pushnumint	.//script/lua/lua-5.3.4/src/lmathlib.c	/^static void pushnumint (lua_State *L, lua_Number d) {$/;"	f	file:	signature:(lua_State *L, lua_Number d)
pushstr	.//script/lua/lua-5.3.4/src/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:	signature:(lua_State *L, const char *str, size_t l)
pushunsigned	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define pushunsigned(/;"	d	file:
pushutfchar	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static void pushutfchar (lua_State *L, int arg) {$/;"	f	file:	signature:(lua_State *L, int arg)
pvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define pvalue(/;"	d
que_	.//base/QList.h	/^    Queue<Type, QLength> que_;$/;"	m	class:kit::QList	access:private
que_	.//base/Queue.h	/^    Type que_[Length + 1];$/;"	m	class:kit::MinQueue	access:private
que_	.//base/Queue.h	/^    Type que_[Length];$/;"	m	class:kit::Queue	access:private
ques_	.//kit/BufferPool.h	/^    BufferQue ques_[BUFFER_QUEUE_CNT];$/;"	m	class:kit::BufferPool	access:private
r	.//script/lua/lua-5.3.4/src/llex.h	/^  lua_Number r;$/;"	m	union:__anon8	access:public
readBuffer	.//kit/Buffer.cpp	/^bool Buffer::readBuffer(void* buf, size_t size)$/;"	f	class:kit::Buffer	signature:(void* buf, size_t size)
readBuffer	.//kit/Buffer.h	/^	bool readBuffer(void* buf, size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(void* buf, size_t size)
readCur	.//kit/Buffer.h	/^    char* readCur();$/;"	p	class:kit::Buffer	access:public	signature:()
readCur	.//kit/impl/BufferImpl.h	/^inline char* Buffer::readCur()$/;"	f	class:kit::Buffer	signature:()
readVarint	.//kit/Buffer.h	/^    bool readVarint(T& value);$/;"	p	class:kit::Buffer	access:public	signature:(T& value)
readVarint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::readVarint(T& value)$/;"	f	class:kit::Buffer	signature:(T& value)
readVaruint	.//kit/Buffer.h	/^    bool readVaruint(T& value);$/;"	p	class:kit::Buffer	access:public	signature:(T& value)
readVaruint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::readVaruint(T& value)$/;"	f	class:kit::Buffer	signature:(T& value)
readVector	.//kit/Buffer.h	/^    bool readVector(std::vector<T>& vec);$/;"	p	class:kit::Buffer	access:public	signature:(std::vector<T>& vec)
readVector	.//kit/impl/BufferImpl.h	/^inline bool Buffer::readVector(std::vector<T>& vec)$/;"	f	class:kit::Buffer	signature:(std::vector<T>& vec)
read_all	.//script/lua/lua-5.3.4/src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:	signature:(lua_State *L, FILE *f)
read_chars	.//script/lua/lua-5.3.4/src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:	signature:(lua_State *L, FILE *f, size_t n)
read_cur_	.//kit/Buffer.h	/^    uint8_t* read_cur_;$/;"	m	class:kit::Buffer	access:protected
read_line	.//script/lua/lua-5.3.4/src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:	signature:(lua_State *L, FILE *f, int chop)
read_long_string	.//script/lua/lua-5.3.4/src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:	signature:(LexState *ls, SemInfo *seminfo, int sep)
read_number	.//script/lua/lua-5.3.4/src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:	signature:(lua_State *L, FILE *f)
read_numeral	.//script/lua/lua-5.3.4/src/llex.c	/^static int read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:	signature:(LexState *ls, SemInfo *seminfo)
read_string	.//script/lua/lua-5.3.4/src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:	signature:(LexState *ls, int del, SemInfo *seminfo)
readable	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:	signature:(const char *filename)
readdecesc	.//script/lua/lua-5.3.4/src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
readdigits	.//script/lua/lua-5.3.4/src/liolib.c	/^static int readdigits (RN *rn, int hex) {$/;"	f	file:	signature:(RN *rn, int hex)
reader	.//script/lua/lua-5.3.4/src/luac.c	/^static const char* reader(lua_State *L, void *ud, size_t *size)$/;"	f	file:	signature:(lua_State *L, void *ud, size_t *size)
reader	.//script/lua/lua-5.3.4/src/lzio.h	/^  lua_Reader reader;		\/* reader function *\/$/;"	m	struct:Zio	access:public
readhexaesc	.//script/lua/lua-5.3.4/src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
readutf8esc	.//script/lua/lua-5.3.4/src/llex.c	/^static unsigned long readutf8esc (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
ready_out	.//network/Socket.h	/^    bool ready_out;$/;"	m	class:kit::ISocket	access:public
reallymarkobject	.//script/lua/lua-5.3.4/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:	signature:(global_State *g, GCObject *o)
reallymarkobject	.//script/lua/lua-5.3.4/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o);$/;"	p	file:	signature:(global_State *g, GCObject *o)
recfield	.//script/lua/lua-5.3.4/src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:	signature:(LexState *ls, struct ConsControl *cc)
recover	.//script/lua/lua-5.3.4/src/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:	signature:(lua_State *L, int status)
recv	.//network/Socket.cpp	/^int32_t ISocket::recv(char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::ISocket	signature:(char* buf, int32_t size, int32_t mode)
recv	.//network/Socket.h	/^	int32_t recv(char* buf, int32_t size, int32_t mode = 0);$/;"	p	class:kit::ISocket	access:public	signature:(char* buf, int32_t size, int32_t mode = 0)
recv	.//network/platform/win/Socket.cpp	/^int32_t Socket::recv(char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::Socket	signature:(char* buf, int32_t size, int32_t mode)
recvBuffer	.//network/Socket.cpp	/^int32_t ISocket::recvBuffer(Buffer* buf)$/;"	f	class:kit::ISocket	signature:(Buffer* buf)
recvBuffer	.//network/Socket.h	/^    int32_t recvBuffer(Buffer* buf);$/;"	p	class:kit::ISocket	access:protected	signature:(Buffer* buf)
recvClear	.//network/Socket.cpp	/^void ISocket::recvClear()$/;"	f	class:kit::ISocket	signature:()
recvClear	.//network/Socket.h	/^    void recvClear();$/;"	p	class:kit::ISocket	access:protected	signature:()
recvFrom	.//network/Socket.cpp	/^int32_t ISocket::recvFrom(char* buf, int32_t size, int32_t mode, SockAddr *addr)$/;"	f	class:kit::ISocket	signature:(char* buf, int32_t size, int32_t mode, SockAddr *addr)
recvFrom	.//network/Socket.h	/^	int32_t recvFrom(char* buf, int32_t size, int32_t mode, SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(char* buf, int32_t size, int32_t mode, SockAddr* addr)
recvFrom	.//network/platform/win/Socket.cpp	/^int32_t Socket::recvFrom(char* buf, int32_t size, int32_t mode, sockaddr *addr)$/;"	f	class:kit::Socket	signature:(char* buf, int32_t size, int32_t mode, sockaddr *addr)
recvPacket	.//network/Session.cpp	/^bool Session::recvPacket(Packet* pack)$/;"	f	class:kit::Session	signature:(Packet* pack)
recvPacket	.//network/Session.h	/^    bool recvPacket(Packet* pack);$/;"	p	class:kit::Session	access:public	signature:(Packet* pack)
recvPacket	.//network/Socket.cpp	/^int32_t ISocket::recvPacket(Packet* pack)$/;"	f	class:kit::ISocket	signature:(Packet* pack)
recvPacket	.//network/Socket.h	/^    int32_t recvPacket(Packet* pack);$/;"	p	class:kit::ISocket	access:public	signature:(Packet* pack)
recvProtocol	.//network/Terminal.cpp	/^void Terminal::recvProtocol(SessionID sid, const Protocol* pto)$/;"	f	class:kit::Terminal	signature:(SessionID sid, const Protocol* pto)
recvProtocol	.//network/Terminal.h	/^    void recvProtocol(SessionID sid, const Protocol* pto);$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid, const Protocol* pto)
recv_buf_	.//network/Socket.h	/^    Buffer* recv_buf_;$/;"	m	class:kit::ISocket	access:private
recv_count_	.//network/Socket.h	/^    uint32_t recv_count_;$/;"	m	class:kit::ISocket	access:private
recv_head_buf_	.//network/Socket.h	/^    Buffer* recv_head_buf_;$/;"	m	class:kit::ISocket	access:private
recv_packet_	.//network/Socket.h	/^    Packet* recv_packet_;$/;"	m	class:kit::ISocket	access:private
recv_packets_	.//network/Session.h	/^    PacketQue recv_packets_;$/;"	m	class:kit::Session	access:protected
recv_que_	.//network/Socket.h	/^    PacketQue recv_que_;$/;"	m	class:kit::ISocket	access:private
ref_vec_	.//kit/RefPool.h	/^    RefVec ref_vec_;$/;"	m	class:kit::RefPool	access:private
refcount	.//script/lua/lua-5.3.4/src/lfunc.h	/^  lu_mem refcount;  \/* reference counter *\/$/;"	m	struct:UpVal	access:public
reference_count_	.//kit/Ref.h	/^    unsigned int reference_count_;$/;"	m	class:kit::Ref	access:protected
registerTable	.//script/lua/LuaProtocol.cpp	/^bool LuaProtocol::registerTable(kit::PTTable* p, const LuaIntf::LuaRef* table)$/;"	f	class:LuaProtocol	signature:(kit::PTTable* p, const LuaIntf::LuaRef* table)
registerTable	.//script/lua/LuaProtocol.h	/^    bool registerTable(kit::PTTable* p, const LuaIntf::LuaRef* table);$/;"	p	class:LuaProtocol	access:private	signature:(kit::PTTable* p, const LuaIntf::LuaRef* table)
register_Class_Buffer	.//script/lua/LuaBinding.cpp	/^void register_Class_Buffer(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Buffer	.//script/lua/LuaBinding.h	/^void register_Class_Buffer(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_BufferPool	.//script/lua/LuaBinding.cpp	/^void register_Class_BufferPool(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_BufferPool	.//script/lua/LuaBinding.h	/^void register_Class_BufferPool(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Client	.//script/lua/LuaBinding.cpp	/^void register_Class_Client(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Client	.//script/lua/LuaBinding.h	/^void register_Class_Client(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_DebugInput	.//script/lua/LuaDebug.cpp	/^void register_Class_DebugInput(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_DebugInput	.//script/lua/LuaDebug.h	/^void register_Class_DebugInput(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Gear	.//script/lua/LuaBinding.cpp	/^void register_Class_Gear(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Gear	.//script/lua/LuaBinding.h	/^void register_Class_Gear(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Logger	.//script/lua/LuaBinding.cpp	/^void register_Class_Logger(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Logger	.//script/lua/LuaBinding.h	/^void register_Class_Logger(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Packet	.//script/lua/LuaBinding.cpp	/^void register_Class_Packet(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Packet	.//script/lua/LuaBinding.h	/^void register_Class_Packet(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Protocol	.//script/lua/LuaBinding.cpp	/^void register_Class_Protocol(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Protocol	.//script/lua/LuaBinding.h	/^void register_Class_Protocol(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Ref	.//script/lua/LuaBinding.cpp	/^void register_Class_Ref(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Ref	.//script/lua/LuaBinding.h	/^void register_Class_Ref(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_ScriptCore	.//script/lua/LuaBinding.cpp	/^void register_Class_ScriptCore(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_ScriptCore	.//script/lua/LuaBinding.h	/^void register_Class_ScriptCore(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_ScriptManager	.//script/lua/LuaBinding.cpp	/^void register_Class_ScriptManager(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_ScriptManager	.//script/lua/LuaBinding.h	/^void register_Class_ScriptManager(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Server	.//script/lua/LuaBinding.cpp	/^void register_Class_Server(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Server	.//script/lua/LuaBinding.h	/^void register_Class_Server(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Terminal	.//script/lua/LuaBinding.cpp	/^void register_Class_Terminal(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Terminal	.//script/lua/LuaBinding.h	/^void register_Class_Terminal(lua_State* L);$/;"	p	signature:(lua_State* L)
register_Class_Timer	.//script/lua/LuaBinding.cpp	/^void register_Class_Timer(lua_State* L)$/;"	f	signature:(lua_State* L)
register_Class_Timer	.//script/lua/LuaBinding.h	/^void register_Class_Timer(lua_State* L);$/;"	p	signature:(lua_State* L)
register_CommonConstant	.//script/lua/LuaBinding.cpp	/^void register_CommonConstant(lua_State* L)$/;"	f	signature:(lua_State* L)
register_CommonConstant	.//script/lua/LuaBinding.h	/^void register_CommonConstant(lua_State* L);$/;"	p	signature:(lua_State* L)
register_NormalFunction	.//script/lua/LuaBinding.cpp	/^void register_NormalFunction(lua_State* L)$/;"	f	signature:(lua_State* L)
register_NormalFunction	.//script/lua/LuaBinding.h	/^void register_NormalFunction(lua_State* L);$/;"	p	signature:(lua_State* L)
register_debug	.//script/lua/LuaDebug.cpp	/^void register_debug(lua_State* L)$/;"	f	signature:(lua_State* L)
register_debug	.//script/lua/LuaDebug.h	/^void register_debug(lua_State* L);$/;"	p	signature:(lua_State* L)
registerlocalvar	.//script/lua/lua-5.3.4/src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:	signature:(LexState *ls, TString *varname)
rehash	.//script/lua/lua-5.3.4/src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:	signature:(lua_State *L, Table *t, const TValue *ek)
release	.//kit/Ref.cpp	/^void Ref::release()$/;"	f	class:kit::Ref	signature:()
release	.//kit/Ref.h	/^    void release();$/;"	p	class:kit::Ref	access:public	signature:()
remarkupvals	.//script/lua/lua-5.3.4/src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:	signature:(global_State *g)
removeFromParent	.//kit/Ref.cpp	/^void Ref::removeFromParent()$/;"	f	class:kit::Ref	signature:()
removeFromParent	.//kit/Ref.h	/^    virtual void removeFromParent();$/;"	p	class:kit::Ref	access:public	signature:()
removeentry	.//script/lua/lua-5.3.4/src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:	signature:(Node *n)
removevalues	.//script/lua/lua-5.3.4/src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:	signature:(FuncState *fs, int list)
removevars	.//script/lua/lua-5.3.4/src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:	signature:(FuncState *fs, int tolevel)
repeatstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:	signature:(LexState *ls, int line)
report	.//script/lua/lua-5.3.4/src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:	signature:(lua_State *L, int status)
reprepstate	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static void reprepstate (MatchState *ms) {$/;"	f	file:	signature:(MatchState *ms)
reserveBuffer	.//kit/Buffer.cpp	/^bool Buffer::reserveBuffer(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
reserveBuffer	.//kit/Buffer.h	/^    bool reserveBuffer(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
reset	.//kit/Buffer.h	/^    void reset();$/;"	p	class:kit::Buffer	access:public	signature:()
reset	.//kit/impl/BufferImpl.h	/^inline void Buffer::reset()$/;"	f	class:kit::Buffer	signature:()
resetValue	.//network/Protocol.cpp	/^void PTArray::resetValue()$/;"	f	class:kit::PTArray	signature:()
resetValue	.//network/Protocol.cpp	/^void PTTable::resetValue()$/;"	f	class:kit::PTTable	signature:()
resetValue	.//network/Protocol.h	/^    virtual void resetValue() {}$/;"	f	class:kit::PTData	access:public	signature:()
resetValue	.//network/Protocol.h	/^    virtual void resetValue();$/;"	p	class:kit::PTArray	access:public	signature:()
resetValue	.//network/Protocol.h	/^    virtual void resetValue();$/;"	p	class:kit::PTTable	access:public	signature:()
resetValue	.//network/Protocol.h	/^    void resetValue() { value_ = 0; }$/;"	f	class:kit::PTValue	access:public	signature:()
resetValue	.//network/Protocol.h	/^inline void PTValue<std::string>::resetValue()$/;"	f	class:kit::PTValue	signature:()
resetbit	.//script/lua/lua-5.3.4/src/lgc.h	/^#define resetbit(/;"	d
resetbits	.//script/lua/lua-5.3.4/src/lgc.h	/^#define resetbits(/;"	d
resethookcount	.//script/lua/lua-5.3.4/src/ldebug.h	/^#define resethookcount(/;"	d
resizebox	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static void *resizebox (lua_State *L, int idx, size_t newsize) {$/;"	f	file:	signature:(lua_State *L, int idx, size_t newsize)
rest	.//base/Queue.h	/^    int rest() const { return Length + 1 - count_; }$/;"	f	class:kit::MinQueue	access:public	signature:() const
rest	.//base/Queue.h	/^    int rest()$/;"	f	class:kit::Queue	access:public	signature:()
restartcollection	.//script/lua/lua-5.3.4/src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:	signature:(global_State *g)
restorestack	.//script/lua/lua-5.3.4/src/ldo.h	/^#define restorestack(/;"	d
resume	.//script/lua/lua-5.3.4/src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
resume_error	.//script/lua/lua-5.3.4/src/ldo.c	/^static int resume_error (lua_State *L, const char *msg, int narg) {$/;"	f	file:	signature:(lua_State *L, const char *msg, int narg)
retain	.//kit/Ref.cpp	/^void Ref::retain()$/;"	f	class:kit::Ref	signature:()
retain	.//kit/Ref.h	/^    void retain();$/;"	p	class:kit::Ref	access:public	signature:()
retstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
reverse	.//script/lua/lua-5.3.4/src/lapi.c	/^static void reverse (lua_State *L, StkId from, StkId to) {$/;"	f	file:	signature:(lua_State *L, StkId from, StkId to)
right	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon13	file:	access:public
righttt	.//script/lua/lua-5.3.4/src/lobject.h	/^#define righttt(/;"	d
rttype	.//script/lua/lua-5.3.4/src/lobject.h	/^#define rttype(/;"	d
run	.//kit/Thread.cpp	/^void IThread::run()$/;"	f	class:kit::IThread	signature:()
run	.//kit/Thread.h	/^    virtual void run();$/;"	p	class:kit::IThread	access:public	signature:()
runafewfinalizers	.//script/lua/lua-5.3.4/src/lgc.c	/^static int runafewfinalizers (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
runargs	.//script/lua/lua-5.3.4/src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:	signature:(lua_State *L, char **argv, int n)
s	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:	access:public
s	.//script/lua/lua-5.3.4/src/llimits.h	/^  void *s;$/;"	m	union:__anon9	access:public
save	.//script/lua/lua-5.3.4/src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:	signature:(LexState *ls, int c)
save_and_next	.//script/lua/lua-5.3.4/src/llex.c	/^#define save_and_next(/;"	d	file:
savedpc	.//script/lua/lua-5.3.4/src/lstate.h	/^      const Instruction *savedpc;$/;"	m	struct:CallInfo::__anon18::__anon19	access:public
savestack	.//script/lua/lua-5.3.4/src/ldo.h	/^#define savestack(/;"	d
scanformat	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:	signature:(lua_State *L, const char *strfrmt, char *form)
searcher_C	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
searcher_Croot	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
searcher_Lua	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
searcher_preload	.//script/lua/lua-5.3.4/src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
searchpath	.//script/lua/lua-5.3.4/src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:	signature:(lua_State *L, const char *name, const char *path, const char *sep, const char *dirsep)
searchupvalue	.//script/lua/lua-5.3.4/src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:	signature:(FuncState *fs, TString *name)
searchvar	.//script/lua/lua-5.3.4/src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:	signature:(FuncState *fs, TString *n)
seed	.//network/Packet.h	/^    uint16_t seed; \/\/验证种子$/;"	m	struct:kit::PacketHeader	access:public
seed	.//script/lua/lua-5.3.4/src/lstate.h	/^  unsigned int seed;  \/* randomized seed for hashes *\/$/;"	m	struct:global_State	access:public
semerror	.//script/lua/lua-5.3.4/src/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:	signature:(LexState *ls, const char *msg)
seminfo	.//script/lua/lua-5.3.4/src/llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token	access:public
send	.//network/Socket.cpp	/^int32_t ISocket::send(const char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::ISocket	signature:(const char* buf, int32_t size, int32_t mode)
send	.//network/Socket.h	/^	int32_t send(const char* buf, int32_t size, int32_t mode = 0);$/;"	p	class:kit::ISocket	access:public	signature:(const char* buf, int32_t size, int32_t mode = 0)
send	.//network/platform/win/Socket.cpp	/^int32_t Socket::send(const char* buf, int32_t size, int32_t mode)$/;"	f	class:kit::Socket	signature:(const char* buf, int32_t size, int32_t mode)
sendBuffer	.//network/Socket.cpp	/^int32_t ISocket::sendBuffer(Buffer* buf)$/;"	f	class:kit::ISocket	signature:(Buffer* buf)
sendBuffer	.//network/Socket.h	/^    int32_t sendBuffer(Buffer* buf);$/;"	p	class:kit::ISocket	access:protected	signature:(Buffer* buf)
sendClear	.//network/Socket.cpp	/^void ISocket::sendClear()$/;"	f	class:kit::ISocket	signature:()
sendClear	.//network/Socket.h	/^	void sendClear();$/;"	p	class:kit::ISocket	access:protected	signature:()
sendPacket	.//network/Client.cpp	/^void IClient::sendPacket(Packet* buf)$/;"	f	class:kit::IClient	signature:(Packet* buf)
sendPacket	.//network/Client.h	/^    void sendPacket(Packet* buf);$/;"	p	class:kit::IClient	access:public	signature:(Packet* buf)
sendPacket	.//network/Session.cpp	/^bool Session::sendPacket(Packet* pack)$/;"	f	class:kit::Session	signature:(Packet* pack)
sendPacket	.//network/Session.h	/^    bool sendPacket(Packet* pack);$/;"	p	class:kit::Session	access:public	signature:(Packet* pack)
sendPacket	.//network/Socket.cpp	/^int32_t ISocket::sendPacket(Packet* pack)$/;"	f	class:kit::ISocket	signature:(Packet* pack)
sendPacket	.//network/Socket.h	/^    int32_t sendPacket(Packet* pack);$/;"	p	class:kit::ISocket	access:public	signature:(Packet* pack)
sendProtocol	.//network/Terminal.cpp	/^void Terminal::sendProtocol(SessionID sid, const Protocol* pto)$/;"	f	class:kit::Terminal	signature:(SessionID sid, const Protocol* pto)
sendProtocol	.//network/Terminal.h	/^    void sendProtocol(SessionID sid, const Protocol* pto);$/;"	p	class:kit::Terminal	access:public	signature:(SessionID sid, const Protocol* pto)
sendTo	.//network/Socket.cpp	/^int32_t ISocket::sendTo(const char* buf, int32_t size, int32_t mode, SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(const char* buf, int32_t size, int32_t mode, SockAddr* addr)
sendTo	.//network/Socket.h	/^	int32_t sendTo(const char* buf, int32_t size, int32_t mode, SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(const char* buf, int32_t size, int32_t mode, SockAddr* addr)
sendTo	.//network/platform/win/Socket.cpp	/^int32_t Socket::sendTo(const char* buf, int32_t size, int32_t mode, const sockaddr* addr)$/;"	f	class:kit::Socket	signature:(const char* buf, int32_t size, int32_t mode, const sockaddr* addr)
send_buf_	.//network/Socket.h	/^    Buffer* send_buf_;$/;"	m	class:kit::ISocket	access:private
send_bufs_	.//network/Socket.h	/^    Buffer* send_bufs_;$/;"	m	class:kit::ISocket	access:private
send_head_buf_	.//network/Socket.h	/^    Buffer* send_head_buf_;$/;"	m	class:kit::ISocket	access:private
send_packet_	.//network/Socket.h	/^    Packet* send_packet_;$/;"	m	class:kit::ISocket	access:private
send_packets_	.//network/Session.h	/^    PacketQue send_packets_;$/;"	m	class:kit::Session	access:protected
send_que_	.//network/Socket.h	/^    PacketQue send_que_;$/;"	m	class:kit::ISocket	access:private
separatetobefnz	.//script/lua/lua-5.3.4/src/lgc.c	/^static void separatetobefnz (global_State *g, int all) {$/;"	f	file:	signature:(global_State *g, int all)
serialize	.//network/Protocol.cpp	/^bool PTArray::serialize(Buffer* buffer) const$/;"	f	class:kit::PTArray	signature:(Buffer* buffer) const
serialize	.//network/Protocol.cpp	/^bool PTTable::serialize(Buffer* buffer) const$/;"	f	class:kit::PTTable	signature:(Buffer* buffer) const
serialize	.//network/Protocol.cpp	/^bool PTValue<T>::serialize(Buffer* buffer) const$/;"	f	class:kit::PTValue	signature:(Buffer* buffer) const
serialize	.//network/Protocol.cpp	/^bool PTVarint::serialize(Buffer* buffer) const$/;"	f	class:kit::PTVarint	signature:(Buffer* buffer) const
serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const = 0;$/;"	p	class:kit::PTData	access:public	signature:(Buffer* buffer) const
serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const; $/;"	p	class:kit::PTArray	access:public	signature:(Buffer* buffer) const
serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const;$/;"	p	class:kit::PTTable	access:public	signature:(Buffer* buffer) const
serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const;$/;"	p	class:kit::PTValue	access:public	signature:(Buffer* buffer) const
serialize	.//network/Protocol.h	/^    virtual bool serialize(Buffer* buffer) const;$/;"	p	class:kit::PTVarint	access:public	signature:(Buffer* buffer) const
serializeToTable	.//script/lua/LuaProtocol.cpp	/^int32_t LuaProtocol::serializeToTable(lua_State* L)$/;"	f	class:LuaProtocol	signature:(lua_State* L)
serializeToTable	.//script/lua/LuaProtocol.h	/^    int32_t serializeToTable(lua_State* L);$/;"	p	class:LuaProtocol	access:public	signature:(lua_State* L)
session_	.//network/Socket.h	/^    Session* session_;$/;"	m	class:kit::ISocket	access:protected
session_id_count_	.//network/Session.cpp	/^SessionID Session::session_id_count_ = 0;$/;"	m	class:kit::Session	file:
session_id_count_	.//network/Session.h	/^    static SessionID session_id_count_;$/;"	m	class:kit::Session	access:public
session_map_	.//network/Terminal.h	/^    SessionMap session_map_;$/;"	m	class:kit::Terminal	access:protected
set	.//base/Array.h	/^    void set(int index, const Type& val)$/;"	f	class:kit::Array	access:public	signature:(int index, const Type& val)
set	.//base/Map.h	/^    void set(KeyType key, const ValueType& v)$/;"	f	class:kit::Map	access:public	signature:(KeyType key, const ValueType& v)
set2	.//script/lua/lua-5.3.4/src/ltablib.c	/^static void set2 (lua_State *L, IdxT i, IdxT j) {$/;"	f	file:	signature:(lua_State *L, IdxT i, IdxT j)
setAPI	.//kit/Logger.cpp	/^void Logger::setAPI(int t, Logger::LoggerAPI api)$/;"	f	class:kit::Logger	signature:(int t, Logger::LoggerAPI api)
setAPI	.//kit/Logger.h	/^    void setAPI(int t, LoggerAPI api);$/;"	p	class:kit::Logger	access:public	signature:(int t, LoggerAPI api)
setAddr	.//network/Socket.cpp	/^void ISocket::setAddr(SockAddr* addr)$/;"	f	class:kit::ISocket	signature:(SockAddr* addr)
setAddr	.//network/Socket.h	/^    void setAddr(SockAddr* addr);$/;"	p	class:kit::ISocket	access:public	signature:(SockAddr* addr)
setBudgetSize	.//network/Protocol.h	/^    void setBudgetSize(size_t size) { budget_size_ = size; }$/;"	f	class:kit::Protocol	access:public	signature:(size_t size)
setBuffer	.//network/Packet.cpp	/^void Packet::setBuffer(Buffer* buf)$/;"	f	class:kit::Packet	signature:(Buffer* buf)
setBuffer	.//network/Packet.h	/^    void setBuffer(Buffer* buf);$/;"	p	class:kit::Packet	access:public	signature:(Buffer* buf)
setDataValue	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::setDataValue(kit::PTData* data, const LuaIntf::LuaRef* t)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
setDataValue	.//script/lua/LuaProtocol.h	/^    void setDataValue(kit::PTData* data, const LuaIntf::LuaRef* t);$/;"	p	class:LuaPTCreator	access:public	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
setFrameRate	.//Gear.cpp	/^void Gear::setFrameRate(unsigned int rate)$/;"	f	class:kit::Gear	signature:(unsigned int rate)
setFrameRate	.//Gear.h	/^    void setFrameRate(uint32_t rate);$/;"	p	class:kit::Gear	access:public	signature:(uint32_t rate)
setHandle	.//network/Socket.cpp	/^void ISocket::setHandle(SocketID sock)$/;"	f	class:kit::ISocket	signature:(SocketID sock)
setHandle	.//network/Socket.h	/^	void setHandle(SocketID sock);$/;"	p	class:kit::ISocket	access:public	signature:(SocketID sock)
setHandle	.//network/platform/win/Socket.cpp	/^void Socket::setHandle(int32_t sock)$/;"	f	class:kit::Socket	signature:(int32_t sock)
setHandler	.//debug/DebugInput.cpp	/^void DebugInput::setHandler(const std::string& cmd, DebugCmdHandler handler)$/;"	f	class:kit::DebugInput	signature:(const std::string& cmd, DebugCmdHandler handler)
setHandler	.//debug/DebugInput.h	/^    virtual void setHandler(const std::string& cmd, DebugCmdHandler handler);$/;"	p	class:kit::DebugInput	access:public	signature:(const std::string& cmd, DebugCmdHandler handler)
setHandler	.//kit/Thread.cpp	/^void IThread::setHandler(ThreadHandler* handler)$/;"	f	class:kit::IThread	signature:(ThreadHandler* handler)
setHandler	.//kit/Thread.h	/^    virtual void setHandler(ThreadHandler* handler);$/;"	p	class:kit::IThread	access:public	signature:(ThreadHandler* handler)
setKey	.//network/Protocol.h	/^    void setKey(const std::string& k) { key_ = k; }$/;"	f	class:kit::PTData	access:public	signature:(const std::string& k)
setNextDeltaZero	.//Gear.h	/^    void setNextDeltaZero(bool zero) { next_delta_zero_ = zero; }$/;"	f	class:kit::Gear	access:public	signature:(bool zero)
setOption	.//network/Socket.cpp	/^int32_t ISocket::setOption(int32_t level, int32_t optname, const char* optval, int32_t optlen)$/;"	f	class:kit::ISocket	signature:(int32_t level, int32_t optname, const char* optval, int32_t optlen)
setOption	.//network/Socket.h	/^	int32_t setOption(int32_t level, int32_t optname, const char* optval, int32_t optlen);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t level, int32_t optname, const char* optval, int32_t optlen)
setOption	.//network/platform/win/Socket.cpp	/^int32_t Socket::setOption(int32_t level, int32_t optname, const char* optval, int32_t optlen)$/;"	f	class:kit::Socket	signature:(int32_t level, int32_t optname, const char* optval, int32_t optlen)
setScriptDir	.//script/ScriptSupport.h	/^    virtual void setScriptDir(const char* path) { path_ = path; }$/;"	f	class:kit::ScriptCore	access:public	signature:(const char* path)
setSeed	.//network/Packet.h	/^    void setSeed(uint16_t seed) { header_.seed = seed; }$/;"	f	class:kit::Packet	access:public	signature:(uint16_t seed)
setSession	.//network/Socket.h	/^    void setSession(Session* session) { session_ = session; }$/;"	f	class:kit::ISocket	access:public	signature:(Session* session)
setSize	.//kit/Buffer.h	/^    void setSize(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
setSize	.//kit/impl/BufferImpl.h	/^inline void Buffer::setSize(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
setSocket	.//network/Session.cpp	/^void Session::setSocket(Socket* sock)$/;"	f	class:kit::Session	signature:(Socket* sock)
setSocket	.//network/Session.h	/^    void setSocket(Socket* sock);$/;"	p	class:kit::Session	access:public	signature:(Socket* sock)
setTemplate	.//network/Protocol.cpp	/^void PTArray::setTemplate(PTData* data)$/;"	f	class:kit::PTArray	signature:(PTData* data)
setTemplate	.//network/Protocol.h	/^    void setTemplate(PTData* data);$/;"	p	class:kit::PTArray	access:public	signature:(PTData* data)
setType	.//network/Protocol.h	/^    virtual void setType(PTType type) { type_ = type; }$/;"	f	class:kit::PTValue	access:public	signature:(PTType type)
setType	.//network/Protocol.h	/^    virtual void setType(PTType type) {}$/;"	f	class:kit::PTData	access:public	signature:(PTType type)
setValue	.//network/Protocol.h	/^    void setValue(const T& v) { value_ = v; }$/;"	f	class:kit::PTValue	access:public	signature:(const T& v)
set_env	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
setallfields	.//script/lua/lua-5.3.4/src/loslib.c	/^static void setallfields (lua_State *L, struct tm *stm) {$/;"	f	file:	signature:(lua_State *L, struct tm *stm)
setarg	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define setarg(/;"	d
setarrayvector	.//script/lua/lua-5.3.4/src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:	signature:(lua_State *L, Table *t, unsigned int size)
setbits	.//script/lua/lua-5.3.4/src/lgc.h	/^#define setbits(/;"	d
setboolfield	.//script/lua/lua-5.3.4/src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:	signature:(lua_State *L, const char *key, int value)
setbvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setbvalue(/;"	d
setclCvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setclCvalue(/;"	d
setclLvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setclLvalue(/;"	d
setdeadvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setdeadvalue(/;"	d
seterrorobj	.//script/lua/lua-5.3.4/src/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:	signature:(lua_State *L, int errcode, StkId oldtop)
setfield	.//script/lua/lua-5.3.4/src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:	signature:(lua_State *L, const char *key, int value)
setfltvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setfltvalue(/;"	d
setfvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setfvalue(/;"	d
setgcovalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setgcovalue(/;"	d
sethvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define sethvalue(/;"	d
sethvalue2s	.//script/lua/lua-5.3.4/src/lobject.h	/^#define sethvalue2s	/;"	d
setivalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setivalue(/;"	d
setnilvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setnilvalue(/;"	d
setnodekey	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setnodekey(/;"	d
setnodevector	.//script/lua/lua-5.3.4/src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, unsigned int size) {$/;"	f	file:	signature:(lua_State *L, Table *t, unsigned int size)
setoah	.//script/lua/lua-5.3.4/src/lstate.h	/^#define setoah(/;"	d
setobj	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setobj(/;"	d
setobj2n	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setobj2n	/;"	d
setobj2s	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setobj2s	/;"	d
setobj2t	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setobj2t(/;"	d
setobjs2s	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setobjs2s	/;"	d
setobjt2t	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setobjt2t	/;"	d
setpath	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname,$/;"	f	file:	signature:(lua_State *L, const char *fieldname, const char *envname, const char *dft)
setpause	.//script/lua/lua-5.3.4/src/lgc.c	/^static void setpause (global_State *g) {$/;"	f	file:	signature:(global_State *g)
setprogdir	.//script/lua/lua-5.3.4/src/loadlib.c	/^#define setprogdir(/;"	d	file:
setprogdir	.//script/lua/lua-5.3.4/src/loadlib.c	/^#undef setprogdir$/;"	d	file:
setprogdir	.//script/lua/lua-5.3.4/src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
setptvalue2s	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setptvalue2s	/;"	d
setpvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setpvalue(/;"	d
setsvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setsvalue(/;"	d
setsvalue2n	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setsvalue2n	/;"	d
setsvalue2s	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setsvalue2s	/;"	d
settableProtected	.//script/lua/lua-5.3.4/src/lvm.c	/^#define settableProtected(/;"	d	file:
settabsb	.//script/lua/lua-5.3.4/src/ldblib.c	/^static void settabsb (lua_State *L, const char *k, int v) {$/;"	f	file:	signature:(lua_State *L, const char *k, int v)
settabsi	.//script/lua/lua-5.3.4/src/ldblib.c	/^static void settabsi (lua_State *L, const char *k, int v) {$/;"	f	file:	signature:(lua_State *L, const char *k, int v)
settabss	.//script/lua/lua-5.3.4/src/ldblib.c	/^static void settabss (lua_State *L, const char *k, const char *v) {$/;"	f	file:	signature:(lua_State *L, const char *k, const char *v)
setthvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setthvalue(/;"	d
settt_	.//script/lua/lua-5.3.4/src/lobject.h	/^#define settt_(/;"	d
setuservalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setuservalue(/;"	d
setuvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define setuvalue(/;"	d
short_src	.//script/lua/lua-5.3.4/src/lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	access:public
shrlen	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte shrlen;  \/* length for short strings *\/$/;"	m	struct:TString	access:public
shutdown	.//network/Client.cpp	/^int32_t IClient::shutdown()$/;"	f	class:kit::IClient	signature:()
shutdown	.//network/Client.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::IClient	access:public	signature:()
shutdown	.//network/Server.cpp	/^int32_t IServer::shutdown()$/;"	f	class:kit::IServer	signature:()
shutdown	.//network/Server.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::IServer	access:public	signature:()
shutdown	.//network/Socket.cpp	/^int32_t ISocket::shutdown(int32_t mode)$/;"	f	class:kit::ISocket	signature:(int32_t mode)
shutdown	.//network/Socket.h	/^	int32_t shutdown(int32_t mode);$/;"	p	class:kit::ISocket	access:public	signature:(int32_t mode)
shutdown	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::shutdown()$/;"	f	class:kit::Client	signature:()
shutdown	.//network/platform/linux/Client_linux.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::Client	access:public	signature:()
shutdown	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::shutdown()$/;"	f	class:kit::Server	signature:()
shutdown	.//network/platform/linux/Server_linux.h	/^	virtual int32_t shutdown();$/;"	p	class:kit::Server	access:public	signature:()
shutdown	.//network/platform/win/Server.cpp	/^void Server::shutdown()$/;"	f	class:kit::Server	signature:()
shutdown	.//network/platform/win/Socket.cpp	/^int32_t Socket::shutdown(int32_t mode)$/;"	f	class:kit::Socket	signature:(int32_t mode)
sid_	.//network/Session.h	/^    SessionID sid_;$/;"	m	class:kit::Session	access:protected
simpleexp	.//script/lua/lua-5.3.4/src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
singlematch	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p, const char *ep)
singlestep	.//script/lua/lua-5.3.4/src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
singlevar	.//script/lua/lua-5.3.4/src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:	signature:(LexState *ls, expdesc *var)
singlevaraux	.//script/lua/lua-5.3.4/src/lparser.c	/^static void singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:	signature:(FuncState *fs, TString *n, expdesc *var, int base)
size	.//script/lua/lua-5.3.4/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:	access:public
size	.//script/lua/lua-5.3.4/src/lauxlib.h	/^  size_t size;  \/* buffer size *\/$/;"	m	struct:luaL_Buffer	access:public
size	.//script/lua/lua-5.3.4/src/lparser.h	/^    int size;$/;"	m	struct:Dyndata::__anon17	access:public
size	.//script/lua/lua-5.3.4/src/lparser.h	/^  int size;  \/* array size *\/$/;"	m	struct:Labellist	access:public
size	.//script/lua/lua-5.3.4/src/lstate.h	/^  int size;$/;"	m	struct:stringtable	access:public
sizeCclosure	.//script/lua/lua-5.3.4/src/lfunc.h	/^#define sizeCclosure(/;"	d
sizeLclosure	.//script/lua/lua-5.3.4/src/lfunc.h	/^#define sizeLclosure(/;"	d
sizearray	.//script/lua/lua-5.3.4/src/lobject.h	/^  unsigned int sizearray;  \/* size of 'array' array *\/$/;"	m	struct:Table	access:public
sizecode	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizecode;$/;"	m	struct:Proto	access:public
sizek	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizek;  \/* size of 'k' *\/$/;"	m	struct:Proto	access:public
sizelineinfo	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto	access:public
sizelocvars	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto	access:public
sizelstring	.//script/lua/lua-5.3.4/src/lstring.h	/^#define sizelstring(/;"	d
sizeludata	.//script/lua/lua-5.3.4/src/lstring.h	/^#define sizeludata(/;"	d
sizenode	.//script/lua/lua-5.3.4/src/lobject.h	/^#define sizenode(/;"	d
sizep	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizep;  \/* size of 'p' *\/$/;"	m	struct:Proto	access:public
sizeudata	.//script/lua/lua-5.3.4/src/lstring.h	/^#define sizeudata(/;"	d
sizeupvalues	.//script/lua/lua-5.3.4/src/lobject.h	/^  int sizeupvalues;  \/* size of 'upvalues' *\/$/;"	m	struct:Proto	access:public
skipBOM	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:	signature:(LoadF *lf)
skipRead	.//kit/Buffer.h	/^    void skipRead(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
skipRead	.//kit/impl/BufferImpl.h	/^inline void Buffer::skipRead(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
skipWrite	.//kit/Buffer.h	/^    void skipWrite(size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(size_t size)
skipWrite	.//kit/impl/BufferImpl.h	/^inline void Buffer::skipWrite(size_t size)$/;"	f	class:kit::Buffer	signature:(size_t size)
skip_sep	.//script/lua/lua-5.3.4/src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
skipcomment	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:	signature:(LoadF *lf, int *cp)
skipnoopstat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
sleep	.//kit/kitsys.cpp	/^void sleep(uint32_t msec)$/;"	f	namespace:kit	signature:(uint32_t msec)
sleep	.//kit/kitsys.h	/^void sleep(uint32_t msec);$/;"	p	namespace:kit	signature:(uint32_t msec)
sock_	.//network/Socket.h	/^	SocketID sock_;$/;"	m	class:kit::ISocket	access:protected
socket_	.//network/Client.h	/^	Socket* socket_;$/;"	m	class:kit::IClient	access:protected
socket_	.//network/Server.h	/^	Socket* socket_;$/;"	m	class:kit::IServer	access:protected
socket_	.//network/Session.h	/^    Socket* socket_;$/;"	m	class:kit::Session	access:protected
sockets_	.//network/Server.h	/^    Socket* sockets_[CONNECTION_LIMIT];$/;"	m	class:kit::IServer	access:protected
sof	.//script/lua/lua-5.3.4/src/ltablib.c	/^#define sof(/;"	d	file:
sort	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
sort_comp	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:	signature:(lua_State *L, int a, int b)
source	.//script/lua/lua-5.3.4/src/llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState	access:public
source	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString  *source;  \/* used for debug information *\/$/;"	m	struct:Proto	access:public
source	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	access:public
spareLogic	.//Gear.h	/^    virtual uint32_t spareLogic(uint32_t spare_time) { return spare_time; };$/;"	f	class:kit::Gear	access:public	signature:(uint32_t spare_time)
split	.//kit/Functions.cpp	/^void split(const std::string& text, std::vector<std::string>& vec, char separator)$/;"	f	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, char separator)
split	.//kit/Functions.h	/^void split(const std::string& text, std::vector<std::string>& vec, const char separator);$/;"	p	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, const char separator)
splitWithString	.//kit/Functions.cpp	/^void splitWithString(const std::string& text, std::vector<std::string>& vec, const std::string& separator)$/;"	f	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, const std::string& separator)
splitWithString	.//kit/Functions.h	/^void splitWithString(const std::string& text, std::vector<std::string>& vec, const std::string& separator);$/;"	p	namespace:kit	signature:(const std::string& text, std::vector<std::string>& vec, const std::string& separator)
src	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *src;  \/* current position *\/$/;"	m	struct:GMatchState	file:	access:public
src_end	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:	access:public
src_init	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:	access:public
stack	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State	access:public
stack_init	.//script/lua/lua-5.3.4/src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:	signature:(lua_State *L1, lua_State *L)
stack_last	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State	access:public
stackerror	.//script/lua/lua-5.3.4/src/ldo.c	/^static void stackerror (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
stackinuse	.//script/lua/lua-5.3.4/src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
stacksize	.//script/lua/lua-5.3.4/src/lstate.h	/^  int stacksize;$/;"	m	struct:lua_State	access:public
start	.//kit/Thread.h	/^    virtual int32_t start() = 0;$/;"	p	class:kit::IThread	access:public	signature:()
start	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Thread::start()$/;"	f	class:kit::Thread	signature:()
start	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t start();$/;"	p	class:kit::Thread	access:public	signature:()
start_capture	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:	signature:(MatchState *ms, const char *s, const char *p, int what)
startpc	.//script/lua/lua-5.3.4/src/lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar	access:public
startup	.//network/Client.cpp	/^int32_t IClient::startup(const char* ip, int32_t port)$/;"	f	class:kit::IClient	signature:(const char* ip, int32_t port)
startup	.//network/Client.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::IClient	access:public	signature:(const char* ip, int32_t port)
startup	.//network/Server.cpp	/^int32_t IServer::startup(const char* ip, int32_t port)$/;"	f	class:kit::IServer	signature:(const char* ip, int32_t port)
startup	.//network/Server.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::IServer	access:public	signature:(const char* ip, int32_t port)
startup	.//network/platform/linux/Client_linux.cpp	/^int32_t Client::startup(const char* ip, int32_t port)$/;"	f	class:kit::Client	signature:(const char* ip, int32_t port)
startup	.//network/platform/linux/Client_linux.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::Client	access:public	signature:(const char* ip, int32_t port)
startup	.//network/platform/linux/Server_linux.cpp	/^int32_t Server::startup(const char* ip, int32_t port)$/;"	f	class:kit::Server	signature:(const char* ip, int32_t port)
startup	.//network/platform/linux/Server_linux.h	/^	virtual int32_t startup(const char* ip, int32_t port);$/;"	p	class:kit::Server	access:public	signature:(const char* ip, int32_t port)
startup	.//network/platform/win/Server.cpp	/^void Server::startup(const char* ip, int32_t port)$/;"	f	class:kit::Server	signature:(const char* ip, int32_t port)
statement	.//script/lua/lua-5.3.4/src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
statement	.//script/lua/lua-5.3.4/src/lparser.c	/^static void statement (LexState *ls);$/;"	p	file:	signature:(LexState *ls)
statlist	.//script/lua/lua-5.3.4/src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
status	.//script/lua/lua-5.3.4/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:	access:public
status	.//script/lua/lua-5.3.4/src/ldump.c	/^  int status;$/;"	m	struct:__anon4	file:	access:public
status	.//script/lua/lua-5.3.4/src/lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State	access:public
stop	.//Gear.cpp	/^void Gear::stop()$/;"	f	class:kit::Gear	signature:()
stop	.//Gear.h	/^    virtual void stop();$/;"	p	class:kit::Gear	access:public	signature:()
stop	.//kit/Thread.cpp	/^void IThread::stop()$/;"	f	class:kit::IThread	signature:()
stop	.//kit/Thread.h	/^    virtual void stop();$/;"	p	class:kit::IThread	access:public	signature:()
str_byte	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_char	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_checkname	.//script/lua/lua-5.3.4/src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
str_dump	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_find	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_find_aux	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:	signature:(lua_State *L, int find)
str_format	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_gsub	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_len	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_lower	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_match	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_pack	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_pack (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_packsize	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_packsize (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_rep	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_reverse	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_sub	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_unpack	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_unpack (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
str_upper	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
strcache	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString *strcache[STRCACHE_N][STRCACHE_M];  \/* cache for strings in API *\/$/;"	m	struct:global_State	access:public
stringtable	.//script/lua/lua-5.3.4/src/lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	.//script/lua/lua-5.3.4/src/lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
stringtable::hash	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString **hash;$/;"	m	struct:stringtable	access:public
stringtable::nuse	.//script/lua/lua-5.3.4/src/lstate.h	/^  int nuse;  \/* number of elements *\/$/;"	m	struct:stringtable	access:public
stringtable::size	.//script/lua/lua-5.3.4/src/lstate.h	/^  int size;$/;"	m	struct:stringtable	access:public
strip	.//script/lua/lua-5.3.4/src/ldump.c	/^  int strip;$/;"	m	struct:__anon4	file:	access:public
stripping	.//script/lua/lua-5.3.4/src/luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	file:
strlib	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
strt	.//script/lua/lua-5.3.4/src/lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State	access:public
subexpr	.//script/lua/lua-5.3.4/src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:	signature:(LexState *ls, expdesc *v, int limit)
suffixedexp	.//script/lua/lua-5.3.4/src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
svalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define svalue(/;"	d
swapextra	.//script/lua/lua-5.3.4/src/ldebug.c	/^static void swapextra (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
sweepgc	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject **sweepgc;  \/* current position of sweep in list *\/$/;"	m	struct:global_State	access:public
sweeplist	.//script/lua/lua-5.3.4/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:	signature:(lua_State *L, GCObject **p, lu_mem count)
sweeplist	.//script/lua/lua-5.3.4/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count);$/;"	p	file:	signature:(lua_State *L, GCObject **p, lu_mem count)
sweepstep	.//script/lua/lua-5.3.4/src/lgc.c	/^static lu_mem sweepstep (lua_State *L, global_State *g,$/;"	f	file:	signature:(lua_State *L, global_State *g, int nextstate, GCObject **nextlist)
sweeptolive	.//script/lua/lua-5.3.4/src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p) {$/;"	f	file:	signature:(lua_State *L, GCObject **p)
sweepwholelist	.//script/lua/lua-5.3.4/src/lgc.c	/^#define sweepwholelist(/;"	d	file:
syslib	.//script/lua/lua-5.3.4/src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	.//script/lua/lua-5.3.4/src/llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState	access:public
t	.//script/lua/lua-5.3.4/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:	access:public
t	.//script/lua/lua-5.3.4/src/lparser.h	/^      lu_byte t;  \/* table (register or upvalue) *\/$/;"	m	struct:expdesc::__anon15::__anon16	access:public
t	.//script/lua/lua-5.3.4/src/lparser.h	/^  int t;  \/* patch list of 'exit when true' *\/$/;"	m	struct:expdesc	access:public
tab_funcs	.//script/lua/lua-5.3.4/src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
tag_error	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static void tag_error (lua_State *L, int arg, int tag) {$/;"	f	file:	signature:(lua_State *L, int arg, int tag)
tail_	.//base/Array.h	/^    int tail_;$/;"	m	class:kit::Array	access:private
tail_	.//base/List.h	/^    Item* tail_;$/;"	m	class:kit::List	access:private
tail_	.//base/Queue.h	/^    int tail_;$/;"	m	class:kit::Queue	access:private
tail_	.//kit/Buffer.h	/^    uint8_t* tail_;$/;"	m	class:kit::Buffer	access:protected
tconcat	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
test2	.//script/lua/lua-5.3.4/src/liolib.c	/^static int test2 (RN *rn, const char *set) {$/;"	f	file:	signature:(RN *rn, const char *set)
testAMode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define testAMode(/;"	d
testTMode	.//script/lua/lua-5.3.4/src/lopcodes.h	/^#define testTMode(/;"	d
test_eof	.//script/lua/lua-5.3.4/src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:	signature:(lua_State *L, FILE *f)
test_table	.//script/lua/LuaBinding.cpp	/^void test_table(lua_State* L)$/;"	f	signature:(lua_State* L)
test_then_block	.//script/lua/lua-5.3.4/src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:	signature:(LexState *ls, int *escapelist)
testbit	.//script/lua/lua-5.3.4/src/lgc.h	/^#define testbit(/;"	d
testbits	.//script/lua/lua-5.3.4/src/lgc.h	/^#define testbits(/;"	d
testnext	.//script/lua/lua-5.3.4/src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:	signature:(LexState *ls, int c)
testprop	.//script/lua/lua-5.3.4/src/lctype.h	/^#define testprop(/;"	d
th	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCUnion	typeref:struct:GCUnion::lua_State	access:public
thread_	.//network/platform/linux/Client_linux.h	/^    Thread* thread_;$/;"	m	class:kit::Client	access:private
thread_	.//network/platform/linux/Server_linux.h	/^    Thread* thread_;$/;"	m	class:kit::Server	access:private
thread_pool_	.//kit/BufferPool.h	/^    BufferPool* thread_pool_;$/;"	m	class:kit::BufferPoolManager	access:private
thread_start	.//kit/platform/linux/Thread_linux.cpp	/^void* thread_start(void *p)$/;"	f	namespace:kit	signature:(void *p)
thvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define thvalue(/;"	d
tick	.//kit/kitsys.cpp	/^static inline uint64_t tick()$/;"	f	namespace:kit	signature:()
time	.//kit/kitsys.cpp	/^uint32_t time()$/;"	f	namespace:kit	signature:()
time	.//kit/kitsys.h	/^uint32_t time();$/;"	p	namespace:kit	signature:()
time_	.//network/Session.h	/^    uint32_t time_;$/;"	m	class:kit::Session	access:protected
tinsert	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
tmname	.//script/lua/lua-5.3.4/src/lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State	access:public
tmove	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int tmove (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
toString	.//kit/Buffer.cpp	/^std::string Buffer::toString() const$/;"	f	class:kit::Buffer	signature:() const
toString	.//kit/Buffer.h	/^    std::string toString() const;$/;"	p	class:kit::Buffer	access:public	signature:() const
toString	.//kit/Ref.h	/^    virtual std::string toString() const { return "----[Ref]----"; }$/;"	f	class:kit::Ref	access:public	signature:() const
toString	.//network/Protocol.cpp	/^std::string PTArray::toString() const$/;"	f	class:kit::PTArray	signature:() const
toString	.//network/Protocol.cpp	/^std::string PTTable::toString() const$/;"	f	class:kit::PTTable	signature:() const
toString	.//network/Protocol.cpp	/^std::string PTValue<T>::toString() const$/;"	f	class:kit::PTValue	signature:() const
toString	.//network/Protocol.cpp	/^std::string PTValue<std::string>::toString() const$/;"	f	class:kit::PTValue	signature:() const
toString	.//network/Protocol.cpp	/^std::string Protocol::toString() const$/;"	f	class:kit::Protocol	signature:() const
toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::PTArray	access:public	signature:() const
toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::PTTable	access:public	signature:() const
toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::PTValue	access:public	signature:() const
toString	.//network/Protocol.h	/^    virtual std::string toString() const;$/;"	p	class:kit::Protocol	access:public	signature:() const
tobefnz	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *tobefnz;  \/* list of userdata to be GC *\/$/;"	m	struct:global_State	access:public
tofile	.//script/lua/lua-5.3.4/src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
tofinalize	.//script/lua/lua-5.3.4/src/lgc.h	/^#define tofinalize(/;"	d
toint	.//network/Protocol.h	/^inline constexpr int toint(PTType t)$/;"	f	namespace:kit	signature:(PTType t)
tointeger	.//script/lua/lua-5.3.4/src/lvm.h	/^#define tointeger(/;"	d
token	.//script/lua/lua-5.3.4/src/llex.h	/^  int token;$/;"	m	struct:Token	access:public
tolstream	.//script/lua/lua-5.3.4/src/liolib.c	/^#define tolstream(/;"	d	file:
tonumber	.//script/lua/lua-5.3.4/src/lvm.h	/^#define tonumber(/;"	d
tonumeral	.//script/lua/lua-5.3.4/src/lcode.c	/^static int tonumeral(const expdesc *e, TValue *v) {$/;"	f	file:	signature:(const expdesc *e, TValue *v)
top	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo	access:public
top	.//script/lua/lua-5.3.4/src/lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State	access:public
toproto	.//script/lua/lua-5.3.4/src/luac.c	/^#define toproto(/;"	d	file:
tostore	.//script/lua/lua-5.3.4/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:	access:public
tostring	.//script/lua/lua-5.3.4/src/lvm.c	/^#define tostring(/;"	d	file:
totalbytes	.//script/lua/lua-5.3.4/src/lstate.h	/^  l_mem totalbytes;  \/* number of bytes currently allocated - GCdebt *\/$/;"	m	struct:global_State	access:public
touched	.//script/lua/lua-5.3.4/src/lfunc.h	/^      int touched;  \/* mark to avoid cycles with dead threads *\/$/;"	m	struct:UpVal::__anon5::__anon6	access:public
traverseCclosure	.//script/lua/lua-5.3.4/src/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:	signature:(global_State *g, CClosure *cl)
traverseLclosure	.//script/lua/lua-5.3.4/src/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:	signature:(global_State *g, LClosure *cl)
traverseephemeron	.//script/lua/lua-5.3.4/src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:	signature:(global_State *g, Table *h)
traverseproto	.//script/lua/lua-5.3.4/src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:	signature:(global_State *g, Proto *f)
traversestrongtable	.//script/lua/lua-5.3.4/src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:	signature:(global_State *g, Table *h)
traversetable	.//script/lua/lua-5.3.4/src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:	signature:(global_State *g, Table *h)
traversethread	.//script/lua/lua-5.3.4/src/lgc.c	/^static lu_mem traversethread (global_State *g, lua_State *th) {$/;"	f	file:	signature:(global_State *g, lua_State *th)
traverseweakvalue	.//script/lua/lua-5.3.4/src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:	signature:(global_State *g, Table *h)
treatstackoption	.//script/lua/lua-5.3.4/src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:	signature:(lua_State *L, lua_State *L1, const char *fname)
tremove	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
trim	.//script/lua/lua-5.3.4/src/lbitlib.c	/^#define trim(/;"	d	file:
tryLock	.//kit/Thread.h	/^    virtual int32_t tryLock() = 0;$/;"	p	class:kit::IMutex	access:public	signature:()
tryLock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Mutex::tryLock()$/;"	f	class:kit::Mutex	signature:()
tryLock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t SpinMutex::tryLock()$/;"	f	class:kit::SpinMutex	signature:()
tryLock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t tryLock();$/;"	p	class:kit::Mutex	access:public	signature:()
tryLock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t tryLock();$/;"	p	class:kit::SpinMutex	access:public	signature:()
tryfuncTM	.//script/lua/lua-5.3.4/src/ldo.c	/^static void tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:	signature:(lua_State *L, StkId func)
ts	.//script/lua/lua-5.3.4/src/llex.h	/^  TString *ts;$/;"	m	union:__anon8	access:public
ts	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct TString ts;$/;"	m	union:GCUnion	typeref:struct:GCUnion::TString	access:public
tsslen	.//script/lua/lua-5.3.4/src/lobject.h	/^#define tsslen(/;"	d
tsv	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString tsv;$/;"	m	union:UTString	access:public
tsvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define tsvalue(/;"	d
ttisCclosure	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisCclosure(/;"	d
ttisLclosure	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisLclosure(/;"	d
ttisboolean	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisboolean(/;"	d
ttisclosure	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisclosure(/;"	d
ttisdeadkey	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisdeadkey(/;"	d
ttisfloat	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisfloat(/;"	d
ttisfulluserdata	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisfulluserdata(/;"	d
ttisfunction	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisfunction(/;"	d
ttisinteger	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisinteger(/;"	d
ttislcf	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttislcf(/;"	d
ttislightuserdata	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttislightuserdata(/;"	d
ttislngstring	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttislngstring(/;"	d
ttisnil	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisnil(/;"	d
ttisnumber	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisnumber(/;"	d
ttisshrstring	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisshrstring(/;"	d
ttisstring	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisstring(/;"	d
ttistable	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttistable(/;"	d
ttisthread	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttisthread(/;"	d
ttnov	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttnov(/;"	d
ttuv_	.//script/lua/lua-5.3.4/src/lobject.h	/^  lu_byte ttuv_;  \/* user value's tag *\/$/;"	m	struct:Udata	access:public
ttype	.//script/lua/lua-5.3.4/src/lobject.h	/^#define ttype(/;"	d
ttypename	.//script/lua/lua-5.3.4/src/ltm.h	/^#define ttypename(/;"	d
tvk	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue tvk;$/;"	m	union:TKey	access:public
twoto	.//script/lua/lua-5.3.4/src/lobject.h	/^#define twoto(/;"	d
twups	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:global_State	typeref:struct:global_State::lua_State	access:public
twups	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct lua_State *twups;  \/* list of threads with open upvalues *\/$/;"	m	struct:lua_State	typeref:struct:lua_State::lua_State	access:public
txtToken	.//script/lua/lua-5.3.4/src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:	signature:(LexState *ls, int token)
type_	.//network/Protocol.h	/^    PTType type_;$/;"	m	class:kit::PTValue	access:protected
typeerror	.//script/lua/lua-5.3.4/src/lauxlib.c	/^static int typeerror (lua_State *L, int arg, const char *tname) {$/;"	f	file:	signature:(lua_State *L, int arg, const char *tname)
u	.//script/lua/lua-5.3.4/src/lfunc.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anon5	access:public
u	.//script/lua/lua-5.3.4/src/llimits.h	/^  double u;$/;"	m	union:__anon9	access:public
u	.//script/lua/lua-5.3.4/src/lobject.h	/^  } u;$/;"	m	struct:TString	typeref:union:TString::__anon10	access:public
u	.//script/lua/lua-5.3.4/src/lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon15	access:public
u	.//script/lua/lua-5.3.4/src/lstate.h	/^  struct Udata u;$/;"	m	union:GCUnion	typeref:struct:GCUnion::Udata	access:public
u	.//script/lua/lua-5.3.4/src/lstate.h	/^  } u;$/;"	m	struct:CallInfo	typeref:union:CallInfo::__anon18	access:public
u	.//script/lua/lua-5.3.4/src/lstrlib.c	/^  union { double d; void *p; lua_Integer i; lua_Number n; } u;$/;"	m	struct:cD	typeref:union:cD::__anon23	file:	access:public
u_posrelat	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static lua_Integer u_posrelat (lua_Integer pos, size_t len) {$/;"	f	file:	signature:(lua_Integer pos, size_t len)
uchar	.//script/lua/lua-5.3.4/src/lstrlib.c	/^#define uchar(/;"	d	file:
ud	.//script/lua/lua-5.3.4/src/lstate.h	/^  void *ud;         \/* auxiliary data to 'frealloc' *\/$/;"	m	struct:global_State	access:public
udata2finalize	.//script/lua/lua-5.3.4/src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:	signature:(global_State *g)
udatatypename	.//script/lua/lua-5.3.4/src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
unbound_search	.//script/lua/lua-5.3.4/src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:	signature:(Table *t, unsigned int j)
undefgoto	.//script/lua/lua-5.3.4/src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:	signature:(LexState *ls, Labeldesc *gt)
unlock	.//kit/Thread.h	/^    virtual int32_t unlock() = 0;$/;"	p	class:kit::IMutex	access:public	signature:()
unlock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t Mutex::unlock()$/;"	f	class:kit::Mutex	signature:()
unlock	.//kit/platform/linux/Thread_linux.cpp	/^int32_t SpinMutex::unlock()$/;"	f	class:kit::SpinMutex	signature:()
unlock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t unlock(); $/;"	p	class:kit::Mutex	access:public	signature:()
unlock	.//kit/platform/linux/Thread_linux.h	/^    virtual int32_t unlock(); $/;"	p	class:kit::SpinMutex	access:public	signature:()
unmakemask	.//script/lua/lua-5.3.4/src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:	signature:(int mask, char *smask)
unpack	.//script/lua/lua-5.3.4/src/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
unpackHeader	.//network/Packet.cpp	/^void Packet::unpackHeader(Buffer* head_buf)$/;"	f	class:kit::Packet	signature:(Buffer* head_buf)
unpackHeader	.//network/Packet.h	/^    void unpackHeader(Buffer* head_buf);$/;"	p	class:kit::Packet	access:public	signature:(Buffer* head_buf)
unpackint	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static lua_Integer unpackint (lua_State *L, const char *str,$/;"	f	file:	signature:(lua_State *L, const char *str, int islittle, int size, int issigned)
unroll	.//script/lua/lua-5.3.4/src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:	signature:(lua_State *L, void *ud)
unsArray	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::unsArray(kit::PTData* data, const LuaIntf::LuaRef* table)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
unsArray	.//script/lua/LuaProtocol.h	/^    void unsArray(kit::PTData* data, const LuaIntf::LuaRef* table);$/;"	p	class:LuaPTCreator	access:private	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
unsTable	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::unsTable(kit::PTData* data, const LuaIntf::LuaRef* table)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
unsTable	.//script/lua/LuaProtocol.h	/^    void unsTable(kit::PTData* data, const LuaIntf::LuaRef* table);$/;"	p	class:LuaPTCreator	access:private	signature:(kit::PTData* data, const LuaIntf::LuaRef* table)
unsValue	.//script/lua/LuaProtocol.cpp	/^void LuaPTCreator::unsValue(kit::PTData* data, const LuaIntf::LuaRef* t)$/;"	f	class:LuaPTCreator	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
unsValue	.//script/lua/LuaProtocol.h	/^    void unsValue(kit::PTData* data, const LuaIntf::LuaRef* t);$/;"	p	class:LuaPTCreator	access:private	signature:(kit::PTData* data, const LuaIntf::LuaRef* t)
unserialize	.//network/Protocol.cpp	/^bool PTArray::unserialize(Buffer* buffer)$/;"	f	class:kit::PTArray	signature:(Buffer* buffer)
unserialize	.//network/Protocol.cpp	/^bool PTTable::unserialize(Buffer* buffer)$/;"	f	class:kit::PTTable	signature:(Buffer* buffer)
unserialize	.//network/Protocol.cpp	/^bool PTValue<T>::unserialize(Buffer* buffer)$/;"	f	class:kit::PTValue	signature:(Buffer* buffer)
unserialize	.//network/Protocol.cpp	/^bool PTVarint::unserialize(Buffer* buffer)$/;"	f	class:kit::PTVarint	signature:(Buffer* buffer)
unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* Buffer);$/;"	p	class:kit::PTArray	access:public	signature:(Buffer* Buffer)
unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer) = 0;$/;"	p	class:kit::PTData	access:public	signature:(Buffer* buffer)
unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer);$/;"	p	class:kit::PTTable	access:public	signature:(Buffer* buffer)
unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer);$/;"	p	class:kit::PTValue	access:public	signature:(Buffer* buffer)
unserialize	.//network/Protocol.h	/^    virtual bool unserialize(Buffer* buffer);$/;"	p	class:kit::PTVarint	access:public	signature:(Buffer* buffer)
unserializeFromTable	.//script/lua/LuaProtocol.cpp	/^void LuaProtocol::unserializeFromTable(lua_State* L)$/;"	f	class:LuaProtocol	signature:(lua_State* L)
unserializeFromTable	.//script/lua/LuaProtocol.h	/^    void unserializeFromTable(lua_State* L);$/;"	p	class:LuaProtocol	access:public	signature:(lua_State* L)
update	.//debug/DebugInput.cpp	/^void DebugInput::update()$/;"	f	class:kit::DebugInput	signature:()
update	.//debug/DebugInput.h	/^    virtual void update();$/;"	p	class:kit::DebugInput	access:public	signature:()
update	.//kit/Ref.cpp	/^void Ref::update()$/;"	f	class:kit::Ref	signature:()
update	.//kit/Ref.h	/^    virtual void update();$/;"	p	class:kit::Ref	access:public	signature:()
update	.//kit/Timer.cpp	/^void Timer::update()$/;"	f	class:kit::Timer	signature:()
update	.//kit/Timer.h	/^    void update();$/;"	p	class:kit::Timer	access:public	signature:()
update	.//network/Client.cpp	/^void IClient::update()$/;"	f	class:kit::IClient	signature:()
update	.//network/Client.h	/^    virtual void update();$/;"	p	class:kit::IClient	access:public	signature:()
update	.//network/Server.cpp	/^void IServer::update()$/;"	f	class:kit::IServer	signature:()
update	.//network/Server.h	/^    virtual void update() = 0;$/;"	p	class:kit::IServer	access:public	signature:()
update	.//network/platform/linux/Client_linux.cpp	/^void Client::update()$/;"	f	class:kit::Client	signature:()
update	.//network/platform/linux/Client_linux.h	/^    virtual void update();$/;"	p	class:kit::Client	access:public	signature:()
update	.//network/platform/linux/Server_linux.cpp	/^void Server::update()$/;"	f	class:kit::Server	signature:()
update	.//network/platform/linux/Server_linux.h	/^    virtual void update();$/;"	p	class:kit::Server	access:public	signature:()
upisopen	.//script/lua/lua-5.3.4/src/lfunc.h	/^#define upisopen(/;"	d
upval	.//script/lua/lua-5.3.4/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:	access:public
upvalname	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:	signature:(Proto *p, int uv)
upvals	.//script/lua/lua-5.3.4/src/lobject.h	/^  UpVal *upvals[1];  \/* list of upvalues *\/$/;"	m	struct:LClosure	access:public
upvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^  TValue upvalue[1];  \/* list of upvalues *\/$/;"	m	struct:CClosure	access:public
upvalues	.//script/lua/lua-5.3.4/src/lobject.h	/^  Upvaldesc *upvalues;  \/* upvalue information *\/$/;"	m	struct:Proto	access:public
usage	.//script/lua/lua-5.3.4/src/luac.c	/^static void usage(const char* message)$/;"	f	file:	signature:(const char* message)
user_	.//script/lua/lua-5.3.4/src/lobject.h	/^  union Value user_;  \/* user value *\/$/;"	m	struct:Udata	typeref:union:Udata::Value	access:public
utf8_decode	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static const char *utf8_decode (const char *o, int *val) {$/;"	f	file:	signature:(const char *o, int *val)
utf8esc	.//script/lua/lua-5.3.4/src/llex.c	/^static void utf8esc (LexState *ls) {$/;"	f	file:	signature:(LexState *ls)
utfchar	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static int utfchar (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
utflen	.//script/lua/lua-5.3.4/src/lutf8lib.c	/^static int utflen (lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
uv	.//script/lua/lua-5.3.4/src/lobject.h	/^  Udata uv;$/;"	m	union:UUdata	access:public
uvalue	.//script/lua/lua-5.3.4/src/lobject.h	/^#define uvalue(/;"	d
v	.//script/lua/lua-5.3.4/src/lfunc.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal	access:public
v	.//script/lua/lua-5.3.4/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:	access:public
v	.//script/lua/lua-5.3.4/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:	access:public
val_	.//script/lua/lua-5.3.4/src/lobject.h	/^#define val_(/;"	d
valid	.//network/SockAddr.h	/^    bool valid() const { return valid_; }$/;"	f	class:kit::ISockAddr	access:public	signature:() const
valid	.//network/Socket.h	/^    bool valid() const { return sock_ != DSOCKERR; }$/;"	f	class:kit::ISocket	access:public	signature:() const
valid_	.//Gear.h	/^    bool valid_;$/;"	m	class:kit::Gear	access:protected
valid_	.//network/SockAddr.h	/^    bool valid_;$/;"	m	class:kit::ISockAddr	access:protected
validop	.//script/lua/lua-5.3.4/src/lcode.c	/^static int validop (int op, TValue *v1, TValue *v2) {$/;"	f	file:	signature:(int op, TValue *v1, TValue *v2)
valiswhite	.//script/lua/lua-5.3.4/src/lgc.c	/^#define valiswhite(/;"	d	file:
value	.//base/Array.h	/^        Type value;$/;"	m	struct:kit::Array::Item	access:public
value	.//base/List.h	/^        Type value;$/;"	m	struct:kit::List::Item	access:public
value	.//base/Map.h	/^        ValueType value;$/;"	m	struct:kit::Map::Item	access:public
value	.//script/lua/lua-5.3.4/src/lfunc.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anon5	access:public
value_	.//network/Protocol.h	/^    T value_;$/;"	m	class:kit::PTValue	access:protected
value_apis_	.//script/lua/LuaProtocol.h	/^    PTValueAPI value_apis_[toint(kit::PTType::MAX)];$/;"	m	class:LuaPTCreator	access:private
varinfo	.//script/lua/lua-5.3.4/src/ldebug.c	/^static const char *varinfo (lua_State *L, const TValue *o) {$/;"	f	file:	signature:(lua_State *L, const TValue *o)
varname	.//script/lua/lua-5.3.4/src/lobject.h	/^  TString *varname;$/;"	m	struct:LocVar	access:public
vec_	.//base/Map.h	/^    ItemList vec_[Length];$/;"	m	class:kit::Map	access:private
version	.//script/lua/lua-5.3.4/src/lstate.h	/^  const lua_Number *version;  \/* pointer to version number *\/$/;"	m	struct:global_State	access:public
vkisinreg	.//script/lua/lua-5.3.4/src/lparser.h	/^#define vkisinreg(/;"	d
vkisvar	.//script/lua/lua-5.3.4/src/lparser.h	/^#define vkisvar(/;"	d
vmbreak	.//script/lua/lua-5.3.4/src/lvm.c	/^#define vmbreak	/;"	d	file:
vmcase	.//script/lua/lua-5.3.4/src/lvm.c	/^#define vmcase(/;"	d	file:
vmdispatch	.//script/lua/lua-5.3.4/src/lvm.c	/^#define vmdispatch(/;"	d	file:
vmfetch	.//script/lua/lua-5.3.4/src/lvm.c	/^#define vmfetch(/;"	d	file:
vslen	.//script/lua/lua-5.3.4/src/lobject.h	/^#define vslen(/;"	d
vt	.//script/lua/lua-5.3.4/src/lparser.h	/^      lu_byte vt;  \/* whether 't' is register (VLOCAL) or upvalue (VUPVAL) *\/$/;"	m	struct:expdesc::__anon15::__anon16	access:public
wait_time_	.//Gear.h	/^    uint32_t wait_time_;$/;"	m	class:kit::Gear	access:private
weak	.//script/lua/lua-5.3.4/src/lstate.h	/^  GCObject *weak;  \/* list of tables with weak values *\/$/;"	m	struct:global_State	access:public
wgkey	.//script/lua/lua-5.3.4/src/ltable.h	/^#define wgkey(/;"	d
what	.//script/lua/lua-5.3.4/src/lua.h	/^  const char *what;	\/* (S) 'Lua', 'C', 'main', 'tail' *\/$/;"	m	struct:lua_Debug	access:public
wheeling	.//kit/Timer.cpp	/^void Timer::wheeling(uint8_t index)$/;"	f	class:kit::Timer	signature:(uint8_t index)
wheeling	.//kit/Timer.h	/^    void wheeling(uint8_t index = 0);$/;"	p	class:kit::Timer	access:private	signature:(uint8_t index = 0)
wheels_	.//kit/Timer.h	/^    Wheel wheels_[4];$/;"	m	class:kit::Timer	access:private
whilestat	.//script/lua/lua-5.3.4/src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:	signature:(LexState *ls, int line)
white2gray	.//script/lua/lua-5.3.4/src/lgc.c	/^#define white2gray(/;"	d	file:
writeBuffer	.//kit/Buffer.cpp	/^bool Buffer::writeBuffer(const void* buf, size_t size)$/;"	f	class:kit::Buffer	signature:(const void* buf, size_t size)
writeBuffer	.//kit/Buffer.h	/^    bool writeBuffer(const void* buf, size_t size);$/;"	p	class:kit::Buffer	access:public	signature:(const void* buf, size_t size)
writeCur	.//kit/Buffer.h	/^    char* writeCur();$/;"	p	class:kit::Buffer	access:public	signature:()
writeCur	.//kit/impl/BufferImpl.h	/^inline char* Buffer::writeCur()$/;"	f	class:kit::Buffer	signature:()
writeLog	.//kit/Logger.h	/^    void writeLog(const char* format, ...)$/;"	f	class:kit::Logger	access:public	signature:(const char* format, ...)
writeNone	.//kit/Logger.h	/^    void writeNone(const char* format, ...) {};$/;"	f	class:kit::Logger	access:public	signature:(const char* format, ...)
writeVarint	.//kit/Buffer.h	/^    bool writeVarint(T value);$/;"	p	class:kit::Buffer	access:public	signature:(T value)
writeVarint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::writeVarint(T value)$/;"	f	class:kit::Buffer	signature:(T value)
writeVaruint	.//kit/Buffer.h	/^    bool writeVaruint(T value);$/;"	p	class:kit::Buffer	access:public	signature:(T value)
writeVaruint	.//kit/impl/BufferImpl.h	/^inline bool Buffer::writeVaruint(T value)$/;"	f	class:kit::Buffer	signature:(T value)
writeVector	.//kit/Buffer.h	/^    bool writeVector(const std::vector<T>& vec);$/;"	p	class:kit::Buffer	access:public	signature:(const std::vector<T>& vec)
writeVector	.//kit/impl/BufferImpl.h	/^inline bool Buffer::writeVector(const std::vector<T>& vec)$/;"	f	class:kit::Buffer	signature:(const std::vector<T>& vec)
write_cur_	.//kit/Buffer.h	/^    uint8_t* write_cur_;$/;"	m	class:kit::Buffer	access:protected
writer	.//script/lua/lua-5.3.4/src/ldump.c	/^  lua_Writer writer;$/;"	m	struct:__anon4	file:	access:public
writer	.//script/lua/lua-5.3.4/src/lstrlib.c	/^static int writer (lua_State *L, const void *b, size_t size, void *B) {$/;"	f	file:	signature:(lua_State *L, const void *b, size_t size, void *B)
writer	.//script/lua/lua-5.3.4/src/luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	file:	signature:(lua_State* L, const void* p, size_t size, void* u)
yindex	.//script/lua/lua-5.3.4/src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:	signature:(LexState *ls, expdesc *v)
z	.//script/lua/lua-5.3.4/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:	access:public
z	.//script/lua/lua-5.3.4/src/llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState	access:public
zgetc	.//script/lua/lua-5.3.4/src/lzio.h	/^#define zgetc(/;"	d
~AutoLock	.//kit/Thread.cpp	/^AutoLock::~AutoLock()$/;"	f	class:kit::AutoLock	signature:()
~AutoLock	.//kit/Thread.h	/^    ~AutoLock();$/;"	p	class:kit::AutoLock	access:public	signature:()
~Buffer	.//kit/Buffer.cpp	/^Buffer::~Buffer()$/;"	f	class:kit::Buffer	signature:()
~Buffer	.//kit/Buffer.h	/^    virtual ~Buffer();$/;"	p	class:kit::Buffer	access:public	signature:()
~BufferPool	.//kit/BufferPool.cpp	/^BufferPool::~BufferPool()$/;"	f	class:kit::BufferPool	signature:()
~BufferPool	.//kit/BufferPool.h	/^    virtual ~BufferPool();$/;"	p	class:kit::BufferPool	access:public	signature:()
~BufferPoolManager	.//kit/BufferPool.cpp	/^BufferPoolManager::~BufferPoolManager()$/;"	f	class:kit::BufferPoolManager	signature:()
~BufferPoolManager	.//kit/BufferPool.h	/^    virtual ~BufferPoolManager();$/;"	p	class:kit::BufferPoolManager	access:public	signature:()
~Client	.//network/platform/linux/Client_linux.cpp	/^Client::~Client()$/;"	f	class:kit::Client	signature:()
~Client	.//network/platform/linux/Client_linux.h	/^    virtual ~Client();$/;"	p	class:kit::Client	access:public	signature:()
~DebugInput	.//debug/DebugInput.cpp	/^DebugInput::~DebugInput()$/;"	f	class:kit::DebugInput	signature:()
~DebugInput	.//debug/DebugInput.h	/^    virtual ~DebugInput();$/;"	p	class:kit::DebugInput	access:public	signature:()
~Emitter	.//kit/Emitter.h	/^    ~Emitter()$/;"	f	class:kit::Emitter	access:public	signature:()
~Gear	.//Gear.cpp	/^Gear::~Gear()$/;"	f	class:kit::Gear	signature:()
~Gear	.//Gear.h	/^    virtual ~Gear();$/;"	p	class:kit::Gear	access:public	signature:()
~IClient	.//network/Client.cpp	/^IClient::~IClient()$/;"	f	class:kit::IClient	signature:()
~IClient	.//network/Client.h	/^    virtual ~IClient();$/;"	p	class:kit::IClient	access:public	signature:()
~IMutex	.//kit/Thread.h	/^    virtual ~IMutex() {}$/;"	f	class:kit::IMutex	access:public	signature:()
~IServer	.//network/Server.cpp	/^IServer::~IServer()$/;"	f	class:kit::IServer	signature:()
~IServer	.//network/Server.h	/^    virtual ~IServer();$/;"	p	class:kit::IServer	access:public	signature:()
~ISockAddr	.//network/SockAddr.cpp	/^ISockAddr::~ISockAddr()$/;"	f	class:kit::ISockAddr	signature:()
~ISockAddr	.//network/SockAddr.h	/^    virtual ~ISockAddr();$/;"	p	class:kit::ISockAddr	access:public	signature:()
~ISocket	.//network/Socket.cpp	/^ISocket::~ISocket()$/;"	f	class:kit::ISocket	signature:()
~ISocket	.//network/Socket.h	/^	virtual ~ISocket();$/;"	p	class:kit::ISocket	access:public	signature:()
~IThread	.//kit/Thread.cpp	/^IThread::~IThread()$/;"	f	class:kit::IThread	signature:()
~IThread	.//kit/Thread.h	/^    virtual ~IThread();$/;"	p	class:kit::IThread	access:public	signature:()
~JSCore	.//script/js/JSCore.cpp	/^JSCore::~JSCore()$/;"	f	class:JSCore	signature:()
~JSCore	.//script/js/JSCore.h	/^    virtual ~JSCore();$/;"	p	class:JSCore	access:public	signature:()
~List	.//base/List.h	/^    ~List()$/;"	f	class:kit::List	access:public	signature:()
~Logger	.//kit/Logger.cpp	/^Logger::~Logger()$/;"	f	class:kit::Logger	signature:()
~Logger	.//kit/Logger.h	/^    ~Logger();$/;"	p	class:kit::Logger	access:public	signature:()
~LuaCore	.//script/lua/LuaCore.cpp	/^LuaCore::~LuaCore()$/;"	f	class:LuaCore	signature:()
~LuaCore	.//script/lua/LuaCore.h	/^    virtual ~LuaCore();$/;"	p	class:LuaCore	access:public	signature:()
~LuaPTCreator	.//script/lua/LuaProtocol.cpp	/^LuaPTCreator::~LuaPTCreator()$/;"	f	class:LuaPTCreator	signature:()
~LuaPTCreator	.//script/lua/LuaProtocol.h	/^    virtual ~LuaPTCreator();$/;"	p	class:LuaPTCreator	access:public	signature:()
~LuaProtocol	.//script/lua/LuaProtocol.cpp	/^LuaProtocol::~LuaProtocol()$/;"	f	class:LuaProtocol	signature:()
~LuaProtocol	.//script/lua/LuaProtocol.h	/^    virtual ~LuaProtocol();$/;"	p	class:LuaProtocol	access:public	signature:()
~Map	.//base/Map.h	/^    ~Map()$/;"	f	class:kit::Map	access:public	signature:()
~Mutex	.//kit/platform/linux/Thread_linux.cpp	/^Mutex::~Mutex()$/;"	f	class:kit::Mutex	signature:()
~Mutex	.//kit/platform/linux/Thread_linux.h	/^    virtual ~Mutex();$/;"	p	class:kit::Mutex	access:public	signature:()
~PTArray	.//network/Protocol.cpp	/^PTArray::~PTArray()$/;"	f	class:kit::PTArray	signature:()
~PTArray	.//network/Protocol.h	/^    virtual ~PTArray();$/;"	p	class:kit::PTArray	access:public	signature:()
~PTData	.//network/Protocol.h	/^    virtual ~PTData() {}$/;"	f	class:kit::PTData	access:public	signature:()
~PTDataCreator	.//network/Protocol.cpp	/^PTDataCreator::~PTDataCreator()$/;"	f	class:kit::PTDataCreator	signature:()
~PTDataCreator	.//network/Protocol.h	/^    virtual ~PTDataCreator();$/;"	p	class:kit::PTDataCreator	access:public	signature:()
~PTTable	.//network/Protocol.cpp	/^PTTable::~PTTable()$/;"	f	class:kit::PTTable	signature:()
~PTTable	.//network/Protocol.h	/^    virtual ~PTTable();$/;"	p	class:kit::PTTable	access:public	signature:()
~Packet	.//network/Packet.cpp	/^Packet::~Packet()$/;"	f	class:kit::Packet	signature:()
~Packet	.//network/Packet.h	/^    virtual ~Packet();$/;"	p	class:kit::Packet	access:public	signature:()
~Protocol	.//network/Protocol.cpp	/^Protocol::~Protocol()$/;"	f	class:kit::Protocol	signature:()
~Protocol	.//network/Protocol.h	/^    virtual ~Protocol();$/;"	p	class:kit::Protocol	access:public	signature:()
~Ref	.//kit/Ref.cpp	/^Ref::~Ref()$/;"	f	class:kit::Ref	signature:()
~Ref	.//kit/Ref.h	/^    virtual ~Ref();$/;"	p	class:kit::Ref	access:public	signature:()
~RefPool	.//kit/RefPool.cpp	/^RefPool::~RefPool()$/;"	f	class:kit::RefPool	signature:()
~RefPool	.//kit/RefPool.h	/^    virtual ~RefPool();$/;"	p	class:kit::RefPool	access:public	signature:()
~RefPoolManager	.//kit/RefPool.cpp	/^RefPoolManager::~RefPoolManager()$/;"	f	class:kit::RefPoolManager	signature:()
~RefPoolManager	.//kit/RefPool.h	/^    virtual ~RefPoolManager();$/;"	p	class:kit::RefPoolManager	access:public	signature:()
~ScriptCore	.//script/ScriptSupport.h	/^    virtual ~ScriptCore() {}$/;"	f	class:kit::ScriptCore	access:public	signature:()
~ScriptManager	.//script/ScriptSupport.cpp	/^ScriptManager::~ScriptManager()$/;"	f	class:kit::ScriptManager	signature:()
~ScriptManager	.//script/ScriptSupport.h	/^    virtual ~ScriptManager();$/;"	p	class:kit::ScriptManager	access:public	signature:()
~Server	.//network/platform/linux/Server_linux.cpp	/^Server::~Server()$/;"	f	class:kit::Server	signature:()
~Server	.//network/platform/linux/Server_linux.h	/^    virtual ~Server();$/;"	p	class:kit::Server	access:public	signature:()
~Server	.//network/platform/win/Server.cpp	/^Server::~Server()$/;"	f	class:kit::Server	signature:()
~Session	.//network/Session.cpp	/^Session::~Session()$/;"	f	class:kit::Session	signature:()
~Session	.//network/Session.h	/^    virtual ~Session();$/;"	p	class:kit::Session	access:public	signature:()
~SockAddr	.//network/platform/linux/SockAddr_linux.cpp	/^SockAddr::~SockAddr()$/;"	f	class:kit::SockAddr	signature:()
~SockAddr	.//network/platform/linux/SockAddr_linux.h	/^    virtual ~SockAddr();$/;"	p	class:kit::SockAddr	access:public	signature:()
~SockAddr	.//network/platform/win/SockAddr.cpp	/^SockAddr::~SockAddr()$/;"	f	class:kit::SockAddr	signature:()
~Socket	.//network/platform/win/Socket.cpp	/^Socket::~Socket()$/;"	f	class:kit::Socket	signature:()
~SpinMutex	.//kit/platform/linux/Thread_linux.cpp	/^SpinMutex::~SpinMutex()$/;"	f	class:kit::SpinMutex	signature:()
~SpinMutex	.//kit/platform/linux/Thread_linux.h	/^    virtual ~SpinMutex();$/;"	p	class:kit::SpinMutex	access:public	signature:()
~Terminal	.//network/Terminal.cpp	/^Terminal::~Terminal()$/;"	f	class:kit::Terminal	signature:()
~Terminal	.//network/Terminal.h	/^    virtual ~Terminal();$/;"	p	class:kit::Terminal	access:public	signature:()
~Thread	.//kit/platform/linux/Thread_linux.cpp	/^Thread::~Thread()$/;"	f	class:kit::Thread	signature:()
~Thread	.//kit/platform/linux/Thread_linux.h	/^    virtual ~Thread();$/;"	p	class:kit::Thread	access:public	signature:()
~Timer	.//kit/Timer.cpp	/^Timer::~Timer()$/;"	f	class:kit::Timer	signature:()
~Timer	.//kit/Timer.h	/^    virtual ~Timer();$/;"	p	class:kit::Timer	access:public	signature:()
~Wheel	.//kit/Timer.cpp	/^Timer::Wheel::~Wheel()$/;"	f	class:kit::Timer::Wheel	signature:()
~Wheel	.//kit/Timer.h	/^    ~Wheel();$/;"	p	struct:kit::Timer::Wheel	access:public	signature:()
